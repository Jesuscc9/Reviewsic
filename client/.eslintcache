[{"C:\\Users\\Jesús9\\Desktop\\gf\\client\\src\\index.js":"1","C:\\Users\\Jesús9\\Desktop\\gf\\client\\src\\App.js":"2","C:\\Users\\Jesús9\\Desktop\\gf\\client\\src\\pages\\Home.js":"3","C:\\Users\\Jesús9\\Desktop\\gf\\client\\src\\pages\\NotFound.js":"4","C:\\Users\\Jesús9\\Desktop\\gf\\client\\src\\pages\\Register.js":"5","C:\\Users\\Jesús9\\Desktop\\gf\\client\\src\\components\\Footer.js":"6","C:\\Users\\Jesús9\\Desktop\\gf\\client\\src\\components\\Navbar.js":"7","C:\\Users\\Jesús9\\Desktop\\gf\\client\\src\\data\\spotifyApi.js":"8","C:\\Users\\Jesús9\\Desktop\\gf\\client\\src\\components\\Card.js":"9","C:\\Users\\Jesús9\\Desktop\\gf\\client\\src\\components\\Loader.js":"10","C:\\Users\\Jesús9\\Desktop\\gf\\client\\src\\components\\CardsCarousel.js":"11","C:\\Users\\Jesús9\\Desktop\\gf\\client\\src\\components\\UpdateForm.js":"12","C:\\Users\\Jesús9\\Desktop\\gf\\client\\src\\components\\DropdownMenu.js":"13","C:\\Users\\Jesús9\\Desktop\\gf\\client\\src\\components\\Contacts.js":"14","C:\\Users\\Jesús9\\Desktop\\gf\\client\\src\\components\\Login.js":"15","C:\\Users\\Jesús9\\Desktop\\gf\\client\\src\\data\\api.js":"16","C:\\Users\\Jesús9\\Desktop\\gf\\client\\src\\components\\RegisterForm.js":"17","C:\\Users\\Jesús9\\Desktop\\gf\\client\\src\\components\\CarouselRow.js":"18","C:\\Users\\Jesús9\\Desktop\\gf\\client\\src\\redux\\store.js":"19","C:\\Users\\Jesús9\\Desktop\\gf\\client\\src\\redux\\rootReducer.js":"20","C:\\Users\\Jesús9\\Desktop\\gf\\client\\src\\redux\\user\\reducer.js":"21","C:\\Users\\Jesús9\\Desktop\\gf\\client\\src\\redux\\user\\actions.js":"22","C:\\Users\\Jesús9\\Desktop\\gf\\client\\src\\pages\\styles\\Home.style.js":"23","C:\\Users\\Jesús9\\Desktop\\gf\\client\\src\\components\\CompleteCard.js":"24","C:\\Users\\Jesús9\\Desktop\\gf\\client\\src\\components\\styles\\CompleteCard.style.js":"25","C:\\Users\\Jesús9\\Desktop\\gf\\client\\src\\components\\styles\\Card.style.js":"26","C:\\Users\\Jesús9\\Desktop\\gf\\client\\src\\components\\CardsList.js":"27","C:\\Users\\Jesús9\\Desktop\\gf\\client\\src\\components\\styles\\CardsList.style.js":"28","C:\\Users\\Jesús9\\Desktop\\gf\\client\\src\\pages\\styles\\Register.style.js":"29"},{"size":154,"mtime":1609448931722,"results":"30","hashOfConfig":"31"},{"size":757,"mtime":1620485151291,"results":"32","hashOfConfig":"31"},{"size":18066,"mtime":1620619991934,"results":"33","hashOfConfig":"31"},{"size":153,"mtime":1615830035514,"results":"34","hashOfConfig":"31"},{"size":12656,"mtime":1620571946000,"results":"35","hashOfConfig":"31"},{"size":1545,"mtime":1620440392413,"results":"36","hashOfConfig":"31"},{"size":3116,"mtime":1620451371657,"results":"37","hashOfConfig":"31"},{"size":4251,"mtime":1620435206649,"results":"38","hashOfConfig":"31"},{"size":5741,"mtime":1620627791311,"results":"39","hashOfConfig":"31"},{"size":320,"mtime":1616533791478,"results":"40","hashOfConfig":"31"},{"size":2125,"mtime":1620450620361,"results":"41","hashOfConfig":"31"},{"size":3678,"mtime":1620439154392,"results":"42","hashOfConfig":"31"},{"size":3883,"mtime":1618460057843,"results":"43","hashOfConfig":"31"},{"size":2207,"mtime":1620331378634,"results":"44","hashOfConfig":"31"},{"size":418,"mtime":1618459624254,"results":"45","hashOfConfig":"31"},{"size":2554,"mtime":1620251981637,"results":"46","hashOfConfig":"31"},{"size":11159,"mtime":1620448162395,"results":"47","hashOfConfig":"31"},{"size":3496,"mtime":1620450568965,"results":"48","hashOfConfig":"31"},{"size":216,"mtime":1618619049823,"results":"49","hashOfConfig":"31"},{"size":115,"mtime":1618618520197,"results":"50","hashOfConfig":"31"},{"size":501,"mtime":1620438218578,"results":"51","hashOfConfig":"31"},{"size":385,"mtime":1620438257039,"results":"52","hashOfConfig":"31"},{"size":5323,"mtime":1620619163856,"results":"53","hashOfConfig":"31"},{"size":9556,"mtime":1620663653152,"results":"54","hashOfConfig":"31"},{"size":9629,"mtime":1620663720388,"results":"55","hashOfConfig":"31"},{"size":5873,"mtime":1620662309007,"results":"56","hashOfConfig":"31"},{"size":684,"mtime":1620439063721,"results":"57","hashOfConfig":"31"},{"size":193,"mtime":1620532998245,"results":"58","hashOfConfig":"31"},{"size":1876,"mtime":1620449500478,"results":"59","hashOfConfig":"31"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},"kcwhv6",{"filePath":"63","messages":"64","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"62"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68","usedDeprecatedRules":"62"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"62"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76","usedDeprecatedRules":"62"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"62"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82","usedDeprecatedRules":"62"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85","usedDeprecatedRules":"62"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"91","usedDeprecatedRules":"62"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"96","usedDeprecatedRules":"62"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"99","usedDeprecatedRules":"62"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"104","usedDeprecatedRules":"62"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"107","usedDeprecatedRules":"62"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"110","usedDeprecatedRules":"62"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"125","messages":"126","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"127","messages":"128","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"129","usedDeprecatedRules":"62"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},"C:\\Users\\Jesús9\\Desktop\\gf\\client\\src\\index.js",[],["134","135"],"C:\\Users\\Jesús9\\Desktop\\gf\\client\\src\\App.js",["136","137"],"import React from \"react\";\nimport { BrowserRouter, Switch, Route } from \"react-router-dom\";\nimport { Provider } from \"react-redux\";\nimport { AnimateSharedLayout, AnimatePresence } from \"framer-motion\";\n\nimport { store } from \"./redux/store\";\nimport Home from \"./pages/Home\";\n\nimport Register from \"./pages/Register\";\nimport NotFound from \"./pages/NotFound\";\n\nconst App = () => {\n  return (\n    <Provider store={store}>\n      <AnimateSharedLayout type=\"crossfade\">\n        <BrowserRouter>\n          <Route exact path={[\"/home\", \"/home/:id\"]} component={Register} />\n          <Route exact path=\"/\" component={Home} />\n          <Route component={NotFound} />\n        </BrowserRouter>\n      </AnimateSharedLayout>\n    </Provider>\n  );\n};\n\nexport default App;\n","C:\\Users\\Jesús9\\Desktop\\gf\\client\\src\\pages\\Home.js",["138","139","140","141","142","143","144","145"],"import React, { useState, useEffect, useRef } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport { SpotifyAuth, Scopes } from \"react-spotify-auth\";\r\nimport { SpotifyApiContext } from \"react-spotify-api\";\r\nimport { AnimatePresence, motion } from \"framer-motion\";\r\n\r\nimport \"../assets/animate.css\";\r\nimport \"react-spotify-auth/dist/index.css?v=2\";\r\n\r\nimport Parallax from \"parallax-js\";\r\nimport Stars from \"../assets/img/star.svg\";\r\nimport Moonlight from \"../assets/img/moonlight.png\";\r\nimport Reviewsic from \"../assets/img/reviewsic.svg\";\r\nimport Clairo from \"../assets/img/clairo.png\";\r\nimport Clairo2 from \"../assets/img/clairo2.png\";\r\nimport Clairo3 from \"../assets/img/clairo3.png\";\r\nimport Slash from \"../assets/img/slash.png\";\r\nimport StarBackground from \"../assets/img/stars-back.png\";\r\nimport Cookies from \"js-cookie\";\r\nimport Planet1 from \"../assets/img/planet1.png\";\r\nimport Planet2 from \"../assets/img/planet2.png\";\r\nimport Planet3 from \"../assets/img/planet3.png\";\r\nimport ReviewsicSVG from \"../assets/img/reviewsicFilled.svg\";\r\n\r\nimport { Scene, GlobalStyle } from \"./styles/Home.style\";\r\n\r\nconst Home = () => {\r\n  const [showSvg, setShowSvg] = useState(true);\r\n  const [showLogin, setShowLogin] = useState(false);\r\n\r\n  let endedAnim = false;\r\n\r\n  const pathVariants = {\r\n    hidden: {\r\n      opacity: 0,\r\n      pathLength: 0,\r\n    },\r\n    visible: {\r\n      opacity: 1,\r\n      pathLength: 1,\r\n      transition: {\r\n        delay: 0.5,\r\n        duration: 2.3,\r\n        ease: \"easeInOut\",\r\n      },\r\n      transitionEnd: () => {\r\n        if (!endedAnim) {\r\n          setTimeout(() => {\r\n            if (svgRef.current) {\r\n              svgRef.current.style.opacity = 0;\r\n              setShowSvg(false);\r\n            }\r\n            endedAnim = true;\r\n          }, 300);\r\n        }\r\n      },\r\n    },\r\n    exit: {\r\n      opacity: 0,\r\n    },\r\n  };\r\n\r\n  const svgVariants = {\r\n    visible: {\r\n      opacity: [0.1, 1, 0.5],\r\n    },\r\n    hidden: {\r\n      opacity: 0.5,\r\n    },\r\n    transition: {\r\n      duration: 0.1,\r\n    },\r\n  };\r\n\r\n  const [token, setToken] = useState(Cookies.get(\"spotifyAuthToken\"));\r\n\r\n  const sceneEl = useRef(null);\r\n  const stars = useRef(null);\r\n  const clairo = useRef(null);\r\n  const slash = useRef(null);\r\n  const login = useRef(null);\r\n  const svgRef = useRef(null);\r\n\r\n  const elements = {\r\n    objects: document.getElementsByName(\"element\"),\r\n    on: function () {\r\n      this.objects.forEach((el) => {\r\n        if (el.className.includes(\"clairo\")) el.style.opacity = \"0.8\";\r\n        else el.style.opacity = \"1\";\r\n      });\r\n\r\n      stars.current.classList.add(\"star-shadow\");\r\n      stars.current.style.opacity = \"1\";\r\n    },\r\n    off: function () {\r\n      this.objects.forEach((el) => {\r\n        if (el.className.includes(\"clairo\")) el.style.opacity = \"0.5\";\r\n        else el.style.opacity = \"0.7\";\r\n      });\r\n\r\n      stars.current.classList.remove(\"star-shadow\");\r\n      stars.current.style.opacity = \"0.2\";\r\n    },\r\n  };\r\n\r\n  useEffect(() => {\r\n    setToken(Cookies.get(\"spotifyAuthToken\"));\r\n    const parallaxInstance = new Parallax(sceneEl.current, {\r\n      relativeInput: true,\r\n      precision: 0.1,\r\n    });\r\n\r\n    parallaxInstance.enable();\r\n\r\n    return () => parallaxInstance.disable();\r\n  }, []);\r\n\r\n  const handleClick = (e) => {\r\n    setShowLogin(true);\r\n    e.preventDefault();\r\n    elements.off();\r\n\r\n    setTimeout(() => {\r\n      login.current.style.display = \"flex\";\r\n    }, 500);\r\n  };\r\n\r\n  const onMouseEnter = (e) => {\r\n    e.preventDefault();\r\n    elements.on();\r\n  };\r\n\r\n  const onMouseLeave = (e) => {\r\n    e.preventDefault();\r\n    elements.off();\r\n  };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <GlobalStyle />\r\n      <AnimatePresence>\r\n        <motion.div\r\n          className=\"header\"\r\n          initial={{ opacity: 0 }}\r\n          animate={{ opacity: 1 }}\r\n          exit={{\r\n            opacity: 0,\r\n          }}\r\n          style={{ display: !showLogin ? \"block\" : \"none\" }}\r\n        >\r\n          <motion.button\r\n            className=\"try-button\"\r\n            id=\"try-button\"\r\n            onMouseEnter={onMouseEnter}\r\n            onMouseLeave={onMouseLeave}\r\n            onClick={handleClick}\r\n            initial={{ opacity: 0 }}\r\n            animate={{\r\n              opacity: 0.7,\r\n            }}\r\n            transition={{ delay: 3.15 }}\r\n            whileHover={{\r\n              opacity: 1,\r\n            }}\r\n          >\r\n            Try it now!\r\n          </motion.button>\r\n          {showSvg ? (\r\n            <motion.svg\r\n              version=\"1.0\"\r\n              id=\"Capa_1\"\r\n              xmlns=\"http://www.w3.org/2000/motion.svg\"\r\n              x=\"0px\"\r\n              y=\"0px\"\r\n              className=\"svg\"\r\n              viewBox=\"0 0 667 121\"\r\n              ref={svgRef}\r\n            >\r\n              <motion.path\r\n                style={{\r\n                  fill: \"none\",\r\n                  stroke: \"rgba(255, 255, 255, 0.6)\",\r\n                }}\r\n                strokeWidth=\"2\"\r\n                stroke-linecap=\"round\"\r\n                stroke-linejoin=\"round\"\r\n                variants={pathVariants}\r\n                initial=\"hidden\"\r\n                animate=\"visible\"\r\n                class=\"st0\"\r\n                strokeDasharray=\"500, 200\"\r\n                d=\"M26.8,112.1H7.2v-98h39.2c3.6,0,7.1,0.5,10.4,1.4c3.3,0.9,6.4,2.3,9.3,4c2.9,1.7,5.5,3.8,7.9,6.2\r\n                c2.4,2.4,4.4,5,6.2,8c1.7,2.9,3,6,4,9.4c0.9,3.3,1.4,6.8,1.4,10.4c0,3.4-0.4,6.7-1.3,9.8c-0.8,3.2-2.1,6.2-3.6,9.1\r\n                c-1.6,2.9-3.5,5.5-5.8,7.9c-2.3,2.4-4.8,4.5-7.7,6.3l10.9,25.6H57.3l-8.5-19.8l-21.9,0.1V112.1z M26.8,33.7v39.2h19.6\r\n                c2.7,0,5.2-0.5,7.6-1.5c2.4-1,4.4-2.4,6.2-4.2c1.8-1.8,3.2-3.9,4.2-6.3c1-2.4,1.5-4.9,1.5-7.6c0-2.7-0.5-5.2-1.5-7.6\r\n                c-1-2.4-2.4-4.5-4.2-6.3s-3.9-3.2-6.2-4.2c-2.4-1-4.9-1.5-7.6-1.5H26.8z\"\r\n              />\r\n              <motion.path\r\n                style={{\r\n                  fill: \"none\",\r\n                  stroke: \"rgba(255, 255, 255, 0.6)\",\r\n                  strokeWdith: 30,\r\n                }}\r\n                strokeWidth=\"2\"\r\n                stroke-linecap=\"round\"\r\n                variants={pathVariants}\r\n                initial=\"hidden\"\r\n                animate=\"visible\"\r\n                class=\"st0\"\r\n                strokeDasharray=\"0 0\"\r\n                d=\"M124.8,94.2c0.7,0.2,1.5,0.4,2.2,0.4c0.7,0.1,1.5,0.1,2.2,0.1c1.8,0,3.6-0.3,5.3-0.8c1.7-0.5,3.3-1.2,4.8-2.2\r\n                c1.5-0.9,2.8-2.1,4-3.4c1.2-1.3,2.1-2.8,2.8-4.5l13.7,13.7c-1.7,2.5-3.7,4.7-6,6.6c-2.3,2-4.7,3.6-7.3,5c-2.6,1.4-5.4,2.4-8.3,3.1\r\n                c-2.9,0.7-5.9,1.1-8.9,1.1c-5.2,0-10-1-14.5-2.9c-4.5-1.9-8.5-4.6-11.9-8c-3.4-3.4-6.1-7.5-8-12.2c-2-4.7-2.9-9.9-2.9-15.6\r\n                c0-5.8,1-11.1,2.9-15.9c2-4.8,4.6-8.9,8-12.2c3.4-3.4,7.4-6,11.9-7.9c4.5-1.9,9.4-2.8,14.5-2.8c3.1,0,6,0.4,9,1.1\r\n                c2.9,0.7,5.7,1.8,8.3,3.1c2.6,1.4,5.1,3,7.3,5c2.3,2,4.3,4.2,6,6.7L124.8,94.2z M134.4,55.7c-0.9-0.3-1.7-0.5-2.6-0.6\r\n                c-0.8-0.1-1.7-0.1-2.6-0.1c-2.6,0-5,0.5-7.2,1.4c-2.3,0.9-4.2,2.3-5.9,4c-1.7,1.7-3,3.8-3.9,6.3c-1,2.4-1.4,5.2-1.4,8.2\r\n                c0,0.7,0,1.5,0.1,2.3c0.1,0.9,0.2,1.7,0.3,2.6c0.2,0.9,0.4,1.7,0.6,2.6c0.2,0.8,0.5,1.6,0.9,2.2L134.4,55.7z\"\r\n              />\r\n              <motion.path\r\n                style={{\r\n                  fill: \"none\",\r\n                  stroke: \"rgba(255, 255, 255, 0.6)\",\r\n                  strokeWdith: 30,\r\n                }}\r\n                strokeWidth=\"2\"\r\n                stroke-linecap=\"round\"\r\n                variants={pathVariants}\r\n                initial=\"hidden\"\r\n                animate=\"visible\"\r\n                class=\"st0\"\r\n                d=\"M189,112.1l-27.9-73.2h21.3l16,45.7l15.9-45.7h21.3l-27.9,73.2H189z\"\r\n              />\r\n              <motion.path\r\n                style={{\r\n                  fill: \"none\",\r\n                  stroke: \"rgba(255, 255, 255, 0.6)\",\r\n                  strokeWdith: 30,\r\n                }}\r\n                strokeWidth=\"2\"\r\n                stroke-linecap=\"round\"\r\n                variants={pathVariants}\r\n                initial=\"hidden\"\r\n                animate=\"visible\"\r\n                class=\"st0\"\r\n                d=\"M264.7,19c0,1.7-0.3,3.3-1,4.9c-0.7,1.5-1.6,2.8-2.7,3.9c-1.1,1.1-2.5,2-4,2.7c-1.5,0.7-3.2,1-4.9,1\r\n                c-1.7,0-3.4-0.3-4.9-1c-1.5-0.7-2.8-1.5-4-2.7c-1.1-1.1-2-2.4-2.7-3.9c-0.7-1.5-1-3.1-1-4.9c0-1.7,0.3-3.3,1-4.8\r\n                c0.7-1.5,1.5-2.8,2.7-4c1.1-1.1,2.4-2,4-2.7c1.5-0.7,3.2-1,4.9-1c1.7,0,3.4,0.3,4.9,1c1.5,0.7,2.9,1.5,4,2.7c1.1,1.1,2,2.4,2.7,4\r\n                C264.4,15.7,264.7,17.3,264.7,19z M261.5,112.1h-18.8V38.9h18.8V112.1z\"\r\n              />\r\n              <motion.path\r\n                style={{\r\n                  fill: \"none\",\r\n                  stroke: \"rgba(255, 255, 255, 0.6)\",\r\n                  strokeWdith: 30,\r\n                }}\r\n                strokeWidth=\"2\"\r\n                stroke-linecap=\"round\"\r\n                variants={pathVariants}\r\n                initial=\"hidden\"\r\n                animate=\"visible\"\r\n                class=\"st0\"\r\n                d=\"M304.8,94.2c0.7,0.2,1.5,0.4,2.2,0.4c0.7,0.1,1.5,0.1,2.2,0.1c1.8,0,3.6-0.3,5.3-0.8c1.7-0.5,3.3-1.2,4.8-2.2\r\n                c1.5-0.9,2.8-2.1,4-3.4c1.2-1.3,2.1-2.8,2.8-4.5l13.7,13.7c-1.7,2.5-3.7,4.7-6,6.6c-2.3,2-4.7,3.6-7.3,5c-2.6,1.4-5.4,2.4-8.3,3.1\r\n                c-2.9,0.7-5.9,1.1-8.9,1.1c-5.2,0-10-1-14.5-2.9c-4.5-1.9-8.5-4.6-11.9-8c-3.4-3.4-6.1-7.5-8-12.2c-2-4.7-2.9-9.9-2.9-15.6\r\n                c0-5.8,1-11.1,2.9-15.9c2-4.8,4.6-8.9,8-12.2c3.4-3.4,7.4-6,11.9-7.9c4.5-1.9,9.4-2.8,14.5-2.8c3.1,0,6,0.4,9,1.1\r\n                c2.9,0.7,5.7,1.8,8.3,3.1c2.6,1.4,5.1,3,7.3,5c2.3,2,4.3,4.2,6,6.7L304.8,94.2z M314.4,55.7c-0.9-0.3-1.7-0.5-2.6-0.6\r\n                c-0.8-0.1-1.7-0.1-2.6-0.1c-2.6,0-5,0.5-7.2,1.4c-2.3,0.9-4.2,2.3-5.9,4c-1.7,1.7-3,3.8-3.9,6.3c-1,2.4-1.4,5.2-1.4,8.2\r\n                c0,0.7,0,1.5,0.1,2.3c0.1,0.9,0.2,1.7,0.3,2.6c0.2,0.9,0.4,1.7,0.6,2.6c0.2,0.8,0.5,1.6,0.9,2.2L314.4,55.7z\"\r\n              />\r\n              <motion.path\r\n                style={{\r\n                  fill: \"none\",\r\n                  stroke: \"rgba(255, 255, 255, 0.6)\",\r\n                  strokeWdith: 30,\r\n                }}\r\n                strokeWidth=\"2\"\r\n                stroke-linecap=\"round\"\r\n                variants={pathVariants}\r\n                initial=\"hidden\"\r\n                animate=\"visible\"\r\n                class=\"st0\"\r\n                d=\"M441.6,85.7c0,3.8-0.7,7.4-2.2,10.8c-1.5,3.4-3.5,6.3-6,8.9c-2.5,2.5-5.5,4.5-8.9,5.9c-3.4,1.5-7,2.2-10.9,2.2\r\n                c-3.5,0-6.8-0.6-10-1.8c-3.2-1.2-6.1-3-8.7-5.3c-2.6,2.3-5.4,4.1-8.6,5.3c-3.2,1.2-6.5,1.8-10,1.8c-3.9,0-7.5-0.7-10.9-2.2\r\n                c-3.4-1.5-6.3-3.4-8.9-5.9c-2.5-2.5-4.5-5.5-6-8.9c-1.5-3.4-2.2-7-2.2-10.8V39h18.7v46.6c0,1.3,0.2,2.5,0.7,3.6\r\n                c0.5,1.1,1.1,2.1,2,2.9c0.8,0.8,1.8,1.5,2.9,2c1.1,0.5,2.3,0.7,3.6,0.7c1.3,0,2.5-0.2,3.6-0.7c1.1-0.5,2.1-1.1,3-2\r\n                c0.9-0.8,1.5-1.8,2-2.9c0.5-1.1,0.7-2.3,0.7-3.6V39h18.6v46.6c0,1.3,0.3,2.5,0.8,3.6c0.5,1.1,1.2,2.1,2,2.9c0.8,0.8,1.8,1.5,2.9,2\r\n                c1.1,0.5,2.3,0.7,3.6,0.7c1.3,0,2.5-0.2,3.6-0.7c1.1-0.5,2.1-1.1,3-2c0.8-0.8,1.5-1.8,2-2.9c0.5-1.1,0.8-2.3,0.8-3.6V39h18.6V85.7z\r\n                \"\r\n              />\r\n              <motion.path\r\n                style={{\r\n                  fill: \"none\",\r\n                  stroke: \"rgba(255, 255, 255, 0.6)\",\r\n                  strokeWdith: 30,\r\n                }}\r\n                strokeWidth=\"2\"\r\n                stroke-linecap=\"round\"\r\n                variants={pathVariants}\r\n                initial=\"hidden\"\r\n                animate=\"visible\"\r\n                class=\"st0\"\r\n                d=\"M495.4,112.1h-42.7V93.5h42.7c1.3,0,2.4-0.5,3.3-1.4c0.9-0.9,1.4-2,1.4-3.3c0-1.3-0.5-2.2-1.4-2.6\r\n                c-0.9-0.4-2-0.6-3.3-0.6h-19.4c-3.2,0-6.3-0.6-9.1-1.8c-2.8-1.2-5.3-2.9-7.4-5c-2.1-2.1-3.7-4.6-5-7.4c-1.2-2.8-1.8-5.9-1.8-9.1\r\n                c0-3.2,0.6-6.3,1.8-9.1c1.2-2.8,2.9-5.3,5-7.4c2.1-2.1,4.6-3.7,7.4-5c2.8-1.2,5.9-1.8,9.1-1.8h37.8v18.6h-37.8\r\n                c-1.3,0-2.4,0.5-3.3,1.4c-0.9,0.9-1.4,2-1.4,3.3c0,1.3,0.5,2.5,1.4,3.4c0.9,0.9,2,1.4,3.3,1.4h19.4c3.2,0,6.2,0.5,9,1.6\r\n                c2.8,1.1,5.3,2.6,7.4,4.5c2.1,1.9,3.8,4.2,5,6.9c1.2,2.7,1.8,5.6,1.8,8.8c0,3.2-0.6,6.3-1.8,9.1c-1.2,2.8-2.9,5.3-5,7.4\r\n                c-2.1,2.1-4.6,3.8-7.4,5C501.5,111.5,498.5,112.1,495.4,112.1z\"\r\n              />\r\n              <motion.path\r\n                style={{\r\n                  fill: \"none\",\r\n                  stroke: \"rgba(255, 255, 255, 0.6)\",\r\n                  strokeWdith: 30,\r\n                }}\r\n                strokeWidth=\"2\"\r\n                stroke-linecap=\"round\"\r\n                variants={pathVariants}\r\n                initial=\"hidden\"\r\n                animate=\"visible\"\r\n                class=\"st0\"\r\n                d=\"M550.5,19c0,1.7-0.3,3.3-1,4.9c-0.7,1.5-1.6,2.8-2.7,3.9c-1.1,1.1-2.5,2-4,2.7c-1.5,0.7-3.2,1-4.9,1\r\n                c-1.7,0-3.4-0.3-4.9-1c-1.5-0.7-2.8-1.5-4-2.7c-1.1-1.1-2-2.4-2.7-3.9c-0.7-1.5-1-3.1-1-4.9c0-1.7,0.3-3.3,1-4.8\r\n                c0.7-1.5,1.6-2.8,2.7-4c1.1-1.1,2.4-2,4-2.7c1.5-0.7,3.2-1,4.9-1c1.7,0,3.4,0.3,4.9,1c1.5,0.7,2.9,1.5,4,2.7c1.1,1.1,2,2.4,2.7,4\r\n                C550.2,15.7,550.5,17.3,550.5,19z M547.3,112.1h-18.8V38.9h18.8V112.1z\"\r\n              />\r\n              <motion.path\r\n                style={{\r\n                  fill: \"none\",\r\n                  stroke: \"rgba(255, 255, 255, 0.6)\",\r\n                  strokeWdith: 30,\r\n                }}\r\n                strokeWidth=\"2\"\r\n                stroke-linecap=\"round\"\r\n                variants={pathVariants}\r\n                initial=\"hidden\"\r\n                animate=\"visible\"\r\n                class=\"st0\"\r\n                d=\"M625.5,53.5l-13.7,13.7c-0.7-1.9-1.6-3.6-2.8-5.2c-1.2-1.5-2.5-2.8-4-3.9c-1.5-1-3.1-1.8-4.8-2.4\r\n                c-1.7-0.5-3.5-0.8-5.3-0.8c-2.6,0-5,0.5-7.2,1.6c-2.3,1-4.2,2.5-5.9,4.4c-1.7,1.9-3,4.1-3.9,6.7c-1,2.6-1.4,5.5-1.4,8.6\r\n                c0,2.6,0.5,4.9,1.4,7.2c1,2.2,2.3,4.2,3.9,5.9c1.7,1.7,3.6,3,5.9,4c2.3,1,4.7,1.4,7.2,1.4c1.8,0,3.6-0.3,5.3-0.8\r\n                c1.7-0.5,3.3-1.2,4.8-2.2c1.5-0.9,2.8-2.1,4-3.4c1.2-1.3,2.1-2.8,2.8-4.5l13.7,13.7c-1.7,2.5-3.7,4.7-6,6.6c-2.3,2-4.7,3.6-7.3,5\r\n                c-2.6,1.4-5.4,2.4-8.3,3.1c-2.9,0.7-5.9,1.1-8.9,1.1c-5.2,0-10-1-14.5-2.9c-4.5-1.9-8.5-4.6-11.9-8c-3.4-3.4-6.1-7.3-8-11.8\r\n                c-2-4.5-2.9-9.3-2.9-14.5c0-5.6,1-10.8,2.9-15.7c2-4.9,4.6-9.1,8-12.7c3.4-3.6,7.4-6.5,11.9-8.6c4.5-2.1,9.4-3.1,14.5-3.1\r\n                c3.1,0,6,0.4,9,1.2c2.9,0.8,5.7,1.9,8.4,3.4c2.7,1.5,5.1,3.3,7.4,5.4C621.9,48.2,623.9,50.7,625.5,53.5z\"\r\n              />\r\n            </motion.svg>\r\n          ) : (\r\n            <motion.img\r\n              src={ReviewsicSVG}\r\n              alt=\"\"\r\n              variants={svgVariants}\r\n              initial=\"hidden\"\r\n              animate=\"visible\"\r\n              className=\"reviewsic-svg\"\r\n              name=\"element\"\r\n            />\r\n          )}\r\n        </motion.div>\r\n\r\n        <div\r\n          className=\"login-form \"\r\n          ref={login}\r\n          onMouseEnter={onMouseEnter}\r\n          onMouseLeave={onMouseLeave}\r\n          style={{ display: showLogin ? \"block\" : \"none\" }}\r\n        >\r\n          {token ? (\r\n            <SpotifyApiContext.Provider value={token}>\r\n              <Redirect to=\"/home\" />\r\n            </SpotifyApiContext.Provider>\r\n          ) : (\r\n            <SpotifyAuth\r\n              className=\"spotify-auth\"\r\n              // redirectUri=\"https://reviewsic.herokuapp.com/\"\r\n              redirectUri=\"http://localhost:3000/\"\r\n              clientID=\"9751c1f85b2a4684a8cc0a02f6942b91\"\r\n              scopes={[\r\n                Scopes.playlistModifyPrivate,\r\n                Scopes.userReadPrivate,\r\n                Scopes.playlistReadCollaborative,\r\n                Scopes.playlistModifyPublic,\r\n              ]}\r\n              onAccessToken={() => {\r\n                window.location = \"/home\";\r\n              }}\r\n            />\r\n          )}\r\n        </div>\r\n      </AnimatePresence>\r\n      <Link to=\"/home\" id=\"link\"></Link>\r\n\r\n      <div id=\"container\">\r\n        <Scene id=\"scene\" ref={sceneEl} data-scalar-x=\"10\" data-scalar-y=\"10\">\r\n          <div data-depth=\"0.2\">\r\n            <img src={Stars} className=\"stars\" />\r\n          </div>\r\n\r\n          <div data-depth=\"0.1\">\r\n            <img src={StarBackground} ref={stars} className=\"star\" />\r\n          </div>\r\n\r\n          <div data-depth=\"0.5\">\r\n            <img className=\"moonlight\" src={Moonlight} />\r\n          </div>\r\n\r\n          <div data-depth=\"1\" className=\"slash-container\">\r\n            <img className=\"slash\" name=\"element\" src={Slash} ref={slash} />\r\n          </div>\r\n\r\n          <div data-depth=\"1\" className=\"clairo-container\">\r\n            <img className=\"clairo\" name=\"element\" src={Clairo2} ref={clairo} />\r\n          </div>\r\n        </Scene>\r\n      </div>\r\n      <motion.div\r\n        initial={{ opacity: 0 }}\r\n        animate={{\r\n          opacity: 1,\r\n        }}\r\n        transition={{ delay: 3.2 }}\r\n      >\r\n        <motion.img\r\n          style={{ position: \"absolute\", top: \"21%\", left: \"64%\" }}\r\n          name=\"element\"\r\n          className=\"planet planet1\"\r\n          width=\"100\"\r\n          height=\"100\"\r\n          src={Planet1}\r\n          drag={true}\r\n          dragMomentum={false}\r\n        ></motion.img>\r\n        <motion.img\r\n          style={{ position: \"absolute\", top: \"15%\", left: \"20%\" }}\r\n          name=\"element\"\r\n          className=\"planet planet2\"\r\n          width=\"150\"\r\n          height=\"150\"\r\n          src={Planet3}\r\n          drag={true}\r\n          dragMomentum={true}\r\n        ></motion.img>\r\n        <motion.img\r\n          style={{ position: \"absolute\", top: \"50%\", left: \"35%\" }}\r\n          name=\"element\"\r\n          className=\"planet planet3\"\r\n          width=\"100\"\r\n          height=\"100\"\r\n          src={Planet2}\r\n          drag={true}\r\n          dragMomentum={true}\r\n        ></motion.img>\r\n      </motion.div>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","C:\\Users\\Jesús9\\Desktop\\gf\\client\\src\\pages\\NotFound.js",[],"C:\\Users\\Jesús9\\Desktop\\gf\\client\\src\\pages\\Register.js",["146","147","148","149","150","151","152","153","154"],"import React, { useState, useEffect, Component } from \"react\";\r\nimport { SpotifyApiContext } from \"react-spotify-api\";\r\nimport { api } from \"../data/api\";\r\nimport { spotifyApi } from \"../data/spotifyApi\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport userActions from \"../redux/user/actions\";\r\nimport { AnimatePresence, motion } from \"framer-motion\";\r\n\r\nimport openSocket from \"socket.io-client\";\r\nimport Swal from \"sweetalert2\";\r\nimport withReactContent from \"sweetalert2-react-content\";\r\n\r\nimport Navbar from \"../components/Navbar\";\r\nimport Footer from \"../components/Footer\";\r\nimport CardsList from \"../components/CardsList\";\r\nimport CompleteCard from \"../components/CompleteCard\";\r\nimport CardsCarousel from \"../components/CardsCarousel\";\r\nimport Loader from \"react-loader-spinner\";\r\nimport RegisterForm from \"../components/RegisterForm\";\r\nimport UpdateForm from \"../components/UpdateForm\";\r\nimport Contacts from \"../components/Contacts\";\r\nimport Login from \"../components/Login\";\r\nimport DropdownMenu from \"../components/DropdownMenu\";\r\nimport Cookies from \"js-cookie\";\r\n\r\nimport { ToastContainer } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\n\r\nimport \"tailwindcss/tailwind.css\";\r\nimport \"../assets/main.css\";\r\nimport \"../pages/styles/Register.css\";\r\nimport {\r\n  GlobalStyles,\r\n  PageContainer,\r\n  MainContainer,\r\n  ContentContainer,\r\n} from \"./styles/Register.style\";\r\nimport { useParams } from \"react-router\";\r\n\r\nconst API_ENDPOINT = \"http://localhost:3001\";\r\n// const API_ENDPOINT = \"\";\r\nconst socket = openSocket(API_ENDPOINT);\r\n// const socket = openSocket(\"/\")\r\n\r\nconst Register = () => {\r\n  const MySwal = withReactContent(Swal);\r\n\r\n  const [songData, setSongData] = useState({\r\n    song: \"\",\r\n    image: \"\",\r\n    review: \"\",\r\n    artist: \"\",\r\n    genre: \"\",\r\n    likes: 0,\r\n    qualification: 0,\r\n    song_id: \"\",\r\n    updateId: 0,\r\n    author: \"\",\r\n    author_id: \"\",\r\n    spotifyUrl: \"\",\r\n    date: \"\",\r\n  });\r\n\r\n  const [spotifyData, setSpotifyData] = useState({\r\n    profileImage: undefined,\r\n    playlistId: \"\",\r\n  });\r\n\r\n  const [songList, setSongList] = useState([]);\r\n  const [users, setUsers] = useState([]);\r\n  const [showCards, setShowCards] = useState(false);\r\n\r\n  const [likedSongs, setlikedSongs] = useState(undefined);\r\n  const [token, setToken] = useState(undefined);\r\n  const [loaded, setLoaded] = useState(false);\r\n  const [sortType, setSortType] = useState(undefined);\r\n  const [cardView, setCardView] = useState(\"categories\");\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const sortArray = () => {\r\n    let sorted = [];\r\n    if (sortType === \"song\")\r\n      sorted = [...songList].sort((a, b) =>\r\n        a[sortType].localeCompare(b[sortType], \"en\", { sensitivity: \"base\" })\r\n      );\r\n    else sorted = [...songList].sort((a, b) => b[sortType] - a[sortType]);\r\n    return sorted;\r\n  };\r\n\r\n  useEffect(async () => {\r\n    setToken(\r\n      !Cookies.get(\"spotifyAuthToken\") ? \"\" : Cookies.get(\"spotifyAuthToken\")\r\n    );\r\n\r\n    if (token && token.length) {\r\n      setSongList(await api.get());\r\n\r\n      spotifyApi.setConfig(token);\r\n\r\n      await spotifyApi.get();\r\n\r\n      setSongData((prevState) => ({\r\n        ...prevState,\r\n        author: spotifyApi.songData.author,\r\n        author_id: spotifyApi.songData.author_id,\r\n      }));\r\n\r\n      dispatch(userActions.setUser(spotifyApi.songData.author_id));\r\n\r\n      setSpotifyData({\r\n        profileImage: spotifyApi.data.profileImage,\r\n        playlistId: await spotifyApi.playlist.create(),\r\n      });\r\n\r\n      const songsLiked = await spotifyApi.playlist.get(\r\n        `https://api.spotify.com/v1/playlists/${await spotifyApi.playlist.create()}/tracks`\r\n      );\r\n\r\n      setlikedSongs(songsLiked);\r\n      dispatch(userActions.setLikedSongs([...songsLiked]));\r\n\r\n      socket.emit(\"new user\", spotifyApi.user);\r\n\r\n      socket.on(\"usernames\", (data) => {\r\n        setUsers(data);\r\n      });\r\n\r\n      socket.on(\"updateReviews\", (data) => {\r\n        setSongList(data);\r\n      });\r\n\r\n      setLoaded(true);\r\n      setShowCards(true);\r\n    }\r\n  }, [token]);\r\n\r\n  api.endpoint = API_ENDPOINT;\r\n  api.data = songData;\r\n  api.songList = songList;\r\n\r\n  const submitReview = async () => {\r\n    socket.emit(\"updateReviews\", [...songList, await api.insert()]);\r\n  };\r\n\r\n  const updateReview = async (id) => {\r\n    socket.emit(\"updateReviews\", [...(await api.update(id, songList))]);\r\n  };\r\n\r\n  const deleteReview = async (id) => {\r\n    socket.emit(\"updateReviews\", [...(await api.delete(id, songList))]);\r\n  };\r\n\r\n  const handleLikeSong = async (songId, item) => {\r\n    spotifyApi.playlist.add(songId);\r\n    // socket.emit(\r\n    //   \"updateReviews\",\r\n    //   await api.setLikes(item.id, songList, item.likes + 1)\r\n    // );\r\n  };\r\n\r\n  const handleDeleteSong = async (songId, uri) => {\r\n    spotifyApi.playlist.delete(songId, uri, token);\r\n    // socket.emit(\r\n    //   \"updateReviews\",\r\n    //   await api.setLikes(item.id, songList, item.likes - 1)\r\n    // );\r\n  };\r\n\r\n  const registerForm = () => {\r\n    MySwal.fire({\r\n      html: (\r\n        <React.Fragment>\r\n          <RegisterForm\r\n            onSongChange={(e) => {\r\n              setSongData((prevState) => ({\r\n                ...prevState,\r\n                song: e,\r\n              }));\r\n            }}\r\n            selectImage={(e) => {\r\n              setSongData((prevState) => ({\r\n                ...prevState,\r\n                image: e,\r\n              }));\r\n            }}\r\n            onArtistChange={(e) => {\r\n              setSongData((prevState) => ({\r\n                ...prevState,\r\n                artist: e,\r\n              }));\r\n            }}\r\n            onGenreChange={(e) => {\r\n              setSongData((prevState) => ({\r\n                ...prevState,\r\n                genre: e,\r\n              }));\r\n            }}\r\n            onCommentChange={(e) => {\r\n              setSongData((prevState) => ({\r\n                ...prevState,\r\n                review: e,\r\n              }));\r\n            }}\r\n            onSpotifyUrlChange={(e) => {\r\n              setSongData((prevState) => ({\r\n                ...prevState,\r\n                spotifyUrl: e,\r\n              }));\r\n\r\n              if (e.length >= 52) {\r\n                setSongData((prevState) => ({\r\n                  ...prevState,\r\n                  song_id: e.slice(31, 53),\r\n                }));\r\n              }\r\n            }}\r\n            ratingChanged={(e) => {\r\n              setSongData((prevState) => ({\r\n                ...prevState,\r\n                qualification: e,\r\n              }));\r\n            }}\r\n            onSubmit={(e) => {\r\n              submitReview();\r\n              MySwal.close();\r\n            }}\r\n          />\r\n        </React.Fragment>\r\n      ),\r\n\r\n      showConfirmButton: false,\r\n    });\r\n  };\r\n\r\n  const updateModal = (data) => {\r\n    setSongData(data);\r\n    MySwal.fire({\r\n      html: (\r\n        <UpdateForm\r\n          data={data}\r\n          token={token}\r\n          onCommentChange={(e) => {\r\n            setSongData((prevState) => ({\r\n              ...prevState,\r\n              review: e,\r\n            }));\r\n          }}\r\n          ratingChanged={(e) => {\r\n            setSongData((prevState) => ({\r\n              ...prevState,\r\n              qualification: e,\r\n            }));\r\n          }}\r\n          onSubmit={async (e) => {\r\n            updateReview(data.id);\r\n            MySwal.close();\r\n          }}\r\n        />\r\n      ),\r\n      showConfirmButton: false,\r\n    });\r\n  };\r\n\r\n  const handleDropdown = (value) => {\r\n    setSortType(value);\r\n    setSongList([...songList]);\r\n    setShowCards(false);\r\n    setTimeout(() => {\r\n      setShowCards(true);\r\n    }, 300);\r\n  };\r\n\r\n  const params = useParams();\r\n\r\n  const CardActions = {\r\n    update: (data) => {\r\n      updateModal(data);\r\n    },\r\n    delete: (data) => {\r\n      deleteReview(data);\r\n    },\r\n    addSong: (songId, data) => {\r\n      handleLikeSong(songId, data);\r\n    },\r\n    deleteSong: (songId, uri) => {\r\n      handleDeleteSong(songId, uri);\r\n    },\r\n  };\r\n\r\n  // const CardCustom = ({ data }) => {\r\n  //   return <Card data={data} />;\r\n  // };\r\n\r\n  return (\r\n    <>\r\n      <GlobalStyles />\r\n      <Navbar\r\n        onAddClick={() => {\r\n          registerForm();\r\n        }}\r\n        profileImage={spotifyData.profileImage}\r\n        token={token}\r\n      ></Navbar>\r\n      <br />\r\n\r\n      <ToastContainer />\r\n\r\n      {token && token.length ? (\r\n        <SpotifyApiContext.Provider value={token}>\r\n          <PageContainer>\r\n            <MainContainer>\r\n              <>\r\n                <AnimatePresence>\r\n                  {!loaded ? (\r\n                    <ContentContainer\r\n                      style={{\r\n                        display: \"flex\",\r\n                        justifyContent: \"center\",\r\n                      }}\r\n                    >\r\n                      <motion.div\r\n                        key=\"loader\"\r\n                        initial={{ y: -200 }}\r\n                        animate={{ y: 0 }}\r\n                        exit={{ y: -200 }}\r\n                        style={{ position: \"absolute\" }}\r\n                      >\r\n                        <Loader\r\n                          type=\"Audio\"\r\n                          color=\"#6c22cdc7\"\r\n                          height={70}\r\n                          width={70}\r\n                          className=\"mt-5\"\r\n                        />\r\n                      </motion.div>\r\n                    </ContentContainer>\r\n                  ) : (\r\n                    <React.Fragment>\r\n                      {songList.length ? (\r\n                        <AnimatePresence>\r\n                          {cardView != \"categories\" ? (\r\n                            <ContentContainer\r\n                              initial={{ x: -200 }}\r\n                              animate={{ x: 0 }}\r\n                              exit={{ x: -200 }}\r\n                            >\r\n                              <DropdownMenu\r\n                                onSelect={(value) => handleDropdown(value)}\r\n                                onCardViewChange={(value) => setCardView(value)}\r\n                              />\r\n                              <CardsCarousel\r\n                                {...CardActions}\r\n                                songList={songList}\r\n                                sortType={sortType}\r\n                              />\r\n                            </ContentContainer>\r\n                          ) : (\r\n                            <ContentContainer\r\n                              initial={{ x: -200 }}\r\n                              animate={{ x: 0 }}\r\n                              exit={{ x: -200 }}\r\n                            >\r\n                              <DropdownMenu\r\n                                onSelect={(value) => handleDropdown(value)}\r\n                                onCardViewChange={(value) => setCardView(value)}\r\n                              />\r\n                              <CardsList songList={songList} {...CardActions} />\r\n                              <AnimatePresence>\r\n                                {params.id && (\r\n                                  <CompleteCard\r\n                                    data={songList.find((song) => {\r\n                                      return song.id == params.id;\r\n                                    })}\r\n                                    {...CardActions}\r\n                                    key=\"item\"\r\n                                  />\r\n                                )}\r\n                              </AnimatePresence>\r\n                            </ContentContainer>\r\n                          )}\r\n                        </AnimatePresence>\r\n                      ) : (\r\n                        <ContentContainer\r\n                          initial={{ opacity: 0 }}\r\n                          animate={{ opacity: 1 }}\r\n                        >\r\n                          <p\r\n                            style={{\r\n                              textAlign: \"center\",\r\n                            }}\r\n                          >\r\n                            Not reviews registered yet 😕.\r\n                          </p>\r\n                        </ContentContainer>\r\n                      )}\r\n                    </React.Fragment>\r\n                  )}\r\n                </AnimatePresence>\r\n              </>\r\n\r\n              <Contacts users={users} />\r\n            </MainContainer>\r\n            <Footer token={token} />\r\n          </PageContainer>\r\n        </SpotifyApiContext.Provider>\r\n      ) : (\r\n        <>\r\n          {token != undefined && !token.length && <Login />}\r\n          <Footer />\r\n        </>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Register;\r\n","C:\\Users\\Jesús9\\Desktop\\gf\\client\\src\\components\\Footer.js",["155","156"],"import Reat from \"react\";\r\nimport \"../components/styles/Footer.css\";\r\nimport { faGithub } from \"@fortawesome/fontawesome-free-brands\";\r\nimport { faSignOutAlt } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\n\r\nimport Cookies from \"js-cookie\";\r\n\r\nconst handleLogOut = () => {\r\n  Cookies.remove(\"spotifyAuthToken\");\r\n  window.location.href = \"/\";\r\n};\r\n\r\nconst Footer = ({ token }) => {\r\n  return (\r\n    <Reat.Fragment>\r\n      <footer>\r\n        <div className=\"footer-section\">\r\n          <p>\r\n            Inspired by{\" \"}\r\n            <a href=\"https://www.clairo.com/\" target=\"_blank\">\r\n              Clairo\r\n            </a>\r\n          </p>\r\n        </div>\r\n        <div className=\"footer-section flex justify-center\">\r\n          <a href=\"https://github.com/Jesuscc9/Reviewsic\" target=\"_blank\">\r\n            <FontAwesomeIcon icon={faGithub} className=\"fa-lg\" />\r\n          </a>\r\n        </div>\r\n        <div className=\"footer-section\">\r\n          {token && token.length ? (\r\n            <div className=\"logout-button-container\">\r\n              <button\r\n                className=\"logout-button\"\r\n                onClick={() => {\r\n                  handleLogOut();\r\n                }}\r\n              >\r\n                Log Out&#160;&#160;\r\n                <FontAwesomeIcon icon={faSignOutAlt} />\r\n              </button>\r\n            </div>\r\n          ) : (\r\n            <div />\r\n          )}\r\n        </div>\r\n      </footer>\r\n    </Reat.Fragment>\r\n  );\r\n};\r\n\r\nexport default Footer;\r\n","C:\\Users\\Jesús9\\Desktop\\gf\\client\\src\\components\\Navbar.js",["157","158","159"],"import React from \"react\";\r\nimport \"tailwindcss/tailwind.css\";\r\nimport Logo from \"../assets/img/music.png\";\r\nimport \"../components/styles/Navbar.css\";\r\nimport { faPlus } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\n\r\nconst navbar = (props) => {\r\n  return (\r\n    <React.Fragment>\r\n      <nav className=\"bg-gray-800 fixed w-full mb-5\" style={{ zIndex: 300 }}>\r\n        <div className=\" px-2 sm:px-6 lg:px-8\">\r\n          <div className=\"relative flex items-center justify-between h-16 w-100\">\r\n            <div className=\"flex sm:items-stretch sm:justify-start\">\r\n              <div className=\"flex-shrink-0 flex items-center\">\r\n                <img\r\n                  className=\"lg:block h-8 w-auto\"\r\n                  src={Logo}\r\n                  alt=\"Workflow\"\r\n                />\r\n                <h2 className=\"logo-title\">Reviewsic</h2>\r\n              </div>\r\n              <div className=\"hidden sm:block sm:ml-6\">\r\n                <div className=\"flex space-x-4\">\r\n                  <a\r\n                    href=\"\"\r\n                    className=\"bg-gray-900 text-white px-3 py-2 rounded-md text-sm font-medium\"\r\n                  >\r\n                    Home\r\n                  </a>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div className=\"absolute inset-y-0 right-0 flex items-center pr-2 sm:static sm:inset-auto sm:ml-6 sm:pr-0 profile\">\r\n              <div className=\"ml-3 relative\">\r\n                <div className=\"options-container\">\r\n                  {props.token ? (\r\n                    <React.Fragment>\r\n                      <button onClick={props.onAddClick} className=\"add-button\">\r\n                        <FontAwesomeIcon icon={faPlus} />\r\n                        <p className=\"add-text\">ADD</p>\r\n                      </button>\r\n                      <img\r\n                        className=\"profile-image\"\r\n                        src={\r\n                          props.profileImage\r\n                            ? props.profileImage\r\n                            : `http://dissoftec.com/DefaultUserImage.png`\r\n                        }\r\n                        alt=\"\"\r\n                      />\r\n                    </React.Fragment>\r\n                  ) : (\r\n                    <React.Fragment></React.Fragment>\r\n                  )}\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"hidden sm:hidden\">\r\n          <div className=\"px-2 pt-2 pb-3 space-y-1\">\r\n            <a\r\n              href=\"#\"\r\n              className=\"bg-gray-900 text-white block px-3 py-2 rounded-md text-base font-medium\"\r\n            >\r\n              Registro\r\n            </a>\r\n            <a\r\n              href=\"#\"\r\n              className=\"text-gray-300 hover:bg-gray-700 hover:text-white block px-3 py-2 rounded-md text-base font-medium\"\r\n            >\r\n              Contactos\r\n            </a>\r\n          </div>\r\n        </div>\r\n      </nav>\r\n      <br />\r\n      <br />\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default navbar;\r\n","C:\\Users\\Jesús9\\Desktop\\gf\\client\\src\\data\\spotifyApi.js",["160"],"import Axios from \"axios\";\r\nimport { toast } from \"react-toastify\";\r\n\r\nexport const spotifyApi = {\r\n  config: {},\r\n  token: \"\",\r\n  authorId: \"\",\r\n  data: {\r\n    profileImage: \"\",\r\n    playlistId: \"\",\r\n  },\r\n  songData: {\r\n    author_id: \"\",\r\n    author: \"\",\r\n  },\r\n  likedSongs: [],\r\n  user: {},\r\n  setConfig: (token) => {\r\n    spotifyApi.config = {\r\n      headers: {\r\n        Authorization: \"Bearer \" + token,\r\n      },\r\n    };\r\n  },\r\n  get: async function () {\r\n    const userData = await Axios.get(\r\n      \"https://api.spotify.com/v1/me\",\r\n      this.config\r\n    );\r\n\r\n    const user_image = userData.data.images.length\r\n      ? userData.data.images[0].url\r\n      : \"http://dissoftec.com/NicePng_user-png_730154.jpeg\";\r\n\r\n    this.data.profileImage = user_image;\r\n\r\n    this.songData.author = userData.data.display_name;\r\n    this.songData.author_id = userData.data.id;\r\n\r\n    this.user = {\r\n      nickname: userData.data.display_name,\r\n      followers: userData.data.followers.total,\r\n      url: userData.data.href,\r\n      type: userData.data.product,\r\n      image: user_image,\r\n      id: userData.data.id,\r\n    };\r\n  },\r\n  playlist: {\r\n    get: async function getAllSongs(url, items = []) {\r\n      const songs = await Axios.get(url, spotifyApi.config);\r\n\r\n      songs.data.items.forEach((e) => {\r\n        items.push(e);\r\n      });\r\n\r\n      if (songs.data.next === null) return items;\r\n\r\n      return getAllSongs(songs.data.next, items);\r\n    },\r\n    add: async (songId) => {\r\n      const songUri = `spotify:track:${songId}`;\r\n\r\n      await Axios.post(\r\n        `https://api.spotify.com/v1/playlists/${spotifyApi.data.playlistId}/tracks`,\r\n        {\r\n          uris: [songUri],\r\n        },\r\n        spotifyApi.config\r\n      );\r\n\r\n      toast(\"🎵 Song added to your playlist!\", {\r\n        position: \"top-right\",\r\n        autoClose: 2000,\r\n        hideProgressBar: true,\r\n        closeOnClick: true,\r\n        pauseOnHover: true,\r\n        draggable: true,\r\n        progress: undefined,\r\n      });\r\n    },\r\n    delete: async (songId, uri, token) => {\r\n      const headers = {\r\n        Authorization: \"Bearer \" + token,\r\n      };\r\n\r\n      const data = {\r\n        tracks: [\r\n          {\r\n            uri: uri.length > 0 ? uri : `spotify:track:${songId}`,\r\n            positions: [0],\r\n          },\r\n        ],\r\n      };\r\n\r\n      const songs = spotifyApi.playlist.get();\r\n\r\n      data.tracks[0].positions[0] = songs.find((song) => {\r\n        return song.track.id == songId;\r\n      });\r\n\r\n      await Axios.delete(\r\n        `https://api.spotify.com/v1/playlists/${spotifyApi.data.playlistId}/tracks`,\r\n        { headers, data }\r\n      );\r\n\r\n      return;\r\n    },\r\n    create: async function () {\r\n      let playlists = await Axios.get(\r\n        `https://api.spotify.com/v1/me/playlists`,\r\n        spotifyApi.config\r\n      );\r\n\r\n      const reviewsicExists = () => {\r\n        playlists = playlists.data.items;\r\n\r\n        for (let i = 0; i < playlists.length; i++) {\r\n          if (playlists[i].name === \"Reviewsic\") {\r\n            spotifyApi.data.playlistId = playlists[i].id;\r\n            return true;\r\n          }\r\n        }\r\n        return false;\r\n      };\r\n\r\n      if (reviewsicExists()) {\r\n        spotifyApi.likedSongs = await spotifyApi.playlist.get(\r\n          `https://api.spotify.com/v1/playlists/${spotifyApi.data.playlistId}/tracks`\r\n        );\r\n      } else {\r\n        const createPlaylist = await Axios.post(\r\n          `https://api.spotify.com/v1/users/${spotifyApi.songData.author_id}/playlists`,\r\n          {\r\n            name: \"Reviewsic\",\r\n          },\r\n          spotifyApi.config\r\n        );\r\n        spotifyApi.data.playlistId = createPlaylist.data.id;\r\n      }\r\n\r\n      return spotifyApi.data.playlistId;\r\n    },\r\n  },\r\n  song: {\r\n    get: async (songId) => {\r\n      try {\r\n        return (\r\n          await Axios.get(\r\n            `https://api.spotify.com/v1/tracks/${songId}`,\r\n            spotifyApi.config\r\n          )\r\n        ).data;\r\n      } catch (err) {\r\n        return false;\r\n      }\r\n    },\r\n    getGenres: async function (artistId) {\r\n      return (\r\n        await Axios.get(\r\n          `https://api.spotify.com/v1/artists/${artistId}`,\r\n          spotifyApi.config\r\n        )\r\n      ).data.genres;\r\n    },\r\n  },\r\n};\r\n","C:\\Users\\Jesús9\\Desktop\\gf\\client\\src\\components\\Card.js",["161"],"import React, { useState, useEffect, useRef } from \"react\";\r\nimport \"tailwindcss/tailwind.css\";\r\nimport ReactStars from \"react-rating-stars-component\";\r\n\r\nimport { faPen, faTrash } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { motion } from \"framer-motion\";\r\nimport { Card as CustomCard, GlobalStyles } from \"./styles/Card.style.js\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\nconst Card = (props) => {\r\n  const author_id = useSelector((state) => state.user.author_id);\r\n\r\n  const { data, isInPlaylist, uri } = props;\r\n\r\n  const song_name = useRef(null);\r\n\r\n  const [liked, setLiked] = useState(false);\r\n\r\n  useEffect(() => {\r\n    if (isInPlaylist > -1) {\r\n      setLiked(true);\r\n      heartActions.like();\r\n      return;\r\n    }\r\n\r\n    heartActions.dislike();\r\n    handleMouseLeave();\r\n  }, [liked]);\r\n\r\n  var rating = {\r\n    size: 20,\r\n    value: data.qualification,\r\n    edit: false,\r\n  };\r\n\r\n  let calc;\r\n\r\n  const card_options = React.useRef(null);\r\n  const card = React.useRef(null);\r\n  const heart = React.useRef(null);\r\n  const span = React.useRef(null);\r\n\r\n  const heartActions = {\r\n    like: () => {\r\n      heart.current.classList.add(\"is_animating\");\r\n      heart.current.addEventListener(\"animationend\", () => {\r\n        heart.current.classList.remove(\"is_animating\");\r\n        heart.current.classList.add(\"clicked_heart\");\r\n      });\r\n    },\r\n    dislike: () => {\r\n      heart.current.classList.remove(\"clicked_heart\");\r\n      handleMouseLeave();\r\n    },\r\n  };\r\n\r\n  const handleMouseOver = () => {\r\n    card_options.current.classList.add(\"card-options-visible\");\r\n\r\n    if (song_name.current) {\r\n      if (!calc) {\r\n        calc = song_name.current.scrollWidth - song_name.current.offsetWidth;\r\n      }\r\n      if (isElementOverflowing(song_name.current)) {\r\n        if (calc > 50) {\r\n          span.current.style.transition = `${(calc / 100) * 2}s`;\r\n        }\r\n\r\n        span.current.style.transform = `translateX(${calc * -1}px)`;\r\n      }\r\n    }\r\n  };\r\n\r\n  const handleMouseLeave = () => {\r\n    card_options.current.classList.remove(\"card-options-visible\");\r\n    span.current.style.transform = `translateX(${0}px)`;\r\n  };\r\n\r\n  const handleHeartClick = async () => {\r\n    if (liked) {\r\n      await props.deleteSong(data.song_id, uri, isInPlaylist);\r\n      heartActions.dislike();\r\n    } else {\r\n      await props.addSong(data.song_id, data);\r\n      heartActions.like();\r\n    }\r\n\r\n    setLiked(!liked);\r\n  };\r\n\r\n  function isElementOverflowing(element) {\r\n    return element.offsetWidth < element.scrollWidth;\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <GlobalStyles />\r\n      <CustomCard>\r\n        <div className=\"card-content-container\">\r\n          <motion.div\r\n            className=\"card-content\"\r\n            key={data.id}\r\n            onMouseOver={handleMouseOver}\r\n            onMouseLeave={handleMouseLeave}\r\n            layoutId={`card-container-${data.id}`}\r\n          >\r\n            <div className=\"card-header\" ref={card}>\r\n              <motion.div\r\n                className=\"image-container\"\r\n                layoutId={`card-image-container-${data.id}`}\r\n              >\r\n                {/* <a href={data.spotifyUrl} target=\"_blank\">\r\n              <img\r\n                alt=\"\"\r\n                src={data.image}\r\n                className=\"song-img\"\r\n                loading=\"lazy\"\r\n              />\r\n            </a> */}\r\n                <Link to={`/home/${data.id}`}>\r\n                  <img\r\n                    alt=\"\"\r\n                    src={data.image}\r\n                    className=\"song-img\"\r\n                    loading=\"lazy\"\r\n                    layoutId={`card-image-${data.image}`}\r\n                  />\r\n                </Link>\r\n              </motion.div>\r\n            </div>\r\n            <div className=\"card-body\">\r\n              <div className=\"song-name\" ref={song_name}>\r\n                <span ref={span}>{data.song}</span>\r\n              </div>\r\n\r\n              <h5 className=\"artist-name\">{data.artist}</h5>\r\n              <p className=\"comment\">{data.review}</p>\r\n            </div>\r\n            <div className=\"card-footer\">\r\n              <ReactStars {...rating} className=\"stars-calification\" />{\" \"}\r\n              <p className=\"autor\">By: {data.author}</p>\r\n              <div className=\"card-options\" ref={card_options}>\r\n                {data.author_id === author_id ? (\r\n                  <React.Fragment>\r\n                    <div\r\n                      className=\"edit-option option-container\"\r\n                      onClick={() => {\r\n                        props.update(props.data);\r\n                      }}\r\n                    >\r\n                      <FontAwesomeIcon icon={faPen} className=\"faPen\" />\r\n                    </div>\r\n                    <div\r\n                      className=\"edit-option option-container\"\r\n                      onClick={(e) => {\r\n                        props.delete(data.id);\r\n                      }}\r\n                    >\r\n                      <FontAwesomeIcon icon={faTrash} className=\"faTrash\" />\r\n                    </div>\r\n                  </React.Fragment>\r\n                ) : (\r\n                  <React.Fragment></React.Fragment>\r\n                )}\r\n                <div className=\"edit-option option-container\">\r\n                  <div\r\n                    className=\"heart\"\r\n                    ref={heart}\r\n                    onClick={() => {\r\n                      handleHeartClick();\r\n                    }}\r\n                  ></div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </motion.div>\r\n        </div>\r\n      </CustomCard>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Card;\r\n","C:\\Users\\Jesús9\\Desktop\\gf\\client\\src\\components\\Loader.js",[],["162","163"],"C:\\Users\\Jesús9\\Desktop\\gf\\client\\src\\components\\CardsCarousel.js",["164","165","166","167","168","169"],"import React, { useEffect, useState } from \"react\";\r\nimport CarouselRow from \"./CarouselRow\";\r\nimport { AnimatePresence } from \"framer-motion\";\r\n\r\nconst CardCarousel = (props) => {\r\n  var genres = [];\r\n  const splited_genres = [];\r\n\r\n  const [sortType, setSortType] = useState(props.sortType);\r\n\r\n  if (sortType != props.sortType) {\r\n    setSortType(props.sortType);\r\n  }\r\n\r\n  const genreExist = (genre, arr) => {\r\n    for (let i = 0; i < arr.length; i++) {\r\n      if (arr[i].genre == genre) {\r\n        return i;\r\n      }\r\n    }\r\n    return \"false\";\r\n  };\r\n\r\n  //Classifies all the songs by genre in an array in the propertie of an object\r\n  const instances = props.songList.reduce((arr = [], song) => {\r\n    song.genre.split(\" \").forEach((element) => {\r\n      arr.push(element);\r\n\r\n      const index = genreExist(element, splited_genres);\r\n\r\n      //This does the same, but in the subgenres of each genre (If it has it)\r\n      if (index != \"false\") {\r\n        splited_genres[index].songList.push(song);\r\n      } else {\r\n        splited_genres.push({\r\n          genre: element,\r\n          songList: [song],\r\n        });\r\n      }\r\n    });\r\n\r\n    const index = genreExist(song.genre, genres);\r\n\r\n    if (index != \"false\") {\r\n      genres[index].songList.push(song);\r\n    } else {\r\n      genres.push({\r\n        genre: song.genre,\r\n        songList: [song],\r\n      });\r\n    }\r\n    return arr;\r\n  }, []);\r\n\r\n  //genres = genres.sort((a, b) =>a.genre.localeCompare(b.genre, \"en\", { sensitivity: \"base\" }))\r\n\r\n  return (\r\n    <AnimatePresence>\r\n      <div\r\n        style={{\r\n          display: \"flex\",\r\n          flexWrap: \"wrap\",\r\n          justifyContent: \"space-between\",\r\n        }}\r\n      >\r\n        {genres\r\n          .sort((a, b) => b.songList.length - a.songList.length)\r\n          .map((genre) => {\r\n            return (\r\n              <CarouselRow\r\n                key={genre}\r\n                data={genre}\r\n                sortType={sortType ? sortType : \"song\"}\r\n                {...props}\r\n              />\r\n            );\r\n          })}\r\n      </div>\r\n    </AnimatePresence>\r\n  );\r\n};\r\n\r\nexport default CardCarousel;\r\n","C:\\Users\\Jesús9\\Desktop\\gf\\client\\src\\components\\UpdateForm.js",[],"C:\\Users\\Jesús9\\Desktop\\gf\\client\\src\\components\\DropdownMenu.js",["170","171","172","173","174","175"],"import React, { useEffect, useState } from \"react\";\r\nimport \"tailwindcss/tailwind.css\";\r\nimport \"../components/styles/DropdownMenu.css\";\r\nimport { faAngleDown, faList } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport onClickOutside from \"react-onclickoutside\";\r\n\r\nconst DropdownMenu = function (props) {\r\n  const [show, setShow] = useState(false);\r\n  const [value, setValue] = useState(undefined);\r\n  const [selectedView, setSelectedView] = useState(\"categories\");\r\n\r\n  useEffect(() => {\r\n    if (!value) return;\r\n    props.onSelect(\r\n      value == \"Recent\" ? \"date\" : value == \"Most Popular\" ? \"likes\" : \"song\"\r\n    );\r\n  }, [value]);\r\n\r\n  const handleClick = (value) => {\r\n    setSelectedView(value);\r\n    props.onCardViewChange(value);\r\n  };\r\n\r\n  DropdownMenu.handleClickOutside = () => setShow(false);\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <div className=\"dropdown-menu-container\">\r\n        <div className=\"dropdown\">\r\n          <button\r\n            className=\"actual\"\r\n            onClick={() => {\r\n              setShow(!show);\r\n            }}\r\n          >\r\n            {value ? (\r\n              <React.Fragment>\r\n                {show ? (\r\n                  <React.Fragment>\r\n                    Sort by &#160;\r\n                    <FontAwesomeIcon icon={faAngleDown} />\r\n                  </React.Fragment>\r\n                ) : (\r\n                  value\r\n                )}\r\n              </React.Fragment>\r\n            ) : (\r\n              <React.Fragment>\r\n                Sort by &#160;\r\n                <FontAwesomeIcon icon={faAngleDown} />\r\n              </React.Fragment>\r\n            )}\r\n          </button>\r\n          <div\r\n            className={`dropdown-content shadow ${\r\n              show ? \"dropdown-show\" : \"dropdown-hide\"\r\n            }`}\r\n          >\r\n            <div\r\n              className=\"dropdown-item\"\r\n              onClick={() => {\r\n                setShow(!show);\r\n                setValue(\"Recent\");\r\n              }}\r\n            >\r\n              <h1>Date</h1>\r\n            </div>\r\n            <hr className=\"divisor dropdown-divisor\" />\r\n            <div\r\n              className=\"dropdown-item\"\r\n              onClick={() => {\r\n                setShow(!show);\r\n                setValue(\"Most Popular\");\r\n              }}\r\n            >\r\n              <h1>Popularity</h1>\r\n            </div>\r\n            <hr className=\"divisor dropdown-divisor\" />\r\n            <div\r\n              className=\"dropdown-item\"\r\n              onClick={() => {\r\n                setShow(!show);\r\n                setValue(\"Name\");\r\n              }}\r\n            >\r\n              <h1>Alphabetical</h1>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"select-type\">\r\n          <button\r\n            className={`option-select-type mr-4 ${\r\n              selectedView == \"categories\" ? \"selected-type\" : \"\"\r\n            }`}\r\n            onClick={() => {\r\n              handleClick(\"categories\");\r\n            }}\r\n          >\r\n            <div className=\"cat-dot-list\"></div>\r\n            <div className=\"cat-dot-list\"></div>\r\n            <div className=\"cat-dot-list\"></div>\r\n          </button>\r\n          <button\r\n            className={`option-select-type ${\r\n              selectedView == \"all\" ? \"selected-type\" : \"\"\r\n            }`}\r\n            onClick={() => {\r\n              handleClick(\"all\");\r\n            }}\r\n          >\r\n            <div className=\"cat-dot\"></div>\r\n            <div className=\"cat-dot\"></div>\r\n            <div className=\"cat-dot\"></div>\r\n            <div className=\"cat-dot\"></div>\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nconst clickOutsideConfig = {\r\n  handleClickOutside: () => DropdownMenu.handleClickOutside,\r\n};\r\n\r\nexport default onClickOutside(DropdownMenu, clickOutsideConfig);\r\n","C:\\Users\\Jesús9\\Desktop\\gf\\client\\src\\components\\Contacts.js",["176","177","178"],"import React, { useRef } from \"react\";\r\nimport \"tailwindcss/tailwind.css\";\r\nimport \"../components/styles/Contacts.css\";\r\nimport { motion } from \"framer-motion\";\r\n\r\nconst Contacts = (props) => {\r\n  const data = props.users;\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <div className=\"contacts\">\r\n        <div className=\"contact-header\">\r\n          <h1 className=\"contact-title\">Online</h1>\r\n        </div>\r\n        <div className=\"contact-body\">\r\n          {data.map((user) => {\r\n            return (\r\n              <motion.div key={user}>\r\n                <div className=\"divisor\"></div>\r\n                <a\r\n                  href={`https://open.spotify.com/user/${user.id}`}\r\n                  target=\"_blank\"\r\n                >\r\n                  <motion.div\r\n                    key={user.id}\r\n                    className=\"item\"\r\n                    initial={{\r\n                      scale: 0,\r\n                    }}\r\n                    animate={{\r\n                      scale: 1,\r\n                    }}\r\n                    transition={{ type: \"spring\", duration: 0.5, bounce: 0.3 }}\r\n                    exit={{\r\n                      opacity: 0,\r\n                    }}\r\n                  >\r\n                    <div className=\"item-image-container\">\r\n                      <img className=\"profile-image\" src={user.image} alt=\"\" />\r\n                    </div>\r\n                    <div className=\"item-info\">\r\n                      <div className=\"item-name\">{user.nickname}</div>\r\n                      <div className=\"item-info-status\">\r\n                        {user.followers == 1 ? (\r\n                          <p>1 follower </p>\r\n                        ) : (\r\n                          <p>{user.followers} followers</p>\r\n                        )}\r\n                      </div>\r\n                    </div>\r\n                    <div className=\"item-status\">\r\n                      <div className=\"status\"></div>\r\n                    </div>\r\n                  </motion.div>\r\n                </a>\r\n              </motion.div>\r\n            );\r\n          })}\r\n          <div className=\"divisor\"></div>\r\n        </div>\r\n      </div>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default Contacts;\r\n","C:\\Users\\Jesús9\\Desktop\\gf\\client\\src\\components\\Login.js",[],"C:\\Users\\Jesús9\\Desktop\\gf\\client\\src\\data\\api.js",["179","180","181"],"import { toast } from \"react-toastify\";\r\nimport Axios from \"axios\";\r\nimport Swal from \"sweetalert2\";\r\n\r\nexport const api = {\r\n  endpoint: \"\",\r\n  data: {},\r\n  get: async function () {\r\n    return (await Axios.get(`${this.endpoint}/api/get`)).data;\r\n  },\r\n  insert: async function () {\r\n    this.data.date = Date.now();\r\n    const upload = await Axios.post(`${this.endpoint}/api/insert`, this.data);\r\n\r\n    toast.success(\"🚀 Successfully Added!\", {\r\n      position: \"top-right\",\r\n      autoClose: 2500,\r\n      hideProgressBar: true,\r\n      closeOnClick: true,\r\n      pauseOnHover: true,\r\n      draggable: true,\r\n      progress: undefined,\r\n    });\r\n\r\n    return upload.data;\r\n  },\r\n  update: async function (id, songList) {\r\n    const update = await Axios.put(\r\n      `${this.endpoint}/api/update/${id}`,\r\n      this.data\r\n    );\r\n\r\n    for (let i = 0; i < songList.length; i++) {\r\n      if (songList[i].id == id) {\r\n        update.data.author = songList[i].author;\r\n        songList[i] = update.data;\r\n        break;\r\n      }\r\n    }\r\n\r\n    toast.success(\"🚀 Your review has been updated!\", {\r\n      position: \"top-right\",\r\n      autoClose: 2500,\r\n      hideProgressBar: true,\r\n      closeOnClick: true,\r\n      pauseOnHover: true,\r\n      draggable: true,\r\n      progress: undefined,\r\n    });\r\n\r\n    return songList;\r\n  },\r\n  delete: async function (id, songList) {\r\n    const deleted = await Swal.fire({\r\n      title: \"Are you sure?\",\r\n      text: \"You won't be able to revert this!\",\r\n      icon: \"warning\",\r\n      showCancelButton: true,\r\n      confirmButtonColor: \"#3085d6\",\r\n      cancelButtonColor: \"#d33\",\r\n      confirmButtonText: \"Yes, delete it!\",\r\n    });\r\n\r\n    if (deleted.isConfirmed) {\r\n      Axios.delete(`${this.endpoint}/api/delete/${id}/`);\r\n\r\n      toast.success(\"🚀 Your review has been deleted!\", {\r\n        position: \"top-right\",\r\n        autoClose: 2500,\r\n        hideProgressBar: true,\r\n        closeOnClick: true,\r\n        pauseOnHover: true,\r\n        draggable: true,\r\n        progress: undefined,\r\n      });\r\n\r\n      return songList.filter((e) => {\r\n        return e.id != id;\r\n      });\r\n    } else {\r\n      return songList;\r\n    }\r\n  },\r\n  setLikes: async function (id, songList, likes) {\r\n    this.data.likes = likes;\r\n\r\n    if (likes < -1) likes = 0;\r\n\r\n    await Axios.put(`${this.endpoint}/api/update/setLikes/${id}`, this.data);\r\n\r\n    for (let i = 0; i < songList.length; i++) {\r\n      if (songList[i].id == id) {\r\n        songList[i] = this.data;\r\n        break;\r\n      }\r\n    }\r\n\r\n    return songList;\r\n  },\r\n};\r\n","C:\\Users\\Jesús9\\Desktop\\gf\\client\\src\\components\\RegisterForm.js",["182","183","184","185"],"import React, { useEffect, useState } from \"react\";\r\nimport \"tailwindcss/tailwind.css\";\r\nimport \"../components/styles/RegisterForm.css\";\r\nimport \"../components/styles/SmartRegisterForm.css\";\r\nimport ReactStars from \"react-rating-stars-component\";\r\n\r\nimport { faCheck } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { spotifyApi } from \"../data/spotifyApi\";\r\nimport { AnimatePresence, motion } from \"framer-motion\";\r\nimport Axios from \"axios\";\r\nimport Cookies from \"js-cookie\";\r\n\r\nconst RegisterForm = (props) => {\r\n  const [token, setToken] = useState(\"\");\r\n  const [disableButton, setDisableButton] = useState(true);\r\n  const [genres, setGenres] = useState([]);\r\n\r\n  const stars = {\r\n    size: 50,\r\n    value: 0,\r\n    isHalf: true,\r\n  };\r\n\r\n  useEffect(() => {\r\n    setToken(Cookies.get(\"spotifyAuthToken\"));\r\n  });\r\n\r\n  const review = React.useRef(null);\r\n  const reviewAlert = React.useRef(null);\r\n  const spotifyURL = React.useRef(null);\r\n  const spotifyURLAlert = React.useRef(null);\r\n\r\n  const spotifyInputStatus = {\r\n    check: React.useRef(null),\r\n    loader: React.useRef(null),\r\n    container: React.useRef(null),\r\n    loading: function () {\r\n      spotifyURL.current.style.width = \"85%\";\r\n      this.loader.current.style.display = \"block\";\r\n      this.container.current.style.display = \"block\";\r\n      this.check.current.style.display = \"none\";\r\n      setTimeout(() => {\r\n        this.loader.current.style.opacity = \"1\";\r\n      }, 700);\r\n    },\r\n    sucess: function () {\r\n      this.loader.current.style.opacity = \"0\";\r\n      let spotifyInputAux = spotifyURL.current;\r\n      this.check.current.style.display = \"none\";\r\n\r\n      setTimeout(() => {\r\n        this.loader.current.style.display = \"none\";\r\n        this.check.current.style.display = \"block\";\r\n        setTimeout(() => {\r\n          this.check.current.style.opacity = \"1\";\r\n          setDisableButton(false);\r\n          setTimeout(() => {\r\n            this.check.current.style.opacity = \"0\";\r\n            this.container.current.style.display = \"none\";\r\n            spotifyInputAux.style.width = \"100%\";\r\n          }, 800);\r\n        }, 100);\r\n      }, 200);\r\n    },\r\n    error: function () {\r\n      this.loader.current.style.opacity = \"0\";\r\n      let spotifyInputAux = spotifyURL.current;\r\n      let spotifyAlertAux = spotifyURLAlert.current;\r\n      this.check.current.style.display = \"none\";\r\n\r\n      setTimeout(() => {\r\n        this.loader.current.style.display = \"none\";\r\n        this.check.current.style.display = \"block\";\r\n\r\n        spotifyAlertAux.textContent = \"Please, enter a valid URL!\";\r\n        spotifyAlertAux.style.opacity = \"1\";\r\n        spotifyInputAux.classList.add(\"wrong-input\");\r\n\r\n        setTimeout(() => {\r\n          this.check.current.style.opacity = \"0\";\r\n          this.container.current.style.display = \"none\";\r\n          spotifyInputAux.style.width = \"100%\";\r\n        }, 800);\r\n      }, 500);\r\n    },\r\n  };\r\n\r\n  const validateUrl = (spotifyUrl) => {\r\n    const url = document.createElement(\"a\");\r\n    url.href = spotifyUrl;\r\n\r\n    if (url.protocol != \"https:\") {\r\n      return false;\r\n    }\r\n\r\n    if (url.hostname != \"open.spotify.com\") {\r\n      return false;\r\n    }\r\n\r\n    if (!url.pathname.includes(\"/track/\")) {\r\n      return false;\r\n    }\r\n\r\n    return true;\r\n  };\r\n\r\n  function validation() {\r\n    if (review.current.value.length <= 0) {\r\n      reviewAlert.current.style.opacity = \"1\";\r\n      review.current.classList.add(\"wrong-input\");\r\n      reviewAlert.current.textContent = \"Please fill out this field.\";\r\n      return false;\r\n    } else {\r\n      review.current.classList.remove(\"wrong-input\");\r\n      reviewAlert.current.style.opacity = \"0\";\r\n    }\r\n\r\n    if (review.current.value.length <= 1) {\r\n      reviewAlert.current.style.opacity = \"1\";\r\n      reviewAlert.current.textContent = \"Please, make a longer comment!\";\r\n      review.current.classList.add(\"wrong-input\");\r\n      return false;\r\n    } else {\r\n      review.current.classList.remove(\"wrong-input\");\r\n      reviewAlert.current.style.opacity = \"0\";\r\n    }\r\n\r\n    if (review.current.value.length >= 150) {\r\n      reviewAlert.current.textContent = \"Please, make a smaller comment!\";\r\n      reviewAlert.current.style.opacity = \"1\";\r\n      review.current.classList.add(\"wrong-input\");\r\n      return false;\r\n    } else {\r\n      reviewAlert.current.style.opacity = \"0\";\r\n      review.current.classList.remove(\"wrong-input\");\r\n    }\r\n\r\n    if (!validateUrl(spotifyURL.current.value)) {\r\n      spotifyURLAlert.current.textContent = \"Please, enter a valid URL!\";\r\n      spotifyURLAlert.current.style.opacity = \"1\";\r\n      spotifyURL.current.classList.add(\"wrong-input\");\r\n      return false;\r\n    } else {\r\n      spotifyURLAlert.current.style.opacity = \"0\";\r\n      spotifyURL.current.classList.remove(\"wrong-input\");\r\n    }\r\n\r\n    return true;\r\n  }\r\n\r\n  const handleChange = (e) => {\r\n    setDisableButton(true);\r\n    if (e.length > 0) {\r\n      spotifyInputStatus.loading();\r\n      spotifyURLAlert.current.style.opacity = \"0\";\r\n      spotifyURL.current.classList.remove(\"wrong-input\");\r\n\r\n      setTimeout(async () => {\r\n        if (validateUrl(spotifyURL.current.value)) {\r\n          const track_id = e.slice(31, 53);\r\n\r\n          spotifyApi.setConfig(token);\r\n\r\n          try {\r\n            const data = await spotifyApi.song.get(track_id);\r\n            props.onSongChange(data.name);\r\n            props.onArtistChange(data.artists[0].name);\r\n            props.selectImage(data.album.images[0].url);\r\n\r\n            spotifyInputStatus.sucess();\r\n\r\n            const genres = await spotifyApi.song.getGenres(data.artists[0].id);\r\n\r\n            if (genres.length > 0) {\r\n              setGenres(genres);\r\n              props.onGenreChange(genres[0]);\r\n            } else {\r\n              setGenres([\r\n                \"country\",\r\n                \"electronic\",\r\n                \"hip-hop\",\r\n                \"jazz\",\r\n                \"metal\",\r\n                \"pop\",\r\n                \"k-pop\",\r\n                \"indie pop\",\r\n                \"bedroom pop\",\r\n                \"dance pop\",\r\n                \"rock pop\",\r\n                \"Rap\",\r\n                \"blues\",\r\n                \"eock\",\r\n                \"indie rock\",\r\n                \"hard rock\",\r\n                \"soft rock\",\r\n                \"dance rock\",\r\n                \"alternative rock\",\r\n                \"rock en espanol\",\r\n                \"trova\",\r\n                \"alternative\",\r\n              ]);\r\n              props.onGenreChange(\"country\");\r\n            }\r\n          } catch (err) {\r\n            console.log(err);\r\n            spotifyInputStatus.error();\r\n          }\r\n        } else {\r\n          spotifyInputStatus.error();\r\n        }\r\n      }, 1500);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <div className=\"display-flex justify-start\"></div>\r\n      <form\r\n        onSubmit={(e) => {\r\n          e.preventDefault();\r\n          if (validation()) {\r\n            props.onSubmit();\r\n          }\r\n        }}\r\n        className=\"register-form\"\r\n      >\r\n        <p className=\"input-label\">Spotify URL: </p>\r\n\r\n        <div className=\"spotify-link-container\">\r\n          <input\r\n            type=\"text\"\r\n            className=\"swal2-input spotify-link-input\"\r\n            placeholder=\"Spotify link of the song...\"\r\n            onChange={(e) => {\r\n              handleChange(e.target.value);\r\n              props.onSpotifyUrlChange(e.target.value);\r\n            }}\r\n            ref={spotifyURL}\r\n          />\r\n\r\n          <div\r\n            className=\"spotify-link-status\"\r\n            ref={spotifyInputStatus.container}\r\n          >\r\n            <div ref={spotifyInputStatus.check} className=\"check-icon\">\r\n              <FontAwesomeIcon icon={faCheck} />\r\n            </div>\r\n\r\n            <div class=\"lds-ring\" ref={spotifyInputStatus.loader}>\r\n              <div></div>\r\n              <div></div>\r\n              <div></div>\r\n              <div></div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <p className=\"alert-label\" ref={spotifyURLAlert}>\r\n          Please fill out this field.\r\n        </p>\r\n\r\n        {/* <div\r\n          className={`genre-container ${\r\n            genres.length ? \"show-genre\" : \"hide-genre\"\r\n          }`}\r\n        >\r\n          <p className=\"input-label\">Genre: </p>\r\n\r\n          <select\r\n            className={`swal2-input ${\r\n              genres.length ? \"genre-input\" : \"genre-input-hidden\"\r\n            }`}\r\n            onChange={(e) => {\r\n              props.onGenreChange(e.target.value);\r\n            }}\r\n          >\r\n            {genres.length ? (\r\n              genres.map((genre) => {\r\n                return (\r\n                  <option value={genre} className=\"genre-option\">\r\n                    {genre}\r\n                  </option>\r\n                );\r\n              })\r\n            ) : (\r\n              <div />\r\n            )}\r\n          </select>\r\n          <p className=\"alert-label\">.</p>\r\n        </div> */}\r\n        <AnimatePresence>\r\n          {genres.length && (\r\n            <motion.div\r\n              className={`genre-container show-genre`}\r\n              initial={{\r\n                scale: 0.3,\r\n              }}\r\n              animate={{ scale: 1 }}\r\n              transition={{\r\n                duration: 0.7,\r\n                type: \"spring\",\r\n                bounce: 0.5,\r\n              }}\r\n            >\r\n              <p className=\"input-label\">Genre: </p>\r\n\r\n              <select\r\n                className={`swal2-input genre-input`}\r\n                onChange={(e) => {\r\n                  props.onGenreChange(e.target.value);\r\n                }}\r\n              >\r\n                {genres.length ? (\r\n                  genres.map((genre) => {\r\n                    return (\r\n                      <option value={genre} className=\"genre-option\">\r\n                        {genre}\r\n                      </option>\r\n                    );\r\n                  })\r\n                ) : (\r\n                  <div />\r\n                )}\r\n              </select>\r\n              <p className=\"alert-label\">s</p>\r\n            </motion.div>\r\n          )}\r\n        </AnimatePresence>\r\n\r\n        <p className=\"input-label\">Review: </p>\r\n\r\n        <input\r\n          type=\"text\"\r\n          className=\"swal2-input\"\r\n          placeholder=\"A little commentary...\"\r\n          onChange={(e) => {\r\n            props.onCommentChange(e.target.value);\r\n          }}\r\n          ref={review}\r\n        />\r\n\r\n        <p className=\"alert-label\" ref={reviewAlert}>\r\n          Please fill out this field.\r\n        </p>\r\n\r\n        <p className=\"input-label\">Rating: </p>\r\n\r\n        <ReactStars\r\n          {...stars}\r\n          className=\"stars-calification\"\r\n          onChange={(e) => {\r\n            props.ratingChanged(e);\r\n          }}\r\n        />\r\n\r\n        {disableButton ? (\r\n          <button disabled={true} className=\"submit-button disabled-button\">\r\n            UPLOAD\r\n          </button>\r\n        ) : (\r\n          <button type=\"submit\" className=\"submit-button\">\r\n            UPLOAD\r\n          </button>\r\n        )}\r\n      </form>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default RegisterForm;\r\n","C:\\Users\\Jesús9\\Desktop\\gf\\client\\src\\components\\CarouselRow.js",["186","187","188","189"],"import React, { useEffect, useState } from \"react\";\r\nimport Carousel from \"react-elastic-carousel\";\r\nimport Card from \"./Card\";\r\nimport \"./styles/CarouselRow.css\";\r\n\r\nimport {\r\n  faChevronLeft,\r\n  faChevronRight,\r\n} from \"@fortawesome/free-solid-svg-icons\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\nimport { motion } from \"framer-motion\";\r\n\r\nconst CarouselRow = (props) => {\r\n  const likedSongs = useSelector((state) => state.user.likedSongs);\r\n\r\n  const carousel = React.useRef(null);\r\n\r\n  const [index, setIndex] = useState(0);\r\n  const [sortTypeState, setSortTypeState] = useState(props.sortType);\r\n\r\n  const handleClick = (value) => {\r\n    if (index + value == -1 || index + value == props.data.songList.length)\r\n      return;\r\n    setIndex(index + value);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (carousel.current) carousel.current.goTo(index);\r\n  }, [index]);\r\n\r\n  if (sortTypeState != props.sortType) {\r\n    setSortTypeState(props.sortType);\r\n  }\r\n\r\n  let sorted = [];\r\n\r\n  const sortType = props.sortType;\r\n\r\n  if (sortType === \"song\")\r\n    sorted = props.data.songList.sort((a, b) =>\r\n      a[sortType].localeCompare(b[sortType], \"en\", { sensitivity: \"base\" })\r\n    );\r\n  else sorted = props.data.songList.sort((a, b) => b[sortType] - a[sortType]);\r\n\r\n  return (\r\n    <motion.div\r\n      className=\"m-auto carousel-row\"\r\n      initial={{ opacity: 0 }}\r\n      animate={{ opacity: 1 }}\r\n      exit={{ opacity: 0 }}\r\n      transition={{\r\n        duration: 0.05,\r\n        delay: 0.2,\r\n      }}\r\n    >\r\n      <div className=\"w-100 flex justify-center\">\r\n        <div className=\"carousel-buttons\">\r\n          <h5 className=\"carousel-genre\">{props.data.genre}</h5>\r\n          <div className=\"buttons-container\">\r\n            <button\r\n              className=\"backward-button carousel-button\"\r\n              onClick={() => {\r\n                handleClick(-1);\r\n              }}\r\n            >\r\n              <FontAwesomeIcon\r\n                icon={faChevronLeft}\r\n                className={`carousel-arrows-icon ${\r\n                  index > 0 ? \"\" : \"disabled-carousel-arrows-icon\"\r\n                }`}\r\n              />\r\n            </button>\r\n            <button\r\n              className=\"forward-button carousel-button\"\r\n              onClick={() => {\r\n                handleClick(1);\r\n              }}\r\n            >\r\n              <FontAwesomeIcon\r\n                icon={faChevronRight}\r\n                className={`carousel-arrows-icon ${\r\n                  index + 1 < props.data.songList.length\r\n                    ? \"\"\r\n                    : \"disabled-carousel-arrows-icon\"\r\n                }`}\r\n              />\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <Carousel\r\n        focusOnSelect={true}\r\n        ref={carousel}\r\n        outerSpacing={10}\r\n        renderArrow={() => {\r\n          return <div />;\r\n        }}\r\n      >\r\n        {sorted.map((song) => {\r\n          song.isInPlaylist = likedSongs.findIndex((item) => {\r\n            return item.track.id == song.id;\r\n          });\r\n          if (song.isInPlaylist > -1)\r\n            song.uri = likedSongs[song.isInPlaylist].track.uri > -1;\r\n          return (\r\n            <Card\r\n              data={song}\r\n              {...props}\r\n              sortType={sortTypeState ? sortTypeState : \"song\"}\r\n            ></Card>\r\n          );\r\n        })}\r\n      </Carousel>\r\n    </motion.div>\r\n  );\r\n};\r\n\r\nexport default CarouselRow;\r\n","C:\\Users\\Jesús9\\Desktop\\gf\\client\\src\\redux\\store.js",[],"C:\\Users\\Jesús9\\Desktop\\gf\\client\\src\\redux\\rootReducer.js",[],"C:\\Users\\Jesús9\\Desktop\\gf\\client\\src\\redux\\user\\reducer.js",[],"C:\\Users\\Jesús9\\Desktop\\gf\\client\\src\\redux\\user\\actions.js",[],"C:\\Users\\Jesús9\\Desktop\\gf\\client\\src\\pages\\styles\\Home.style.js",[],"C:\\Users\\Jesús9\\Desktop\\gf\\client\\src\\components\\CompleteCard.js",["190","191","192","193","194"],"C:\\Users\\Jesús9\\Desktop\\gf\\client\\src\\components\\styles\\CompleteCard.style.js",[],"C:\\Users\\Jesús9\\Desktop\\gf\\client\\src\\components\\styles\\Card.style.js",["195"],"C:\\Users\\Jesús9\\Desktop\\gf\\client\\src\\components\\CardsList.js",["196"],"import React from \"react\";\r\nimport { CardsContainer } from \"./styles/CardsList.style\";\r\nimport { useSelector } from \"react-redux\";\r\nimport Card from \"./Card\";\r\n\r\nconst CardsList = (props) => {\r\n  const likedSongs = useSelector((state) => state.user.likedSongs);\r\n\r\n  return (\r\n    <CardsContainer>\r\n      {props.songList.map((item) => {\r\n        item.isInPlaylist = likedSongs.findIndex((song) => {\r\n          return song.track.id == item.id;\r\n        });\r\n        if (item.isInPlaylist > -1)\r\n          item.uri = likedSongs[item.isInPlaylist].track.uri > -1;\r\n        return <Card data={item} {...props} />;\r\n      })}\r\n    </CardsContainer>\r\n  );\r\n};\r\n\r\nexport default CardsList;\r\n","C:\\Users\\Jesús9\\Desktop\\gf\\client\\src\\components\\styles\\CardsList.style.js",[],"C:\\Users\\Jesús9\\Desktop\\gf\\client\\src\\pages\\styles\\Register.style.js",[],{"ruleId":"197","replacedBy":"198"},{"ruleId":"199","replacedBy":"200"},{"ruleId":"201","severity":1,"message":"202","line":2,"column":25,"nodeType":"203","messageId":"204","endLine":2,"endColumn":31},{"ruleId":"201","severity":1,"message":"205","line":4,"column":31,"nodeType":"203","messageId":"204","endLine":4,"endColumn":46},{"ruleId":"201","severity":1,"message":"206","line":14,"column":8,"nodeType":"203","messageId":"204","endLine":14,"endColumn":17},{"ruleId":"201","severity":1,"message":"207","line":15,"column":8,"nodeType":"203","messageId":"204","endLine":15,"endColumn":14},{"ruleId":"201","severity":1,"message":"208","line":17,"column":8,"nodeType":"203","messageId":"204","endLine":17,"endColumn":15},{"ruleId":"209","severity":1,"message":"210","line":396,"column":13,"nodeType":"211","endLine":396,"endColumn":50},{"ruleId":"209","severity":1,"message":"210","line":400,"column":13,"nodeType":"211","endLine":400,"endColumn":70},{"ruleId":"209","severity":1,"message":"210","line":404,"column":13,"nodeType":"211","endLine":404,"endColumn":58},{"ruleId":"209","severity":1,"message":"210","line":408,"column":13,"nodeType":"211","endLine":408,"endColumn":77},{"ruleId":"209","severity":1,"message":"210","line":412,"column":13,"nodeType":"211","endLine":412,"endColumn":81},{"ruleId":"201","severity":1,"message":"212","line":1,"column":38,"nodeType":"203","messageId":"204","endLine":1,"endColumn":47},{"ruleId":"201","severity":1,"message":"213","line":71,"column":10,"nodeType":"203","messageId":"204","endLine":71,"endColumn":19},{"ruleId":"201","severity":1,"message":"214","line":73,"column":10,"nodeType":"203","messageId":"204","endLine":73,"endColumn":20},{"ruleId":"201","severity":1,"message":"215","line":81,"column":9,"nodeType":"203","messageId":"204","endLine":81,"endColumn":18},{"ruleId":"216","severity":1,"message":"217","line":91,"column":13,"nodeType":"218","endLine":136,"endColumn":4},{"ruleId":"216","severity":1,"message":"219","line":136,"column":6,"nodeType":"220","endLine":136,"endColumn":13,"suggestions":"221"},{"ruleId":"222","severity":1,"message":"223","line":342,"column":37,"nodeType":"224","messageId":"225","endLine":342,"endColumn":39},{"ruleId":"222","severity":1,"message":"226","line":373,"column":54,"nodeType":"224","messageId":"225","endLine":373,"endColumn":56},{"ruleId":"222","severity":1,"message":"223","line":409,"column":18,"nodeType":"224","messageId":"225","endLine":409,"endColumn":20},{"ruleId":"227","severity":1,"message":"228","line":21,"column":47,"nodeType":"229","endLine":21,"endColumn":62},{"ruleId":"227","severity":1,"message":"228","line":27,"column":59,"nodeType":"229","endLine":27,"endColumn":74},{"ruleId":"230","severity":1,"message":"231","line":25,"column":19,"nodeType":"211","endLine":28,"endColumn":20},{"ruleId":"230","severity":1,"message":"231","line":64,"column":13,"nodeType":"211","endLine":67,"endColumn":14},{"ruleId":"230","severity":1,"message":"231","line":70,"column":13,"nodeType":"211","endLine":73,"endColumn":14},{"ruleId":"222","severity":1,"message":"226","line":99,"column":30,"nodeType":"224","messageId":"225","endLine":99,"endColumn":32},{"ruleId":"216","severity":1,"message":"232","line":30,"column":6,"nodeType":"220","endLine":30,"endColumn":13,"suggestions":"233"},{"ruleId":"197","replacedBy":"234"},{"ruleId":"199","replacedBy":"235"},{"ruleId":"201","severity":1,"message":"236","line":1,"column":17,"nodeType":"203","messageId":"204","endLine":1,"endColumn":26},{"ruleId":"222","severity":1,"message":"223","line":11,"column":16,"nodeType":"224","messageId":"225","endLine":11,"endColumn":18},{"ruleId":"222","severity":1,"message":"226","line":17,"column":24,"nodeType":"224","messageId":"225","endLine":17,"endColumn":26},{"ruleId":"201","severity":1,"message":"237","line":25,"column":9,"nodeType":"203","messageId":"204","endLine":25,"endColumn":18},{"ruleId":"222","severity":1,"message":"223","line":32,"column":17,"nodeType":"224","messageId":"225","endLine":32,"endColumn":19},{"ruleId":"222","severity":1,"message":"223","line":44,"column":15,"nodeType":"224","messageId":"225","endLine":44,"endColumn":17},{"ruleId":"201","severity":1,"message":"238","line":4,"column":23,"nodeType":"203","messageId":"204","endLine":4,"endColumn":29},{"ruleId":"222","severity":1,"message":"226","line":16,"column":13,"nodeType":"224","messageId":"225","endLine":16,"endColumn":15},{"ruleId":"222","severity":1,"message":"226","line":16,"column":42,"nodeType":"224","messageId":"225","endLine":16,"endColumn":44},{"ruleId":"216","severity":1,"message":"239","line":18,"column":6,"nodeType":"220","endLine":18,"endColumn":13,"suggestions":"240"},{"ruleId":"222","severity":1,"message":"226","line":94,"column":28,"nodeType":"224","messageId":"225","endLine":94,"endColumn":30},{"ruleId":"222","severity":1,"message":"226","line":106,"column":28,"nodeType":"224","messageId":"225","endLine":106,"endColumn":30},{"ruleId":"201","severity":1,"message":"241","line":1,"column":17,"nodeType":"203","messageId":"204","endLine":1,"endColumn":23},{"ruleId":"227","severity":1,"message":"228","line":22,"column":19,"nodeType":"229","endLine":22,"endColumn":34},{"ruleId":"222","severity":1,"message":"226","line":44,"column":41,"nodeType":"224","messageId":"225","endLine":44,"endColumn":43},{"ruleId":"222","severity":1,"message":"226","line":34,"column":26,"nodeType":"224","messageId":"225","endLine":34,"endColumn":28},{"ruleId":"222","severity":1,"message":"223","line":78,"column":21,"nodeType":"224","messageId":"225","endLine":78,"endColumn":23},{"ruleId":"222","severity":1,"message":"226","line":92,"column":26,"nodeType":"224","messageId":"225","endLine":92,"endColumn":28},{"ruleId":"201","severity":1,"message":"242","line":11,"column":8,"nodeType":"203","messageId":"204","endLine":11,"endColumn":13},{"ruleId":"216","severity":1,"message":"243","line":25,"column":3,"nodeType":"203","endLine":25,"endColumn":12,"suggestions":"244"},{"ruleId":"222","severity":1,"message":"223","line":93,"column":22,"nodeType":"224","messageId":"225","endLine":93,"endColumn":24},{"ruleId":"222","severity":1,"message":"223","line":97,"column":22,"nodeType":"224","messageId":"225","endLine":97,"endColumn":24},{"ruleId":"222","severity":1,"message":"226","line":24,"column":23,"nodeType":"224","messageId":"225","endLine":24,"endColumn":25},{"ruleId":"222","severity":1,"message":"226","line":24,"column":46,"nodeType":"224","messageId":"225","endLine":24,"endColumn":48},{"ruleId":"222","severity":1,"message":"223","line":33,"column":21,"nodeType":"224","messageId":"225","endLine":33,"endColumn":23},{"ruleId":"222","severity":1,"message":"226","line":104,"column":34,"nodeType":"224","messageId":"225","endLine":104,"endColumn":36},{"ruleId":"201","severity":1,"message":"245","line":6,"column":3,"nodeType":"203","messageId":"204","endLine":6,"endColumn":11},{"ruleId":"201","severity":1,"message":"246","line":13,"column":10,"nodeType":"203","messageId":"204","endLine":13,"endColumn":14},{"ruleId":"216","severity":1,"message":"232","line":55,"column":6,"nodeType":"220","endLine":55,"endColumn":13,"suggestions":"247"},{"ruleId":"222","severity":1,"message":"226","line":66,"column":32,"nodeType":"224","messageId":"225","endLine":66,"endColumn":34},{"ruleId":"227","severity":1,"message":"228","line":191,"column":43,"nodeType":"229","endLine":191,"endColumn":58},{"ruleId":"201","severity":1,"message":"248","line":2,"column":10,"nodeType":"203","messageId":"204","endLine":2,"endColumn":16},{"ruleId":"222","severity":1,"message":"226","line":13,"column":32,"nodeType":"224","messageId":"225","endLine":13,"endColumn":34},"no-native-reassign",["249"],"no-negated-in-lhs",["250"],"no-unused-vars","'Switch' is defined but never used.","Identifier","unusedVar","'AnimatePresence' is defined but never used.","'Reviewsic' is defined but never used.","'Clairo' is defined but never used.","'Clairo3' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'Component' is defined but never used.","'showCards' is assigned a value but never used.","'likedSongs' is assigned a value but never used.","'sortArray' is assigned a value but never used.","react-hooks/exhaustive-deps","Effect callbacks are synchronous to prevent race conditions. Put the async function inside:\n\nuseEffect(() => {\n  async function fetchData() {\n    // You can await here\n    const response = await MyAPI.getData(someId);\n    // ...\n  }\n  fetchData();\n}, [someId]); // Or [] if effect doesn't need props or state\n\nLearn more about data fetching with Hooks: https://reactjs.org/link/hooks-data-fetching","ArrowFunctionExpression","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.","ArrayExpression",["251"],"eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","Expected '===' and instead saw '=='.","react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener","JSXAttribute","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","React Hook useEffect has missing dependencies: 'heartActions' and 'isInPlaylist'. Either include them or remove the dependency array.",["252"],["249"],["250"],"'useEffect' is defined but never used.","'instances' is assigned a value but never used.","'faList' is defined but never used.","React Hook useEffect has a missing dependency: 'props'. Either include it or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.",["253"],"'useRef' is defined but never used.","'Axios' is defined but never used.","React Hook useEffect contains a call to 'setToken'. Without a list of dependencies, this can lead to an infinite chain of updates. To fix this, pass [] as a second argument to the useEffect Hook.",["254"],"'faEraser' is defined but never used.","'Link' is defined but never used.",["255"],"'motion' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"256","fix":"257"},{"desc":"258","fix":"259"},{"desc":"260","fix":"261"},{"desc":"262","fix":"263"},{"desc":"258","fix":"264"},"Update the dependencies array to be: [dispatch, token]",{"range":"265","text":"266"},"Update the dependencies array to be: [heartActions, isInPlaylist, liked]",{"range":"267","text":"268"},"Update the dependencies array to be: [props, value]",{"range":"269","text":"270"},"Add dependencies array: []",{"range":"271","text":"272"},{"range":"273","text":"268"},[4057,4064],"[dispatch, token]",[910,917],"[heartActions, isInPlaylist, liked]",[696,703],"[props, value]",[885,885],", []",[1491,1498]]