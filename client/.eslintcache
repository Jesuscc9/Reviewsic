[{"/Users/jesuscc9/Desktop/Reviewsic/client/src/index.js":"1","/Users/jesuscc9/Desktop/Reviewsic/client/src/App.js":"2","/Users/jesuscc9/Desktop/Reviewsic/client/src/pages/Home.js":"3","/Users/jesuscc9/Desktop/Reviewsic/client/src/pages/NotFound.js":"4","/Users/jesuscc9/Desktop/Reviewsic/client/src/pages/Register.js":"5","/Users/jesuscc9/Desktop/Reviewsic/client/src/components/RegisterForm.js":"6","/Users/jesuscc9/Desktop/Reviewsic/client/src/components/UpdateForm.js":"7","/Users/jesuscc9/Desktop/Reviewsic/client/src/components/Card.js":"8","/Users/jesuscc9/Desktop/Reviewsic/client/src/components/Navbar.js":"9","/Users/jesuscc9/Desktop/Reviewsic/client/src/components/SmartRegisterForm.js":"10","/Users/jesuscc9/Desktop/Reviewsic/client/src/components/Login.js":"11","/Users/jesuscc9/Desktop/Reviewsic/client/src/components/Contacts.js":"12","/Users/jesuscc9/Desktop/Reviewsic/client/src/components/SwitchSample.js":"13","/Users/jesuscc9/Desktop/Reviewsic/client/src/components/Loader.js":"14","/Users/jesuscc9/Desktop/Reviewsic/client/src/data/api.js":"15","/Users/jesuscc9/Desktop/Reviewsic/client/src/data/spotifyApi.js":"16"},{"size":154,"mtime":1609829277000,"results":"17","hashOfConfig":"18"},{"size":533,"mtime":1609829277000,"results":"19","hashOfConfig":"18"},{"size":4566,"mtime":1616435608763,"results":"20","hashOfConfig":"18"},{"size":143,"mtime":1611723506882,"results":"21","hashOfConfig":"18"},{"size":8107,"mtime":1617331682031,"results":"22","hashOfConfig":"18"},{"size":5472,"mtime":1614304989703,"results":"23","hashOfConfig":"18"},{"size":3200,"mtime":1617064904635,"results":"24","hashOfConfig":"18"},{"size":4575,"mtime":1617318568234,"results":"25","hashOfConfig":"18"},{"size":2802,"mtime":1617331319198,"results":"26","hashOfConfig":"18"},{"size":7901,"mtime":1617330389623,"results":"27","hashOfConfig":"18"},{"size":402,"mtime":1617297871917,"results":"28","hashOfConfig":"18"},{"size":1495,"mtime":1616422205571,"results":"29","hashOfConfig":"18"},{"size":1100,"mtime":1614569066671,"results":"30","hashOfConfig":"18"},{"size":308,"mtime":1616533246905,"results":"31","hashOfConfig":"18"},{"size":1944,"mtime":1617330541138,"results":"32","hashOfConfig":"18"},{"size":3969,"mtime":1617318554095,"results":"33","hashOfConfig":"18"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},"1fy8ibo",{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"36"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"46","messages":"47","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48","usedDeprecatedRules":"49"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54","usedDeprecatedRules":"36"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"36"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60","usedDeprecatedRules":"36"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"36"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68","usedDeprecatedRules":"69"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"36"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77","usedDeprecatedRules":"36"},"/Users/jesuscc9/Desktop/Reviewsic/client/src/index.js",[],["78","79"],"/Users/jesuscc9/Desktop/Reviewsic/client/src/App.js",[],"/Users/jesuscc9/Desktop/Reviewsic/client/src/pages/Home.js",["80","81","82","83","84"],"import React, { useState, useEffect, useRef } from \"react\"\nimport { Link } from \"react-router-dom\"\nimport { Redirect } from 'react-router-dom'\nimport { SpotifyAuth, Scopes } from \"react-spotify-auth\"\nimport { SpotifyApiContext } from \"react-spotify-api\"\n\nimport \"../assets/animate.css\"\nimport \"react-spotify-auth/dist/index.css\"\nimport \"./styles/Home.css\"\n\nimport Parallax from \"parallax-js\"\nimport Stars from \"../assets/img/star.svg\"\nimport Moonlight from \"../assets/img/moonlight.png\"\nimport Clairo from \"../assets/img/clairo.png\"\nimport Slash from \"../assets/img/slash.png\"\nimport StarBackground from \"../assets/img/stars-back.png\"\nimport Cookies from \"js-cookie\"\n\nconst Home = () => {\n  \n  const [token, setToken] = useState(\"\")\n\n  const sceneEl = useRef(null)\n  const stars = useRef(null)\n  const header = useRef(null)\n  const login = useRef(null)\n\n  const elements = {\n    objects: document.getElementsByName(\"element\"),\n    on: function () {\n      this.objects.forEach((el) => {\n        el.style.opacity = \"1\"\n      })\n\n      stars.current.classList.add(\"star-shadow\")\n      stars.current.style.opacity = \"1\"\n    },\n    off: function () {\n      this.objects.forEach((el) => {\n        el.style.opacity = \"0.7\"\n      })\n\n      stars.current.classList.remove(\"star-shadow\")\n      stars.current.style.opacity = \"0.2\"\n    },\n  }\n\n  useEffect(() => {\n    const parallaxInstance = new Parallax(sceneEl.current, {\n      relativeInput: true,\n    })\n\n    parallaxInstance.enable()\n\n    setTimeout(() => {\n      if(header.current){\n        header.current.style.display = \"block\"\n        header.current.classList.add(\"animate__fadeIn\")\n      }\n    }, 1500)\n\n    setToken(Cookies.get('spotifyAuthToken'))\n\n    return () => parallaxInstance.disable()\n  }, [])\n\n  const handleClick = (e) => {\n    elements.on()\n    e.preventDefault()\n\n    header.current.style.display = \"block\"\n    header.current.classList.remove(\"animate__fadeIn\")\n    header.current.classList.add(\"animate__fadeOut\")\n\n    setTimeout(() => {\n      login.current.style.display = \"flex\"\n      elements.on()\n    }, 500)\n  }\n\n  const onMouseEnter = (e) => {\n    e.preventDefault()\n    elements.on()\n  }\n\n  const onMouseLeave = (e) => {\n    e.preventDefault()\n    elements.off()\n  }\n\n\n  return (\n    <React.Fragment>\n      <div className=\"header animate__animated\" ref={header}>\n        <button\n          className=\"try-button\"\n          id=\"try-button\"\n          onMouseEnter={onMouseEnter}\n          onMouseLeave={onMouseLeave}\n          onClick={handleClick}\n        >\n          Try it now!\n        </button>\n        <h1 className=\"title\">Reviewsic</h1>\n      </div>\n\n      <div\n        className=\"login-form animate__animated animate__fadeIn\"\n        ref={login}\n        onMouseEnter={onMouseEnter} onMouseLeave={onMouseLeave}\n      >\n        {token ? (\n          <div>\n            <SpotifyApiContext.Provider value={token}>\n              <Redirect to=\"/home\"></Redirect>\n            </SpotifyApiContext.Provider>\n          </div>\n        ) : (\n          <SpotifyAuth\n            className=\"spotify-auth\"\n            // redirectUri=\"https://reviewsic.herokuapp.com/\"\n            redirectUri=\"http://localhost:3000/\"\n            clientID=\"9751c1f85b2a4684a8cc0a02f6942b91\"\n            scopes={[Scopes.playlistModifyPrivate, Scopes.userReadPrivate, Scopes.playlistReadCollaborative, Scopes.playlistModifyPublic]}\n          />\n        )}\n      </div>\n\n      <Link to=\"/home\" id=\"link\"></Link>\n\n      <div id=\"container\">\n        <div id=\"scene\" ref={sceneEl} data-scalar-x=\"10\" data-scalar-y=\"10\">\n          <div data-depth=\"0.2\">\n            <img src={Stars} className=\"stars\" />\n          </div>\n\n          <div data-depth=\"0.1\">\n            <img src={StarBackground} ref={stars} className=\"star\" />\n          </div>\n\n          <div data-depth=\"0.3\">\n            <img className=\"moonlight\" src={Moonlight} />\n          </div>\n\n          <div data-depth=\"1\" className=\"clairo-container\">\n            <img className=\"clairo\" name=\"element\" src={Clairo} />\n          </div>\n\n          <div data-depth=\"1\" className=\"slash-container\">\n            <img name=\"element\" className=\"slash\" src={Slash} />\n          </div>\n        </div>\n      </div>\n\n      <style>\n        {\n          \"\\\n        body{\\\n          background: rgb(7,33,64) !important;\\\n          background: linear-gradient(90deg, rgba(7,33,64,1) 0%, rgba(8,33,57,1) 100%);\\\n          overflow-y: hidden !important;\\\n          overflow-x: hidden !important;\\\n        }\\\n      \"\n        }\n      </style>\n    </React.Fragment>\n  )\n}\n\nexport default Home\n","/Users/jesuscc9/Desktop/Reviewsic/client/src/pages/NotFound.js",[],"/Users/jesuscc9/Desktop/Reviewsic/client/src/pages/Register.js",["85","86","87","88","89","90"],"/Users/jesuscc9/Desktop/Reviewsic/client/src/components/RegisterForm.js",["91","92"],"import React from 'react';\nimport \"tailwindcss/tailwind.css\";\nimport '../components/styles/RegisterForm.css';\nimport ReactStars from \"react-rating-stars-component\";\n\nconst RegisterForm = (props) =>{\n\n  const stars = {\n    size: 50,\n    value: 0,\n    isHalf: true,\n  }\n\n  const song = React.useRef(null);\n  const songAlert = React.useRef(null);\n  const image = React.useRef(null);\n  const imageAlert = React.useRef(null);\n  const artist = React.useRef(null);\n  const artistAlert = React.useRef(null);\n  const review = React.useRef(null);\n  const reviewAlert = React.useRef(null);\n  const spotifyURL = React.useRef(null);\n  const spotifyURLAlert = React.useRef(null);\n\n  const validateUrl = (spotifyUrl) =>{\n\n    const url = document.createElement('a');\n    url.href = spotifyUrl;\n\n    if(url.protocol != 'https:'){\n      return false\n    }\n    \n    if(url.hostname != 'open.spotify.com'){\n      return false\n    }\n    \n    if(!(url.pathname).includes('/track/')){\n      return false\n    }\n  \n    return true;\n  }\n\n  function validation(){\n    if((song.current.value).length <= 1){\n      songAlert.current.style.opacity = '1';\n      song.current.classList.add('wrong-input');\n      return false;\n    }else{\n      songAlert.current.style.opacity = '0';\n      song.current.classList.remove('wrong-input');\n    }\n\n    if((image.current.value).length <= 0){\n      imageAlert.current.style.opacity = '1';\n      image.current.classList.add('wrong-input');\n      return false;\n    }else{\n      imageAlert.current.style.opacity = '0';\n      image.current.classList.remove('wrong-input');\n    }\n\n    if((artist.current.value).length <= 0){\n      artistAlert.current.style.opacity = '1';\n      artist.current.classList.add('wrong-input');\n      return false;\n    }else{\n      artistAlert.current.style.opacity = '0';\n      artist.current.classList.remove('wrong-input');\n    }\n\n    if((review.current.value).length <= 0){\n      reviewAlert.current.style.opacity = '1';\n      review.current.classList.add('wrong-input');\n      reviewAlert.current.textContent = 'Please fill out this field.';\n      return false;\n    }else{\n      review.current.classList.remove('wrong-input');\n      reviewAlert.current.style.opacity = '0';\n    }\n\n    if((review.current.value).length <= 10){\n      reviewAlert.current.style.opacity = '1';\n      reviewAlert.current.textContent = 'Please, make a longer comment!';\n      review.current.classList.add('wrong-input');\n      return false;\n    }else{\n      review.current.classList.remove('wrong-input');\n      reviewAlert.current.style.opacity = '0';\n    }\n\n    if((review.current.value).length >= 85){\n      reviewAlert.current.textContent = 'Please, make a smaller comment!';\n      reviewAlert.current.style.opacity = '1';\n      review.current.classList.add('wrong-input');\n      return false;\n    }else{\n      reviewAlert.current.style.opacity = '0';\n      review.current.classList.remove('wrong-input');\n    }\n\n    if(!validateUrl(spotifyURL.current.value)){\n      spotifyURLAlert.current.textContent = 'Please, enter a valid URL!'\n      spotifyURLAlert.current.style.opacity = '1'\n      spotifyURL.current.classList.add('wrong-input')\n      return false\n    }else{\n      spotifyURLAlert.current.style.opacity = '0'\n      spotifyURL.current.classList.remove('wrong-input')\n    }\n\n    return true;\n  }\n\n  return(\n    <React.Fragment>\n      <form onSubmit={(e) => {\n        e.preventDefault()\n        if(validation()){\n          props.onSubmit()\n        }\n      }} className=\"register-form\">\n\n        <p className=\"input-label\">Song: </p>\n\n        <input type=\"text\" className=\"swal2-input\" placeholder=\"Name of the song...\" onChange={(e) => {props.onSongChange(e.target.value);\n        }} ref={song}/>\n\n        <p className=\"alert-label\" ref={songAlert}>Please fill out this field.</p>\n\n        <p className=\"input-label\">Image: </p>\n\n        <input type=\"file\" accept=\".png, .jpg, .jpeg\" className=\"swal2-file\" placeholder=\"\" style={{display: 'flex'\n         }} onChange={(e) => {\n           props.selectImage(e.target.files[0]);\n          }} ref={image}/> \n\n          \n        <p className=\"alert-label\" ref={imageAlert}>Please select an image.</p>\n\n        <p className=\"input-label\">Artist: </p>\n\n        <input type=\"text\" className=\"swal2-input\" placeholder=\"Author of the song...\" onChange={(e)=> {\n          props.onArtistChange(e.target.value);\n        }} ref={artist}/>\n\n        <p className=\"alert-label\" ref={artistAlert}>Please fill out this field.</p>\n\n        <p className=\"input-label\">Commentary: </p>\n\n        <input type=\"text\" className=\"swal2-input\" placeholder=\"A little review...\" onChange={(e)=> {\n          props.onCommentChange(e.target.value);\n        }} ref={review}/>\n\n        \n        <p className=\"alert-label\" ref={reviewAlert}>Please fill out this field.</p>\n\n        <p className=\"input-label\">Spotify URL: </p>\n\n        <input type=\"text\" className=\"swal2-input\" placeholder=\"Spotify link of the song...\" onChange={(e)=> {\n          props.onSpotifyUrlChange(e.target.value);\n        }} ref={spotifyURL}/>\n\n\n        <p className=\"alert-label\" ref={spotifyURLAlert}>Please fill out this field.</p>\n\n        <p className=\"input-label\">Rating: </p>\n\n        <ReactStars {...stars} className=\"stars-calification\" onChange={(e) => {\n          props.ratingChanged(e)\n        }}/>\n\n        <button type=\"submit\" className=\"submit-button\">UPLOAD</button>\n\n      </form>\n    </React.Fragment>\n  )\n}\n\nexport default RegisterForm;",["93","94"],"/Users/jesuscc9/Desktop/Reviewsic/client/src/components/UpdateForm.js",[],"/Users/jesuscc9/Desktop/Reviewsic/client/src/components/Card.js",["95","96","97"],"import React, { useState, useEffect, useRef } from \"react\"\nimport \"tailwindcss/tailwind.css\"\nimport \"../components/styles/Card.css\"\nimport ReactStars from \"react-rating-stars-component\"\n\nimport { faPen, faTrash } from \"@fortawesome/free-solid-svg-icons\"\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\"\n\nconst Card = (props) => {\n  const data = props.data\n\n  const song_name = useRef(null)\n\n  const [liked, setLiked] = useState(false)\n  const [pos, setPos] = useState(0)\n  const [uri, setUri] = useState('')\n\n  useEffect(() => {\n    let i = 0;\n    (props.likedSongs).forEach((e) => {\n      i++\n      if(e.track.name == data.song){\n        setUri(e.track.uri)\n        setLiked(true)\n        setPos(i)\n        handleHeartClick()\n        return\n      }\n    })\n  }, [])\n\n  var rating = {\n    size: 20,\n    value: data.qualification,\n    edit: false,\n  }\n  \n  let calc\n\n  const card_options = React.useRef(null);\n  const card = React.useRef(null);\n  const heart = React.useRef(null)\n  const span = React.useRef(null)\n\n  const handleMouseOver = () => {\n    card_options.current.classList.add(\"card-options-visible\")\n\n    if(song_name.current){\n      if(!calc){\n        calc = (song_name.current.scrollWidth - song_name.current.offsetWidth)\n      }\n      if(isElementOverflowing(song_name.current)){\n  \n        if(calc > 50){\n          span.current.style.transition = `${(calc / 100) * 2}s`\n        }\n  \n          span.current.style.transform = `translateX(${calc * -1}px)`\n      }\n    }\n  }\n\n  const handleMouseLeave = () => {\n    card_options.current.classList.remove(\"card-options-visible\")\n    span.current.style.transform = `translateX(${0}px)`\n\n  }\n\n  const handleHeartClick = () => {\n    if(!heart.current.classList.contains('clicked_heart')){\n      heart.current.classList.add('is_animating')\n      heart.current.addEventListener('animationend', () => {\n        heart.current.classList.remove('is_animating')\n        heart.current.classList.add('clicked_heart')\n      })\n    }else{\n      heart.current.classList.remove('clicked_heart')\n      handleMouseLeave()\n    }\n  }\n\n  function isElementOverflowing(element) {\n    return element.offsetWidth < element.scrollWidth\n  }\n\n  return (\n    <React.Fragment>\n      <div className=\"card-custom\" onMouseOver={handleMouseOver} onMouseLeave={handleMouseLeave}>\n        <div className=\"card-header\" ref={card}>\n          <div className=\"image-container\">\n            <a  href={data.spotifyUrl} target=\"_blank\">\n            <img alt=\"\" src={data.image} className=\"song-img\"/>\n\n            </a>\n          </div>\n        </div>\n        <div className=\"card-body\">\n\n          <div className=\"song-name\" ref={song_name}><span ref={span}>{data.song}</span></div>\n\n          <h5 className=\"artist-name\">{data.artist}</h5>\n          <p className=\"comment\">{data.review}</p>\n        </div>\n        <div className=\"card-footer\">\n          <ReactStars {...rating} className=\"stars-calification\" />{\" \"}\n          <p className=\"autor\">By: {data.author}</p>\n          <div className=\"card-options\" ref={card_options}>\n            {data.author_id === props.user ? \n                (\n                  <React.Fragment>\n                    <div className=\"edit-option option-container\" onClick={() => { \n                        props.update()\n                      }}>\n                      <FontAwesomeIcon\n                        icon={faPen}\n                        className=\"faPen\"\n                      />\n                    </div>\n                    <div className=\"edit-option option-container\" onClick={(e) => {\n                        props.delete({id: data.id});\n                      }}>\n                      <FontAwesomeIcon\n                        icon={faTrash}\n                        className=\"faTrash\"\n                      />\n                    </div>\n                  </React.Fragment>\n                ) : (\n                  <React.Fragment></React.Fragment>\n                )\n              }\n            <div className=\"edit-option option-container\">\n              <button href={props.spotifyUrl} target=\"_blank\">\n              </button>\n                <div className=\"heart\" ref={heart} onClick={() => {\n                  handleHeartClick()\n\n                  if(liked){\n                    props.deleteSong(data.song_id, uri, pos)\n                  }else{\n                    props.addSong(data.song_id)\n                  }\n\n                  setLiked(!liked)\n                }}></div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </React.Fragment>\n  );\n};\n\nexport default Card;\n","/Users/jesuscc9/Desktop/Reviewsic/client/src/components/Navbar.js",["98","99","100"],"import React from \"react\";\nimport \"tailwindcss/tailwind.css\";\nimport Logo from \"../assets/img/music.png\";\nimport \"../components/styles/Navbar.css\";\nimport { faPlus } from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\n\nconst navbar = (props) => {\n  return (\n    <React.Fragment>\n      <nav className=\"bg-gray-800 fixed w-full\">\n        <div className=\" px-2 sm:px-6 lg:px-8\">\n          <div className=\"relative flex items-center justify-between h-16 w-100\">\n            <div className=\"flex sm:items-stretch sm:justify-start\">\n              <div className=\"flex-shrink-0 flex items-center\">\n                <img\n                  className=\"lg:block h-8 w-auto\"\n                  src={Logo}\n                  alt=\"Workflow\"\n                />\n                <h2 className=\"logo-title\">Reviewsic</h2>\n              </div>\n              <div className=\"hidden sm:block sm:ml-6\">\n                <div className=\"flex space-x-4\">\n                  <a\n                    href=\"#\"\n                    className=\"bg-gray-900 text-white px-3 py-2 rounded-md text-sm font-medium\"\n                  >\n                    Home\n                  </a>\n                </div>\n              </div>\n            </div>\n            <div className=\"absolute inset-y-0 right-0 flex items-center pr-2 sm:static sm:inset-auto sm:ml-6 sm:pr-0 profile\">\n              <div className=\"ml-3 relative\">\n                <div className=\"options-container\">\n                  {props.token ? (\n                    <React.Fragment>\n                      <button onClick={props.onAddClick} className=\"add-button\">\n                        <FontAwesomeIcon icon={faPlus} />\n                        <p className=\"add-text\">ADD</p>\n                      </button>\n                      <img\n                        className=\"profile-image\"\n                        src={props.profileImage}\n                        alt=\"\"\n                      />\n                    </React.Fragment>\n                  ) : (\n                    <React.Fragment></React.Fragment>\n                  )}\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n\n        <div className=\"hidden sm:hidden\">\n          <div className=\"px-2 pt-2 pb-3 space-y-1\">\n            <a\n              href=\"#\"\n              className=\"bg-gray-900 text-white block px-3 py-2 rounded-md text-base font-medium\"\n            >\n              Registro\n            </a>\n            <a\n              href=\"#\"\n              className=\"text-gray-300 hover:bg-gray-700 hover:text-white block px-3 py-2 rounded-md text-base font-medium\"\n            >\n              Contactos\n            </a>\n          </div>\n        </div>\n      </nav>\n    </React.Fragment>\n  );\n};\n\nexport default navbar;\n","/Users/jesuscc9/Desktop/Reviewsic/client/src/components/SmartRegisterForm.js",["101","102","103"],"import React, { useEffect, useState } from \"react\";\nimport \"tailwindcss/tailwind.css\";\nimport \"../components/styles/RegisterForm.css\";\nimport \"../components/styles/SmartRegisterForm.css\";\nimport ReactStars from \"react-rating-stars-component\";\n\nimport { faCheck } from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport Axios from \"axios\";\nimport Cookies from \"js-cookie\";\n\nconst SmartRegisterForm = (props) => {\n  const [token, setToken] = useState(\"\");\n  const [disableButton, setDisableButton] = useState(true);\n\n  const stars = {\n    size: 50,\n    value: 0,\n    isHalf: true,\n  };\n\n  useEffect(() => {\n    setToken(Cookies.get(\"spotifyAuthToken\"));\n  });\n\n  const review = React.useRef(null);\n  const reviewAlert = React.useRef(null);\n  const spotifyURL = React.useRef(null);\n  const spotifyURLAlert = React.useRef(null);\n\n  const spotifyInputStatus = {\n    check: React.useRef(null),\n    loader: React.useRef(null),\n    container: React.useRef(null),\n    loading: function () {\n      spotifyURL.current.style.width = \"85%\";\n      this.loader.current.style.display = \"block\";\n      this.container.current.style.display = \"block\";\n      this.check.current.style.display = \"none\";\n      setTimeout(() => {\n        this.loader.current.style.opacity = \"1\";\n      }, 700);\n    },\n    sucess: function () {\n      this.loader.current.style.opacity = \"0\";\n      let spotifyInputAux = spotifyURL.current;\n      this.check.current.style.display = \"none\";\n\n      setTimeout(() => {\n        this.loader.current.style.display = \"none\";\n        this.check.current.style.display = \"block\";\n        setTimeout(() => {\n          this.check.current.style.opacity = \"1\";\n          setDisableButton(false)\n          setTimeout(() => {\n            this.check.current.style.opacity = \"0\";\n            this.container.current.style.display = \"none\";\n            spotifyInputAux.style.width = \"100%\";\n          }, 800);\n        }, 100);\n      }, 200);\n    },\n    error: function () {\n      this.loader.current.style.opacity = \"0\";\n      let spotifyInputAux = spotifyURL.current;\n      let spotifyAlertAux = spotifyURLAlert.current;\n      this.check.current.style.display = \"none\";\n\n      setTimeout(() => {\n        this.loader.current.style.display = \"none\";\n        this.check.current.style.display = \"block\";\n\n        spotifyAlertAux.textContent = \"Please, enter a valid URL!\";\n        spotifyAlertAux.style.opacity = \"1\";\n        spotifyInputAux.classList.add(\"wrong-input\");\n\n        setTimeout(() => {\n          this.check.current.style.opacity = \"0\";\n          this.container.current.style.display = \"none\";\n          spotifyInputAux.style.width = \"100%\";\n        }, 800);\n      }, 500);\n    },\n  }\n\n  const validateUrl = (spotifyUrl) => {\n    const url = document.createElement(\"a\");\n    url.href = spotifyUrl;\n\n    if (url.protocol != \"https:\") {\n      return false;\n    }\n\n    if (url.hostname != \"open.spotify.com\") {\n      return false;\n    }\n\n    if (!url.pathname.includes(\"/track/\")) {\n      return false;\n    }\n\n    return true;\n  }\n\n  function validation() {\n    if (review.current.value.length <= 0) {\n      reviewAlert.current.style.opacity = \"1\";\n      review.current.classList.add(\"wrong-input\");\n      reviewAlert.current.textContent = \"Please fill out this field.\";\n      return false;\n    } else {\n      review.current.classList.remove(\"wrong-input\");\n      reviewAlert.current.style.opacity = \"0\";\n    }\n\n    if (review.current.value.length <= 1) {\n      reviewAlert.current.style.opacity = \"1\";\n      reviewAlert.current.textContent = \"Please, make a longer comment!\";\n      review.current.classList.add(\"wrong-input\");\n      return false;\n    } else {\n      review.current.classList.remove(\"wrong-input\");\n      reviewAlert.current.style.opacity = \"0\";\n    }\n\n    if (review.current.value.length >= 150) {\n      reviewAlert.current.textContent = \"Please, make a smaller comment!\";\n      reviewAlert.current.style.opacity = \"1\";\n      review.current.classList.add(\"wrong-input\");\n      return false;\n    } else {\n      reviewAlert.current.style.opacity = \"0\";\n      review.current.classList.remove(\"wrong-input\");\n    }\n\n    if (!validateUrl(spotifyURL.current.value)) {\n      spotifyURLAlert.current.textContent = \"Please, enter a valid URL!\";\n      spotifyURLAlert.current.style.opacity = \"1\";\n      spotifyURL.current.classList.add(\"wrong-input\");\n      return false;\n    } else {\n      spotifyURLAlert.current.style.opacity = \"0\";\n      spotifyURL.current.classList.remove(\"wrong-input\");\n    }\n\n    return true;\n  }\n\n  const handleChange = (e) => {\n    setDisableButton(true)\n    if (e.length > 0) {\n      spotifyInputStatus.loading()\n      spotifyURLAlert.current.style.opacity = \"0\"\n      spotifyURL.current.classList.remove(\"wrong-input\")\n\n      setTimeout(async () => {\n        if (validateUrl(spotifyURL.current.value)) {\n          const track_id = e.slice(31, 53)\n\n          const config = {\n            headers: {\n              Authorization: \"Bearer \" + token,\n            },\n          }\n\n          try {\n            let data = await Axios.get(\n              `https://api.spotify.com/v1/tracks/${track_id}`,\n              config\n            );\n\n            data = data.data;\n            props.onSongChange(data.name);\n            props.onArtistChange(data.artists[0].name);\n            props.selectImage(data.album.images[0].url);\n\n            spotifyInputStatus.sucess();\n          } catch (err) {\n            spotifyInputStatus.error();\n          }\n        } else {\n          spotifyInputStatus.error();\n        }\n      }, 1500);\n    }\n  }\n\n  return (\n    <React.Fragment>\n      <div className=\"display-flex justify-start\">\n      </div>\n      <form\n        onSubmit={(e) => {\n          e.preventDefault();\n          if (validation()) {\n            props.onSubmit();\n          }\n        }}\n        className=\"register-form\">\n\n        <p className=\"input-label\">Spotify URL: </p>\n\n        <div className=\"spotify-link-container\">\n          <input\n            type=\"text\"\n            className=\"swal2-input spotify-link-input\"\n            placeholder=\"Spotify link of the song...\"\n            onChange={(e) => {\n              handleChange(e.target.value)\n              props.onSpotifyUrlChange(e.target.value)\n            }}\n            ref={spotifyURL}\n          />\n\n          <div\n            className=\"spotify-link-status\"\n            ref={spotifyInputStatus.container}\n          >\n            <div ref={spotifyInputStatus.check} className=\"check-icon\">\n              <FontAwesomeIcon icon={faCheck} />\n            </div>\n\n            <div class=\"lds-ring\" ref={spotifyInputStatus.loader}>\n              <div></div>\n              <div></div>\n              <div></div>\n              <div></div>\n            </div>\n          </div>\n        </div>\n\n        <p className=\"alert-label\" ref={spotifyURLAlert}>\n          Please fill out this field.\n        </p>\n\n        <p className=\"input-label\">Review: </p>\n\n        <input\n          type=\"text\"\n          className=\"swal2-input\"\n          placeholder=\"A little commentary...\"\n          onChange={(e) => {\n            props.onCommentChange(e.target.value);\n          }}\n          ref={review}\n        />\n\n        <p className=\"alert-label\" ref={reviewAlert}>\n          Please fill out this field.\n        </p>\n\n        <p className=\"input-label\">Rating: </p>\n\n        <ReactStars\n          {...stars}\n          className=\"stars-calification\"\n          onChange={(e) => {\n            props.ratingChanged(e);\n          }}\n        />\n\n        {disableButton ? (\n          <button disabled={true} className=\"submit-button disabled-button\">\n            UPLOAD\n          </button>\n        ) : (\n          <button type=\"submit\" className=\"submit-button\">\n            UPLOAD\n          </button>\n        )}\n      </form>\n    </React.Fragment>\n  );\n};\n\nexport default SmartRegisterForm;\n","/Users/jesuscc9/Desktop/Reviewsic/client/src/components/Login.js",[],"/Users/jesuscc9/Desktop/Reviewsic/client/src/components/Contacts.js",["104","105","106"],"import React, { useRef } from \"react\";\nimport \"tailwindcss/tailwind.css\";\nimport \"../components/styles/Contacts.css\";\n\nconst Contacts = (props) => {\n  const data = props.users\n\n  return (\n    <React.Fragment>\n      <div className=\"contacts\">\n        <div className=\"contact-header\">\n          <h1 className=\"contact-title\">Online</h1>\n        </div>\n        <div className=\"contact-body\" >\n          {data.map((user) => {\n            return (\n              <React.Fragment key={user}>\n                <div className=\"divisor\"></div>\n                <a href={`https://open.spotify.com/user/${user.id}`} target=\"_blank\">\n                <div className=\"item\">\n                  <div className=\"item-image-container\">\n                    <img className=\"profile-image\" src={user.image} alt=\"\"/>\n                  </div>\n                  <div className=\"item-info\">\n                    <div className=\"item-name\">{user.nickname}</div>\n                    <div className=\"item-info-status\">\n                      {user.followers == 1 ? <p>1 follower </p> : <p>{user.followers} followers</p>}\n                    </div>\n                  </div>\n                  <div className=\"item-status\">\n                    <div className=\"status\"></div>\n                  </div>\n                </div>\n                </a>\n              </React.Fragment>\n            );\n          })}\n          <div className=\"divisor\"></div>\n        </div>\n      </div>\n    </React.Fragment>\n  );\n};\n\nexport default Contacts;\n","/Users/jesuscc9/Desktop/Reviewsic/client/src/components/SwitchSample.js",["107"],"import React, { useEffect, useState } from 'react'\nimport Switch from \"react-switch\";\nimport '../components/styles/Switch.css'\n\nconst SwitchSample = (props) => {\n\n  const [checked, setChecked] = useState(true)\n\n  useEffect(() => {\n    setChecked(props.value)\n    console.log('se checkea ' + props.value)\n  }, [])\n\n  const handleChange = (check) => {\n    setChecked(check)\n    setTimeout(props.onChange, 150)\n  }\n\n  return (\n    <label>\n      <div className=\"switch-container\">\n        <span className=\"switch-label\">{checked ? 'Auto' : 'Manual'}</span>\n        <Switch \n          onChange={handleChange} \n          checked={checked}             \n          onColor=\"#bf92e6\"\n          onHandleColor=\"#7E22CD\"\n          handleDiameter={30}\n          uncheckedIcon={false}\n          checkedIcon={false}\n          boxShadow=\"0px 1px 5px rgba(0, 0, 0, 0.6)\"\n          activeBoxShadow=\"0px 0px 1px 10px rgba(0, 0, 0, 0.2)\"\n          height={20}\n          width={48}\n          className=\"react-switch\"\n          id=\"material-switch\"\n        />\n      </div>\n    </label>\n  );\n\n}\n\nexport default SwitchSample\n",["108","109"],"/Users/jesuscc9/Desktop/Reviewsic/client/src/components/Loader.js",[],"/Users/jesuscc9/Desktop/Reviewsic/client/src/data/api.js",["110","111"],"import { toast } from \"react-toastify\"\nimport Axios from \"axios\"\nimport Swal from \"sweetalert2\"\n\nexport const api = {\n  endpoint: '',\n  data: {},\n  insert: async function(){\n    const upload = await Axios.post(`${this.endpoint}/api/insert`, this.data)\n  \n    toast.success(\"🚀 Successfully Added!\", {\n      position: \"top-right\",\n      autoClose: 2500,\n      hideProgressBar: true,\n      closeOnClick: true,\n      pauseOnHover: true,\n      draggable: true,\n      progress: undefined,\n    })\n  \n    return upload.data\n  },\n  update: async function(id, songList){\n    const update = await Axios.put(\n      `${this.endpoint}/api/update/${id}`,\n      this.data\n    )\n\n    for (let i = 0; i < songList.length; i++) {\n      if (songList[i].id == id) {\n        update.data.author = songList[i].author\n        songList[i] = update.data\n        break\n      }\n    }\n\n    toast.success(\"🚀 Your review has been updated!\", {\n      position: \"top-right\",\n      autoClose: 2500,\n      hideProgressBar: true,\n      closeOnClick: true,\n      pauseOnHover: true,\n      draggable: true,\n      progress: undefined,\n    })\n\n    return songList\n\n  },\n  delete: async function(id, songList){\n\n    const deleted = await Swal.fire({\n      title: \"Are you sure?\",\n      text: \"You won't be able to revert this!\",\n      icon: \"warning\",\n      showCancelButton: true,\n      confirmButtonColor: \"#3085d6\",\n      cancelButtonColor: \"#d33\",\n      confirmButtonText: \"Yes, delete it!\",\n    })\n\n\n    if(deleted.isConfirmed){\n      Axios.delete(`${this.endpoint}/api/delete/${id}/`)\n\n      toast.success(\"🚀 Your review has been deleted!\", {\n        position: \"top-right\",\n        autoClose: 2500,\n        hideProgressBar: true,\n        closeOnClick: true,\n        pauseOnHover: true,\n        draggable: true,\n        progress: undefined,\n      })\n\n      return (songList.filter((e) => {\n        return e.id != id\n      }))\n    }else{\n      return songList\n    }\n\n\n  },\n}","/Users/jesuscc9/Desktop/Reviewsic/client/src/data/spotifyApi.js",["112","113","114"],"import Axios from 'axios'\nimport { toast } from \"react-toastify\"\n\nexport const spotifyApi = {\n  config: {},\n  token: '',\n  authorId: '',\n  data: {\n    profileImage: '',\n    playlistId: '',\n  },\n  songData: {\n    author_id: '',\n    author: '',\n  },\n  likedSongs: [],\n  user: {},\n  setConfig: (token) => {\n    spotifyApi.config = {\n      headers: {\n        Authorization: \"Bearer \" + token,\n      }\n    }\n  },\n  get: async function(){\n\n    const userData = await Axios.get(\n      \"https://api.spotify.com/v1/me\", (this.config)\n    )\n\n    const user_image = userData.data.images.length\n      ? userData.data.images[0].url\n      : \"http://dissoftec.com/NicePng_user-png_730154.jpeg\"\n\n    this.data.profileImage = user_image\n\n    this.songData.author = userData.data.display_name\n    this.songData.author_id = userData.data.id\n\n    this.user = {\n      nickname: userData.data.display_name,\n      followers: userData.data.followers.total,\n      url: userData.data.href,\n      type: userData.data.product,\n      image: user_image,\n      id: userData.data.id,\n    }\n\n  },\n  playlist: {\n    get: async function getAllSongs(url, items = []) {\n      const songs = await Axios.get(url, spotifyApi.config)\n\n      songs.data.items.forEach((e) => {\n        items.push(e)\n      })\n\n      if (songs.data.next === null) return items\n\n      return getAllSongs(songs.data.next, items)\n    },\n    add: async (songId) => {\n      const songUri = `spotify:track:${songId}`\n\n      const addSong = await Axios.post(\n        `https://api.spotify.com/v1/playlists/${spotifyApi.data.playlistId}/tracks`,\n        {\n          uris: [songUri],\n        },\n        spotifyApi.config\n      )\n\n      toast(\"🎵 Song added to your playlist!\", {\n        position: \"top-right\",\n        autoClose: 2000,\n        hideProgressBar: true,\n        closeOnClick: true,\n        pauseOnHover: true,\n        draggable: true,\n        progress: undefined,\n      })\n\n    }, \n    delete: async (songId, uri, pos, token) => {\n\n      const headers = {\n        Authorization: \"Bearer \" + token,\n      };\n\n      const data = {\n        tracks: [\n          {\n            uri: uri.length > 0 ? uri : `spotify:track:${songId}`,\n            //uri: songUri,\n            positions: [0],\n          },\n        ],\n      };\n\n      const songs = await spotifyApi.playlist.get(\n        `https://api.spotify.com/v1/playlists/${spotifyApi.data.playlistId}/tracks`,\n        []\n      )\n\n      let i = 0;\n      songs.forEach((e) => {\n        i++;\n        if (e.track.id == songId) {\n          data.tracks[0].positions[0] = i - 1;\n          return;\n        }\n      })\n\n      const removeSong = await Axios.delete(\n        `https://api.spotify.com/v1/playlists/${spotifyApi.data.playlistId}/tracks`,\n        { headers, data }\n      );\n\n      return 0;\n\n      // const removeSong = await Axios.delete(\n      //   `https://api.spotify.com/v1/playlists/${spotifyApi.data.playlistId}/tracks`,\n      //   { headers, data }\n      // )\n\n    },\n    create: async function(){\n      let playlists = await Axios.get(\n        `https://api.spotify.com/v1/me/playlists`,\n        (spotifyApi.config)\n      )\n  \n      const reviewsicExists = () => {\n        playlists = playlists.data.items\n  \n        for (let i = 0; i < playlists.length; i++) {\n          if (playlists[i].name === \"Reviewsic\") {\n            spotifyApi.data.playlistId = playlists[i].id\n            return true\n          }\n        }\n        return false\n      }\n  \n      if (reviewsicExists()) {\n        spotifyApi.likedSongs = await spotifyApi.playlist.get(`https://api.spotify.com/v1/playlists/${spotifyApi.data.playlistId}/tracks`)\n      } else {\n        const createPlaylist = await Axios.post(\n          `https://api.spotify.com/v1/users/${this.data.author_id}/playlists`,\n          {\n            name: \"Reviewsic\",\n          },\n          (this.config)\n        )\n        spotifyApi.data.playlistId = createPlaylist.data.id\n      }\n\n\n      return spotifyApi.data.playlistId\n  \n    }\n  },\n}",{"ruleId":"115","replacedBy":"116"},{"ruleId":"117","replacedBy":"118"},{"ruleId":"119","severity":1,"message":"120","line":134,"column":13,"nodeType":"121","endLine":134,"endColumn":50},{"ruleId":"119","severity":1,"message":"120","line":138,"column":13,"nodeType":"121","endLine":138,"endColumn":70},{"ruleId":"119","severity":1,"message":"120","line":142,"column":13,"nodeType":"121","endLine":142,"endColumn":58},{"ruleId":"119","severity":1,"message":"120","line":146,"column":13,"nodeType":"121","endLine":146,"endColumn":67},{"ruleId":"119","severity":1,"message":"120","line":150,"column":13,"nodeType":"121","endLine":150,"endColumn":65},{"ruleId":"122","severity":1,"message":"123","line":4,"column":22,"nodeType":"124","messageId":"125","endLine":4,"endColumn":33},{"ruleId":"122","severity":1,"message":"126","line":27,"column":7,"nodeType":"124","messageId":"125","endLine":27,"endColumn":15},{"ruleId":"127","severity":1,"message":"128","line":62,"column":13,"nodeType":"129","endLine":105,"endColumn":4},{"ruleId":"122","severity":1,"message":"130","line":75,"column":11,"nodeType":"124","messageId":"125","endLine":75,"endColumn":16},{"ruleId":"131","severity":1,"message":"132","line":230,"column":14,"nodeType":"133","messageId":"134","endLine":230,"endColumn":16},{"ruleId":"131","severity":1,"message":"132","line":244,"column":56,"nodeType":"133","messageId":"134","endLine":244,"endColumn":58},{"ruleId":"131","severity":1,"message":"132","line":30,"column":21,"nodeType":"133","messageId":"134","endLine":30,"endColumn":23},{"ruleId":"131","severity":1,"message":"132","line":34,"column":21,"nodeType":"133","messageId":"134","endLine":34,"endColumn":23},{"ruleId":"115","replacedBy":"135"},{"ruleId":"117","replacedBy":"136"},{"ruleId":"131","severity":1,"message":"137","line":22,"column":23,"nodeType":"133","messageId":"134","endLine":22,"endColumn":25},{"ruleId":"127","severity":1,"message":"138","line":30,"column":6,"nodeType":"139","endLine":30,"endColumn":8,"suggestions":"140"},{"ruleId":"141","severity":1,"message":"142","line":91,"column":40,"nodeType":"143","endLine":91,"endColumn":55},{"ruleId":"144","severity":1,"message":"145","line":25,"column":19,"nodeType":"121","endLine":28,"endColumn":20},{"ruleId":"144","severity":1,"message":"145","line":60,"column":13,"nodeType":"121","endLine":63,"endColumn":14},{"ruleId":"144","severity":1,"message":"145","line":66,"column":13,"nodeType":"121","endLine":69,"endColumn":14},{"ruleId":"127","severity":1,"message":"146","line":22,"column":3,"nodeType":"124","endLine":22,"endColumn":12,"suggestions":"147"},{"ruleId":"131","severity":1,"message":"132","line":90,"column":22,"nodeType":"133","messageId":"134","endLine":90,"endColumn":24},{"ruleId":"131","severity":1,"message":"132","line":94,"column":22,"nodeType":"133","messageId":"134","endLine":94,"endColumn":24},{"ruleId":"122","severity":1,"message":"148","line":1,"column":17,"nodeType":"124","messageId":"125","endLine":1,"endColumn":23},{"ruleId":"141","severity":1,"message":"142","line":19,"column":70,"nodeType":"143","endLine":19,"endColumn":85},{"ruleId":"131","severity":1,"message":"137","line":27,"column":39,"nodeType":"133","messageId":"134","endLine":27,"endColumn":41},{"ruleId":"127","severity":1,"message":"149","line":12,"column":6,"nodeType":"139","endLine":12,"endColumn":8,"suggestions":"150"},{"ruleId":"115","replacedBy":"151"},{"ruleId":"117","replacedBy":"152"},{"ruleId":"131","severity":1,"message":"137","line":30,"column":26,"nodeType":"133","messageId":"134","endLine":30,"endColumn":28},{"ruleId":"131","severity":1,"message":"132","line":77,"column":21,"nodeType":"133","messageId":"134","endLine":77,"endColumn":23},{"ruleId":"122","severity":1,"message":"153","line":65,"column":13,"nodeType":"124","messageId":"125","endLine":65,"endColumn":20},{"ruleId":"131","severity":1,"message":"137","line":108,"column":24,"nodeType":"133","messageId":"134","endLine":108,"endColumn":26},{"ruleId":"122","severity":1,"message":"154","line":114,"column":13,"nodeType":"124","messageId":"125","endLine":114,"endColumn":23},"no-native-reassign",["155"],"no-negated-in-lhs",["156"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-unused-vars","'spotifyData' is defined but never used.","Identifier","unusedVar","'ENDPOINT' is assigned a value but never used.","react-hooks/exhaustive-deps","Effect callbacks are synchronous to prevent race conditions. Put the async function inside:\n\nuseEffect(() => {\n  async function fetchData() {\n    // You can await here\n    const response = await MyAPI.getData(someId);\n    // ...\n  }\n  fetchData();\n}, [someId]); // Or [] if effect doesn't need props or state\n\nLearn more about data fetching with Hooks: https://reactjs.org/link/hooks-data-fetching","ArrowFunctionExpression","'fetch' is assigned a value but never used.","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected",["155"],["156"],"Expected '===' and instead saw '=='.","React Hook useEffect has missing dependencies: 'data.song', 'handleHeartClick', and 'props.likedSongs'. Either include them or remove the dependency array.","ArrayExpression",["157"],"react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener","JSXAttribute","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","React Hook useEffect contains a call to 'setToken'. Without a list of dependencies, this can lead to an infinite chain of updates. To fix this, pass [] as a second argument to the useEffect Hook.",["158"],"'useRef' is defined but never used.","React Hook useEffect has a missing dependency: 'props.value'. Either include it or remove the dependency array. If 'setChecked' needs the current value of 'props.value', you can also switch to useReducer instead of useState and read 'props.value' in the reducer.",["159"],["155"],["156"],"'addSong' is assigned a value but never used.","'removeSong' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"160","fix":"161"},{"desc":"162","fix":"163"},{"desc":"164","fix":"165"},"Update the dependencies array to be: [data.song, handleHeartClick, props.likedSongs]",{"range":"166","text":"167"},"Add dependencies array: []",{"range":"168","text":"169"},"Update the dependencies array to be: [props.value]",{"range":"170","text":"171"},[778,780],"[data.song, handleHeartClick, props.likedSongs]",[714,714],", []",[309,311],"[props.value]"]