[{"/Users/jesuscc9/Desktop/Reviewsic/client/src/index.js":"1","/Users/jesuscc9/Desktop/Reviewsic/client/src/App.js":"2","/Users/jesuscc9/Desktop/Reviewsic/client/src/pages/Home.js":"3","/Users/jesuscc9/Desktop/Reviewsic/client/src/pages/Register.js":"4","/Users/jesuscc9/Desktop/Reviewsic/client/src/pages/NotFound.js":"5","/Users/jesuscc9/Desktop/Reviewsic/client/src/components/RegisterForm.js":"6","/Users/jesuscc9/Desktop/Reviewsic/client/src/components/Navbar.js":"7","/Users/jesuscc9/Desktop/Reviewsic/client/src/components/Card.js":"8","/Users/jesuscc9/Desktop/Reviewsic/client/src/components/UpdateForm.js":"9","/Users/jesuscc9/Desktop/Reviewsic/client/src/components/Contacts.js":"10","/Users/jesuscc9/Desktop/Reviewsic/client/src/components/Login.js":"11","/Users/jesuscc9/Desktop/Reviewsic/client/src/components/tabs.js":"12","/Users/jesuscc9/Desktop/Reviewsic/client/src/components/Tabs.js":"13"},{"size":154,"mtime":1609829277000,"results":"14","hashOfConfig":"15"},{"size":533,"mtime":1609829277000,"results":"16","hashOfConfig":"15"},{"size":4430,"mtime":1611204022189,"results":"17","hashOfConfig":"15"},{"size":7697,"mtime":1611204230255,"results":"18","hashOfConfig":"15"},{"size":143,"mtime":1611723506882,"results":"19","hashOfConfig":"15"},{"size":5527,"mtime":1614304056205,"results":"20","hashOfConfig":"15"},{"size":2790,"mtime":1611203205434,"results":"21","hashOfConfig":"15"},{"size":2854,"mtime":1614298933073,"results":"22","hashOfConfig":"15"},{"size":4470,"mtime":1610991952741,"results":"23","hashOfConfig":"15"},{"size":1388,"mtime":1614289967018,"results":"24","hashOfConfig":"15"},{"size":430,"mtime":1610914588753,"results":"25","hashOfConfig":"15"},{"size":0,"mtime":1614304694237,"results":"26","hashOfConfig":"15"},{"size":0,"mtime":1614304694237,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},"1fy8ibo",{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35","usedDeprecatedRules":"30"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38","usedDeprecatedRules":"30"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"41","messages":"42","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"43","messages":"44","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"30"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48","usedDeprecatedRules":"30"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"30"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/jesuscc9/Desktop/Reviewsic/client/src/index.js",[],["60","61"],"/Users/jesuscc9/Desktop/Reviewsic/client/src/App.js",[],"/Users/jesuscc9/Desktop/Reviewsic/client/src/pages/Home.js",["62","63","64","65","66"],"import React, { useState, useEffect, useRef } from \"react\"\nimport { Link } from \"react-router-dom\"\nimport { Redirect } from 'react-router-dom'\nimport { SpotifyAuth, Scopes } from \"react-spotify-auth\"\nimport { SpotifyApiContext } from \"react-spotify-api\"\n\nimport \"../assets/animate.css\"\nimport \"react-spotify-auth/dist/index.css\"\nimport \"./styles/Home.css\"\n\nimport Parallax from \"parallax-js\"\nimport Stars from \"../assets/img/star.svg\"\nimport Moonlight from \"../assets/img/moonlight.png\"\nimport Clairo from \"../assets/img/clairo.png\"\nimport Slash from \"../assets/img/slash.png\"\nimport StarBackground from \"../assets/img/stars-back.png\"\nimport Cookies from \"js-cookie\"\n\nconst Home = () => {\n  \n  const [token, setToken] = useState(\"\")\n\n  const sceneEl = useRef(null)\n  const stars = useRef(null)\n  const header = useRef(null)\n  const login = useRef(null)\n\n  const elements = {\n    objects: document.getElementsByName(\"element\"),\n    on: function () {\n      this.objects.forEach((el) => {\n        el.style.opacity = \"1\"\n      })\n\n      stars.current.classList.add(\"star-shadow\")\n      stars.current.style.opacity = \"1\"\n    },\n    off: function () {\n      this.objects.forEach((el) => {\n        el.style.opacity = \"0.7\"\n      })\n\n      stars.current.classList.remove(\"star-shadow\")\n      stars.current.style.opacity = \"0.2\"\n    },\n  }\n\n  useEffect(() => {\n    const parallaxInstance = new Parallax(sceneEl.current, {\n      relativeInput: true,\n    })\n\n    parallaxInstance.enable()\n\n    setTimeout(() => {\n      if(header.current){\n        header.current.style.display = \"block\"\n        header.current.classList.add(\"animate__fadeIn\")\n      }\n    }, 1500)\n\n    setToken(Cookies.get(\"spotifyAuthToken\"))\n\n    return () => parallaxInstance.disable()\n  }, [])\n\n  const handleClick = (e) => {\n    elements.on()\n    e.preventDefault()\n\n    header.current.style.display = \"block\"\n    header.current.classList.remove(\"animate__fadeIn\")\n    header.current.classList.add(\"animate__fadeOut\")\n\n    setTimeout(() => {\n      login.current.style.display = \"flex\"\n      elements.on()\n    }, 500)\n  }\n\n  const onMouseEnter = (e) => {\n    e.preventDefault()\n    elements.on()\n  }\n\n  const onMouseLeave = (e) => {\n    e.preventDefault()\n    elements.off()\n  }\n\n\n  return (\n    <React.Fragment>\n      <div className=\"header animate__animated\" ref={header}>\n        <button\n          className=\"try-button\"\n          id=\"try-button\"\n          onMouseEnter={onMouseEnter}\n          onMouseLeave={onMouseLeave}\n          onClick={handleClick}\n        >\n          Try it now!\n        </button>\n        <h1 className=\"title\">Reviewsic</h1>\n      </div>\n\n      <div\n        className=\"login-form animate__animated animate__fadeIn\"\n        ref={login}\n        onMouseEnter={onMouseEnter} onMouseLeave={onMouseLeave}\n      >\n        {token ? (\n          <div>\n            <SpotifyApiContext.Provider value={token}>\n              <Redirect to=\"/home\"></Redirect>\n            </SpotifyApiContext.Provider>\n          </div>\n        ) : (\n          <SpotifyAuth\n            className=\"spotify-auth\"\n            redirectUri=\"http://localhost:3000/\"\n            clientID=\"9751c1f85b2a4684a8cc0a02f6942b91\"\n            scopes={[Scopes.userReadPrivate, \"user-read-email\"]}\n          />\n        )}\n      </div>\n\n      <Link to=\"/home\" id=\"link\"></Link>\n\n      <div id=\"container\">\n        <div id=\"scene\" ref={sceneEl} data-scalar-x=\"10\" data-scalar-y=\"10\">\n          <div data-depth=\"0.2\">\n            <img src={Stars} className=\"stars\" />\n          </div>\n\n          <div data-depth=\"0.1\">\n            <img src={StarBackground} ref={stars} className=\"star\" />\n          </div>\n\n          <div data-depth=\"0.3\">\n            <img className=\"moonlight\" src={Moonlight} />\n          </div>\n\n          <div data-depth=\"1\" className=\"clairo-container\">\n            <img className=\"clairo\" name=\"element\" src={Clairo} />\n          </div>\n\n          <div data-depth=\"1\" className=\"slash-container\">\n            <img name=\"element\" className=\"slash\" src={Slash} />\n          </div>\n        </div>\n      </div>\n\n      <style>\n        {\n          \"\\\n        body{\\\n          background: rgb(7,33,64) !important;\\\n          background: linear-gradient(90deg, rgba(7,33,64,1) 0%, rgba(8,33,57,1) 100%);\\\n          overflow-y: hidden !important;\\\n          overflow-x: hidden !important;\\\n        }\\\n      \"\n        }\n      </style>\n    </React.Fragment>\n  )\n}\n\nexport default Home\n","/Users/jesuscc9/Desktop/Reviewsic/client/src/pages/Register.js",["67","68","69","70"],"import React, { useState, useEffect } from \"react\";\nimport { SpotifyApiContext } from \"react-spotify-api\";\n\nimport socketIOClient from \"socket.io-client\";\nimport Swal from \"sweetalert2\";\nimport withReactContent from \"sweetalert2-react-content\";\nimport Axios from \"axios\";\n\nimport Navbar from \"../components/Navbar\";\nimport Card from \"../components/Card\";\nimport RegisterForm from \"../components/RegisterForm\";\nimport UpdateForm from \"../components/UpdateForm\";\nimport Contacts from \"../components/Contacts\";\nimport Login from \"../components/Login\"\nimport Cookies from \"js-cookie\";\n\nimport \"tailwindcss/tailwind.css\";\nimport \"../assets/main.css\";\nimport \"../pages/styles/Register.css\";\n\nconst ENDPOINT = \"http://127.0.0.1:3001\";\n\nconst Register = () => {\n  const MySwal = withReactContent(Swal);\n  const [song, setSong] = useState(\"\");\n  const [image, setImage] = useState([]);\n  const [review, setReview] = useState(\"\");\n  const [artist, setArtist] = useState(\"\");\n  const [spotifyURL, setSpotifyURL] = useState(\"\");\n  const [calification, setCalification] = useState(0);\n  const [songList, setSongList] = useState([]);\n  const [users, setUsers] = useState([]);\n  const [updateId, setUpdateId] = useState(0);\n  const [newImage, setNewImage] = useState(\"\");\n  const [profileImage, setProfileImage] = useState('')\n  const [userId, setUserId] = useState('')\n\n  const [token, setToken] = useState(\"\");\n\n  useEffect(async () => {\n\n    const socket = socketIOClient(ENDPOINT);\n\n\n    let res = await Axios.get(\"http://localhost:3001/api/get\");\n\n    setSongList(res.data);\n\n    socket.on(\"usernames\", (data) => {\n      setUsers(data);\n    });\n\n    socket.on(\"updateReviews\", (data) => {\n      setSongList(data);\n    });\n\n    setToken(Cookies.get(\"spotifyAuthToken\"));\n  }, []);\n\n  const submitReview = () => {\n    const formData = new FormData();\n\n    formData.append(\"songName\", song);\n    formData.append(\"image\", image.name);\n    formData.append(\"file\", image);\n    formData.append(\"artist\", artist);\n    formData.append(\"spotifyUrl\", spotifyURL);\n    formData.append(\"songReview\", review);\n    formData.append(\"calification\", calification);\n\n    Axios.post(\"http://localhost:3001/api/insert\", formData).then((res) => {\n      const newSongList = songList;\n      res.data.calification = calification\n      newSongList.push(res.data);\n      setSongList(newSongList);\n      const socket = socketIOClient(ENDPOINT);\n      socket.emit(\"updateReviews\", newSongList);\n    });\n  };\n\n  const deleteReview = (id, image) => {\n    Swal.fire({\n      title: \"Are you sure?\",\n      text: \"You won't be able to revert this!\",\n      icon: \"warning\",\n      showCancelButton: true,\n      confirmButtonColor: \"#3085d6\",\n      cancelButtonColor: \"#d33\",\n      confirmButtonText: \"Yes, delete it!\",\n    }).then((result) => {\n      if (result.isConfirmed) {\n        const newSongList = songList.filter((e) => {\n          return e.id != id;\n        });\n\n        setSongList(newSongList);\n        const socket = socketIOClient(ENDPOINT);\n        socket.emit(\"updateReviews\", newSongList);\n\n        Axios.delete(\n          `http://localhost:3001/api/delete/${id}/${image}`\n        )\n        Swal.fire(\"Deleted!\", \"Your review has been deleted.\", \"success\");\n      }\n    });\n  };\n\n  const updateReview = () => {\n    Axios.put(`http://localhost:3001/api/update/${updateId}`, {\n      image: newImage,\n      songName: song,\n      artist: artist,\n      songReview: review,\n      spotifyUrl: spotifyURL,\n      calification: calification,\n    }).then((res) => {\n      let index = 0;\n\n      for (let i = 0; i < songList.length; i++) {\n        if (songList[i].id == updateId) {\n          index = i;\n          break;\n        }\n      }\n\n      const newSongList = songList;\n      res.data.author = songList[index].author;\n      newSongList[index] = res.data;\n      setSongList(newSongList);\n      const socket = socketIOClient(ENDPOINT);\n      socket.emit(\"updateReviews\", newSongList);\n    });\n  };\n\n  const alert = () => {\n    MySwal.fire({\n      html: (\n        <RegisterForm\n          onSongChange={(e) => {\n            setSong(e);\n          }}\n          selectImage={(e) => {\n            setImage(e);\n          }}\n          onArtistChange={(e) => {\n            setArtist(e);\n          }}\n          onCommentChange={(e) => {\n            setReview(e);\n          }}\n          onSpotifyUrlChange={(e) => {\n            setSpotifyURL(e);\n          }}\n          ratingChanged={(e) => {\n            setCalification(e);\n          }}\n          onSubmit={(e) => {\n            document.getElementById(\"button\").click();\n            MySwal.close();\n          }}\n        />\n      ),\n\n      showConfirmButton: false,\n    }).then(() => {});\n  };\n\n  const alertUpdateForm = (data) => {\n    MySwal.fire({\n      html: (\n        <UpdateForm\n          data={data}\n          setSong={(e) => {\n            setSong(e);\n          }}\n          setArtist={(e) => {\n            setArtist(e);\n          }}\n          setUpdateId={(e) => {\n            setUpdateId(e);\n          }}\n          setNewImage={(e) => {\n            setNewImage(e);\n          }}\n          onCommentChange={(e) => {\n            setReview(e);\n          }}\n          onSpotifyUrlChange={(e) => {\n            setSpotifyURL(e);\n          }}\n          ratingChanged={(e) => {\n            setCalification(e);\n          }}\n          onSubmit={(e) => {\n            document.getElementById(\"update-button\").click();\n            MySwal.close();\n          }}\n        />\n      ),\n\n      showConfirmButton: false,\n    });\n  };\n\n  const fetchSpotifyData = async() => {\n    const config = {\n      headers: {\n        'Authorization': 'Bearer ' + token\n     }\n    }\n\n    if(userId == ''){\n      let spotifyData = await Axios.get('https://api.spotify.com/v1/me', config)\n\n\n      if((spotifyData.data.images).length > 0){\n  \n        setProfileImage(spotifyData.data.images[0].url)\n        setUserId(spotifyData.data.id)\n  \n        const newUser = {\n          nickname: spotifyData.data.display_name,\n          followers: spotifyData.data.followers.total,\n          url: spotifyData.data.href,\n          type: spotifyData.data.product,\n          image: spotifyData.data.images[0].url,\n          id: spotifyData.data.id,\n        }\n  \n        Axios.post(`http://localhost:3001/api/newUser`, newUser).then((res) => {\n          setUsers([newUser])\n        })\n      }else{\n        setProfileImage('')\n      }\n    }\n  }\n\n  return (\n    <React.Fragment>\n      <Navbar\n        onAddClick={() => {\n          alert();\n        }}\n        profileImage={profileImage}\n        token={token}\n      ></Navbar>\n      <button onClick={submitReview} id=\"button\"></button>\n      <button onClick={updateReview} id=\"update-button\"></button>\n\n      {token ? (\n      <SpotifyApiContext.Provider value={token}>\n        {(() => {fetchSpotifyData()})()}\n      <div className=\"main-container\">\n        <div className=\"card-container\">\n          {songList.length ? (\n            songList.map((item) => {\n              return (\n                <Card\n                  props={item}\n                  user={userId}\n                  key={item.id}\n                  update={() => {\n                    alertUpdateForm(item);\n                  }}\n                  delete={(e) => {\n                    deleteReview(e.id, e.image);\n                  }}\n                />\n              );\n            })\n          ) : (\n            <div>Not reviews registered yet 😕</div>\n          )}\n        </div>\n        <div className=\"contact-container\">\n          <Contacts users={users} />\n        </div>\n      </div>\n    </SpotifyApiContext.Provider>\n      ) : (\n        <Login></Login>\n      )}\n    </React.Fragment>\n  );\n};\n\nexport default Register;\n","/Users/jesuscc9/Desktop/Reviewsic/client/src/pages/NotFound.js",[],"/Users/jesuscc9/Desktop/Reviewsic/client/src/components/RegisterForm.js",["71","72"],"/Users/jesuscc9/Desktop/Reviewsic/client/src/components/Navbar.js",["73","74","75"],"import React from \"react\";\nimport \"tailwindcss/tailwind.css\";\nimport Logo from \"../assets/img/music.png\";\nimport \"../components/styles/Navbar.css\";\nimport { faPlus } from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\n\nconst navbar = (props) => {\n  return (\n    <React.Fragment>\n      <nav className=\"bg-gray-800 \">\n        <div className=\" px-2 sm:px-6 lg:px-8\">\n          <div className=\"relative flex items-center justify-between h-16 w-100\">\n            <div className=\"flex sm:items-stretch sm:justify-start\">\n              <div className=\"flex-shrink-0 flex items-center\">\n                <img\n                  className=\"lg:block h-8 w-auto\"\n                  src={Logo}\n                  alt=\"Workflow\"\n                />\n                <h2 className=\"logo-title\">Reviewsic</h2>\n              </div>\n              <div className=\"hidden sm:block sm:ml-6\">\n                <div className=\"flex space-x-4\">\n                  <a\n                    href=\"#\"\n                    className=\"bg-gray-900 text-white px-3 py-2 rounded-md text-sm font-medium\"\n                  >\n                    Home\n                  </a>\n                </div>\n              </div>\n            </div>\n            <div className=\"absolute inset-y-0 right-0 flex items-center pr-2 sm:static sm:inset-auto sm:ml-6 sm:pr-0 profile\">\n              <div className=\"ml-3 relative\">\n                <div className=\"options-container\">\n                  {props.token ? (\n                    <React.Fragment>\n                      <button onClick={props.onAddClick} className=\"add-button\">\n                        <FontAwesomeIcon icon={faPlus} />\n                        <p className=\"add-text\">ADD</p>\n                      </button>\n                      <img\n                        className=\"profile-image\"\n                        src={props.profileImage}\n                        alt=\"\"\n                      />\n                    </React.Fragment>\n                  ) : (\n                    <React.Fragment></React.Fragment>\n                  )}\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n\n        <div className=\"hidden sm:hidden\">\n          <div className=\"px-2 pt-2 pb-3 space-y-1\">\n            <a\n              href=\"#\"\n              className=\"bg-gray-900 text-white block px-3 py-2 rounded-md text-base font-medium\"\n            >\n              Registro\n            </a>\n            <a\n              href=\"#\"\n              className=\"text-gray-300 hover:bg-gray-700 hover:text-white block px-3 py-2 rounded-md text-base font-medium\"\n            >\n              Contactos\n            </a>\n          </div>\n        </div>\n      </nav>\n    </React.Fragment>\n  );\n};\n\nexport default navbar;\n","/Users/jesuscc9/Desktop/Reviewsic/client/src/components/Card.js",["76","77","78","79"],"import React, { useState, useEffect, useRef } from \"react\";\nimport \"tailwindcss/tailwind.css\";\nimport \"../components/styles/Card.css\";\n\nimport ReactStars from \"react-rating-stars-component\";\n\nimport { faSpotify } from \"@fortawesome/fontawesome-free-brands\";\nimport { faPen, faTrash } from \"@fortawesome/free-solid-svg-icons\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\n\nconst Card = (data) => {\n  const props = data.props;\n\n  var rating = {\n    size: 20,\n    value: props.calification,\n    edit: false,\n  };\n\n  const card_options = React.useRef(null);\n  const card = React.useRef(null);\n\n  const handleMouseOver = () => {\n    card_options.current.classList.add(\"card-options-visible\");\n  };\n\n  const handleMouseLeave = () => {\n    card_options.current.classList.remove(\"card-options-visible\");\n  };\n\n  return (\n    <React.Fragment>\n      <div className=\"card-custom\" onMouseOver={handleMouseOver} onMouseLeave={handleMouseLeave}>\n        <div className=\"card-header\" ref={card}>\n          <div className=\"image-container\">\n            <img alt=\"\" src={`/images/${props.image}`} className=\"song-img\" />\n          </div>\n        </div>\n        <div className=\"card-body\">\n          <h5 className=\"song-name\">{props.songName}</h5>\n          <h5 className=\"artist-name\">{props.artist}</h5>\n          <p className=\"comment\">{props.songReview}</p>\n        </div>\n        <div className=\"card-footer\">\n          <ReactStars {...rating} className=\"stars-calification\" />{\" \"}\n          <p className=\"autor\">By: {props.author}</p>\n          <div className=\"card-options\" ref={card_options}>\n            {props.author_id === data.user ? \n                (\n                  <React.Fragment>\n                    <div className=\"edit-option option-container\" onClick={() => { \n                        data.update();\n                      }}>\n                      <FontAwesomeIcon\n                        icon={faPen}\n                        className=\"faPen\"\n                      />\n                    </div>\n                    <div className=\"edit-option option-container\" onClick={(e) => {\n                        data.delete({ id: props.id, image: props.image });\n                      }}>\n                      <FontAwesomeIcon\n                        icon={faTrash}\n                        className=\"faTrash\"\n                      />\n                    </div>\n                  </React.Fragment>\n                ) : (\n                  <React.Fragment></React.Fragment>\n                )\n              }\n            <div className=\"edit-option option-container\">\n              <a href={props.spotifyUrl} target=\"_blank\">\n                <FontAwesomeIcon icon={faSpotify} className=\"faSpotify\" />\n              </a>\n            </div>\n          </div>\n        </div>\n      </div>\n    </React.Fragment>\n  );\n};\n\nexport default Card;\n","/Users/jesuscc9/Desktop/Reviewsic/client/src/components/UpdateForm.js",["80","81"],"import React,{ useEffect, useState } from 'react';\nimport \"tailwindcss/tailwind.css\";\nimport '../components/styles/UpdateForm.css';\nimport ReactStars from \"react-rating-stars-component\";\n\nconst UpdateForm = (props) =>{\n\n  const data = props.data;\n  \n  const [reviewState, setReviewState] = useState(data.songReview)\n  const [spotifyUrlState, setSpotifyUrlState] = useState(data.spotifyUrl)\n  \n  useEffect(() => {\n    props.onCommentChange(reviewState)\n    props.onSpotifyUrlChange(spotifyUrlState)\n    props.setSong(data.songName)\n    props.setNewImage(data.image)\n    props.setArtist(data.artist)\n    props.setUpdateId(data.id)\n  })\n\n  const stars = {\n    size: 50,\n    value: data.calification,\n    isHalf: true,\n  }\n\n\n  const review = React.useRef(null);\n  const reviewAlert = React.useRef(null);\n  const spotifyURL = React.useRef(null);\n  const spotifyURLAlert = React.useRef(null);\n\n  const validateUrl = (spotifyUrl) =>{\n\n    const url = document.createElement('a');\n    url.href = spotifyUrl;\n\n    if(url.protocol != 'https:'){\n      return false \n    }\n    \n    if(url.hostname != 'open.spotify.com'){\n      return false\n    }\n    \n    if(!(url.pathname).includes('/track/')){\n      return false\n    }\n  \n    return true;\n  }\n\n  function validation(){\n    if((review.current.value).length <= 0){\n      reviewAlert.current.style.opacity = '1';\n      review.current.classList.add('wrong-input');\n      reviewAlert.current.textContent = 'Please fill out this field.';\n      return false;\n    }else{\n      review.current.classList.remove('wrong-input');\n      reviewAlert.current.style.opacity = '0';\n    }\n\n    if((review.current.value).length <= 10){\n      reviewAlert.current.style.opacity = '1';\n      reviewAlert.current.textContent = 'Please, make a longer comment!';\n      review.current.classList.add('wrong-input');\n      return false;\n    }else{\n      review.current.classList.remove('wrong-input');\n      reviewAlert.current.style.opacity = '0';\n    }\n\n    if((review.current.value).length >= 85){\n      reviewAlert.current.textContent = 'Please, make a smaller comment!';\n      reviewAlert.current.style.opacity = '1';\n      review.current.classList.add('wrong-input');\n      return false;\n    }else{\n      reviewAlert.current.style.opacity = '0';\n      review.current.classList.remove('wrong-input');\n    }\n\n    if(!validateUrl(spotifyURL.current.value)){\n      spotifyURLAlert.current.textContent = 'Please, enter a valid URL!'\n      spotifyURLAlert.current.style.opacity = '1'\n      spotifyURL.current.classList.add('wrong-input')\n      return false\n    }else{\n      spotifyURLAlert.current.style.opacity = '0'\n      spotifyURL.current.classList.remove('wrong-input')\n    }\n\n    return true\n  }\n\n  return(\n    <React.Fragment>\n      <form onSubmit={(e) => {\n        e.preventDefault()\n        if(validation()){\n          props.onSubmit()\n        }\n      }} className=\"register-form\">\n\n        <p className=\"input-label\">Song: </p>\n\n        <input type=\"text\" className=\"swal2-input input-disabled\" placeholder=\"Name of the song...\" onChange={(e) => {props.onSongChange(e.target.value);\n        }} value={data.songName} disabled/>\n\n        <p className=\"alert-label\">Please fill out this field.</p>\n\n        <p className=\"input-label\">Artist: </p>\n\n        <input type=\"text\" className=\"swal2-input input-disabled\" placeholder=\"Author of the song...\" value={data.artist} disabled/>\n\n        <p className=\"alert-label\">Please fill out this field.</p>\n\n        <p className=\"input-label\">Commentary: </p>\n\n        <input type=\"text\" className=\"swal2-input\" value={reviewState} placeholder=\"A little review...\" onChange={(e)=> {\n          setReviewState(e.target.value)\n        }} ref={review}/>\n\n        \n        <p className=\"alert-label\" ref={reviewAlert}>Please fill out this field.</p>\n\n        <p className=\"input-label\">Spotify URL: </p>\n\n        <input type=\"text\" className=\"swal2-input\" value={spotifyUrlState} placeholder={data.spotifyUrl} onChange={(e)=> {\n          setSpotifyUrlState(e.target.value)\n        }} ref={spotifyURL}/>\n\n\n        <p className=\"alert-label\" ref={spotifyURLAlert}>Please fill out this field.</p>\n\n        <p className=\"input-label\">Rating: </p>\n\n        <ReactStars {...stars} className=\"stars-calification\" onChange={(e) => {\n          props.ratingChanged(e)\n        }}/>\n\n        <button type=\"submit\" className=\"submit-button\">UPLOAD</button>\n\n      </form>\n    </React.Fragment>\n  )\n}\n\nexport default UpdateForm;","/Users/jesuscc9/Desktop/Reviewsic/client/src/components/Contacts.js",["82","83"],"/Users/jesuscc9/Desktop/Reviewsic/client/src/components/Login.js",[],"/Users/jesuscc9/Desktop/Reviewsic/client/src/components/tabs.js",[],"/Users/jesuscc9/Desktop/Reviewsic/client/src/components/Tabs.js",[],{"ruleId":"84","replacedBy":"85"},{"ruleId":"86","replacedBy":"87"},{"ruleId":"88","severity":1,"message":"89","line":133,"column":13,"nodeType":"90","endLine":133,"endColumn":50},{"ruleId":"88","severity":1,"message":"89","line":137,"column":13,"nodeType":"90","endLine":137,"endColumn":70},{"ruleId":"88","severity":1,"message":"89","line":141,"column":13,"nodeType":"90","endLine":141,"endColumn":58},{"ruleId":"88","severity":1,"message":"89","line":145,"column":13,"nodeType":"90","endLine":145,"endColumn":67},{"ruleId":"88","severity":1,"message":"89","line":149,"column":13,"nodeType":"90","endLine":149,"endColumn":65},{"ruleId":"91","severity":1,"message":"92","line":40,"column":13,"nodeType":"93","endLine":58,"endColumn":4},{"ruleId":"94","severity":1,"message":"95","line":93,"column":23,"nodeType":"96","messageId":"97","endLine":93,"endColumn":25},{"ruleId":"94","severity":1,"message":"98","line":120,"column":28,"nodeType":"96","messageId":"97","endLine":120,"endColumn":30},{"ruleId":"94","severity":1,"message":"98","line":212,"column":15,"nodeType":"96","messageId":"97","endLine":212,"endColumn":17},{"ruleId":"94","severity":1,"message":"95","line":31,"column":21,"nodeType":"96","messageId":"97","endLine":31,"endColumn":23},{"ruleId":"94","severity":1,"message":"95","line":35,"column":21,"nodeType":"96","messageId":"97","endLine":35,"endColumn":23},{"ruleId":"99","severity":1,"message":"100","line":25,"column":19,"nodeType":"90","endLine":28,"endColumn":20},{"ruleId":"99","severity":1,"message":"100","line":60,"column":13,"nodeType":"90","endLine":63,"endColumn":14},{"ruleId":"99","severity":1,"message":"100","line":66,"column":13,"nodeType":"90","endLine":69,"endColumn":14},{"ruleId":"101","severity":1,"message":"102","line":1,"column":17,"nodeType":"103","messageId":"104","endLine":1,"endColumn":25},{"ruleId":"101","severity":1,"message":"105","line":1,"column":27,"nodeType":"103","messageId":"104","endLine":1,"endColumn":36},{"ruleId":"101","severity":1,"message":"106","line":1,"column":38,"nodeType":"103","messageId":"104","endLine":1,"endColumn":44},{"ruleId":"107","severity":1,"message":"108","line":74,"column":42,"nodeType":"109","endLine":74,"endColumn":57},{"ruleId":"94","severity":1,"message":"95","line":39,"column":21,"nodeType":"96","messageId":"97","endLine":39,"endColumn":23},{"ruleId":"94","severity":1,"message":"95","line":43,"column":21,"nodeType":"96","messageId":"97","endLine":43,"endColumn":23},{"ruleId":"101","severity":1,"message":"106","line":1,"column":17,"nodeType":"103","messageId":"104","endLine":1,"endColumn":23},{"ruleId":"94","severity":1,"message":"98","line":26,"column":39,"nodeType":"96","messageId":"97","endLine":26,"endColumn":41},"no-native-reassign",["110"],"no-negated-in-lhs",["111"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","react-hooks/exhaustive-deps","Effect callbacks are synchronous to prevent race conditions. Put the async function inside:\n\nuseEffect(() => {\n  async function fetchData() {\n    // You can await here\n    const response = await MyAPI.getData(someId);\n    // ...\n  }\n  fetchData();\n}, [someId]); // Or [] if effect doesn't need props or state\n\nLearn more about data fetching with Hooks: https://reactjs.org/link/hooks-data-fetching","ArrowFunctionExpression","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","Expected '===' and instead saw '=='.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","'useEffect' is defined but never used.","'useRef' is defined but never used.","react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener","JSXAttribute","no-global-assign","no-unsafe-negation"]