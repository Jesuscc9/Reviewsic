[{"/Users/jesuscc9/Desktop/Reviewsic/client/src/index.js":"1","/Users/jesuscc9/Desktop/Reviewsic/client/src/App.js":"2","/Users/jesuscc9/Desktop/Reviewsic/client/src/pages/Home.js":"3","/Users/jesuscc9/Desktop/Reviewsic/client/src/pages/Register.js":"4","/Users/jesuscc9/Desktop/Reviewsic/client/src/pages/NotFound.js":"5","/Users/jesuscc9/Desktop/Reviewsic/client/src/components/RegisterForm.js":"6","/Users/jesuscc9/Desktop/Reviewsic/client/src/components/Navbar.js":"7","/Users/jesuscc9/Desktop/Reviewsic/client/src/components/Card.js":"8","/Users/jesuscc9/Desktop/Reviewsic/client/src/components/UpdateForm.js":"9","/Users/jesuscc9/Desktop/Reviewsic/client/src/components/Contacts.js":"10","/Users/jesuscc9/Desktop/Reviewsic/client/src/components/Login.js":"11"},{"size":154,"mtime":1609829277000,"results":"12","hashOfConfig":"13"},{"size":533,"mtime":1609829277000,"results":"14","hashOfConfig":"13"},{"size":4663,"mtime":1610915115012,"results":"15","hashOfConfig":"13"},{"size":8042,"mtime":1610920617540,"results":"16","hashOfConfig":"13"},{"size":128,"mtime":1609829277000,"results":"17","hashOfConfig":"13"},{"size":5627,"mtime":1610325008000,"results":"18","hashOfConfig":"13"},{"size":2790,"mtime":1610914747289,"results":"19","hashOfConfig":"13"},{"size":2913,"mtime":1610670607509,"results":"20","hashOfConfig":"13"},{"size":4617,"mtime":1610348996000,"results":"21","hashOfConfig":"13"},{"size":1446,"mtime":1610944078863,"results":"22","hashOfConfig":"13"},{"size":430,"mtime":1610914588753,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},"1fy8ibo",{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31","usedDeprecatedRules":"26"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34","usedDeprecatedRules":"26"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"26"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42","usedDeprecatedRules":"26"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"26"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48","usedDeprecatedRules":"26"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},"/Users/jesuscc9/Desktop/Reviewsic/client/src/index.js",[],["53","54"],"/Users/jesuscc9/Desktop/Reviewsic/client/src/App.js",[],"/Users/jesuscc9/Desktop/Reviewsic/client/src/pages/Home.js",["55","56","57","58","59","60"],"import React, { useState, useEffect, useRef } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { Redirect } from 'react-router-dom'\n// @ts-ignore\nimport \"../assets/animate.css\";\nimport \"react-spotify-auth/dist/index.css\";\nimport Parallax from \"parallax-js\";\nimport Stars from \"../assets/img/star.svg\";\nimport Moonlight from \"../assets/img/moonlight.png\";\nimport Clairo from \"../assets/img/clairo.png\";\nimport Slash from \"../assets/img/slash.png\";\nimport StarBackground from \"../assets/img/stars-back.png\";\nimport Axios from \"axios\";\nimport Cookies from \"js-cookie\";\n\nimport { SpotifyAuth, Scopes } from \"react-spotify-auth\";\nimport { SpotifyApiContext } from \"react-spotify-api\";\n\nimport \"./styles/Home.css\";\n\nconst Home = () => {\n  \n  const [token, setToken] = useState(\"\")\n\n  const sceneEl = useRef(null);\n\n  const elements = {\n    objects: document.getElementsByName(\"element\"),\n    on: function () {\n      this.objects.forEach((el) => {\n        el.style.opacity = \"1\";\n      });\n\n      const stars = document.getElementById(\"stars\");\n      stars.classList.add(\"star-shadow\");\n      stars.style.opacity = \"1\";\n    },\n    off: function () {\n      this.objects.forEach((el) => {\n        el.style.opacity = \"0.7\";\n      });\n\n      const stars = document.getElementById(\"stars\");\n      stars.classList.remove(\"star-shadow\");\n      stars.style.opacity = \"0.2\";\n    },\n  };\n\n  useEffect(() => {\n    const parallaxInstance = new Parallax(sceneEl.current, {\n      relativeInput: true,\n    });\n\n    parallaxInstance.enable();\n\n    const header = document.getElementById(\"header\")\n    setTimeout(() => {\n      header.style.display = \"block\";\n      header.classList.add(\"animate__fadeIn\")\n    }, 1500);\n\n    setToken(Cookies.get(\"spotifyAuthToken\"))\n\n    return () => parallaxInstance.disable()\n  }, []);\n\n  const handleClick = (e) => {\n    elements.on();\n    e.preventDefault();\n    const header = document.getElementById(\"header\");\n\n    header.style.display = \"block\";\n    header.classList.remove(\"animate__fadeIn\");\n    header.classList.add(\"animate__fadeOut\");\n\n    setTimeout(() => {\n      const login = document.getElementById(\"login-form\");\n      login.style.display = \"flex\";\n      elements.on();\n    }, 500);\n  };\n\n  const onMouseEnter = (e) => {\n    e.preventDefault();\n    elements.on();\n  }\n\n  \n  const onMouseLeave = (e) => {\n    e.preventDefault();\n    elements.off();\n  };\n\n  console.log('token')\n  console.log(token)\n\n  return (\n    <React.Fragment>\n      <div className=\"header animate__animated\" id=\"header\">\n        <button\n          className=\"try-button\"\n          id=\"try-button\"\n          onMouseEnter={onMouseEnter}\n          onMouseLeave={onMouseLeave}\n          onClick={handleClick}\n        >\n          Try it now!\n        </button>\n        <h1 className=\"title\">Reviewsic</h1>\n      </div>\n\n      <form\n        className=\"login-form animate__animated animate__fadeIn\"\n        id=\"login-form\"\n        onMouseEnter={onMouseEnter} onMouseLeave={onMouseLeave}\n      >\n        {token ? (\n          <div>\n            <SpotifyApiContext.Provider value={token}>\n              <Redirect to=\"/home\"></Redirect>\n            </SpotifyApiContext.Provider>\n          </div>\n        ) : (\n          <SpotifyAuth\n            className=\"spotify-auth\"\n            redirectUri=\"http://localhost:3000/\"\n            clientID=\"9751c1f85b2a4684a8cc0a02f6942b91\"\n            scopes={[Scopes.userReadPrivate, \"user-read-email\"]} // either styles will work\n          />\n        )}\n      </form>\n\n      <Link to=\"/home\" id=\"link\"></Link>\n\n      <div id=\"container\">\n        <div id=\"scene\" ref={sceneEl} data-scalar-x=\"10\" data-scalar-y=\"10\">\n          <div data-depth=\"0.2\">\n            <img src={Stars} className=\"stars\" />\n          </div>\n\n          <div data-depth=\"0.1\">\n            <img src={StarBackground} id=\"stars\" className=\"star\" />\n          </div>\n\n          <div data-depth=\"0.3\">\n            <img className=\"moonlight\" src={Moonlight} />\n          </div>\n\n          <div data-depth=\"1\" className=\"clairo-container\">\n            <img className=\"clairo\" name=\"element\" src={Clairo} />\n          </div>\n\n          <div data-depth=\"1\" className=\"slash-container\">\n            <img name=\"element\" className=\"slash\" src={Slash} />\n          </div>\n        </div>\n      </div>\n\n      <style>\n        {\n          \"\\\n        body{\\\n          background: rgb(7,33,64) !important;\\\n          background: linear-gradient(90deg, rgba(7,33,64,1) 0%, rgba(8,33,57,1) 100%);\\\n          overflow-y: hidden !important;\\\n          overflow-x: hidden !important;\\\n        }\\\n      \"\n        }\n      </style>\n    </React.Fragment>\n  );\n};\n\nexport default Home;\n","/Users/jesuscc9/Desktop/Reviewsic/client/src/pages/Register.js",["61","62","63","64","65","66"],"import React, { useState, useEffect } from \"react\";\nimport { Redirect } from \"react-router-dom\";\nimport useDeepCompareEffect from \"use-deep-compare-effect\";\nimport socketIOClient from \"socket.io-client\";\nimport Swal from \"sweetalert2\";\nimport withReactContent from \"sweetalert2-react-content\";\nimport Axios from \"axios\";\n\nimport Navbar from \"../components/Navbar\";\nimport Card from \"../components/Card\";\nimport RegisterForm from \"../components/RegisterForm\";\nimport UpdateForm from \"../components/UpdateForm\";\nimport Contacts from \"../components/Contacts\";\nimport Login from \"../components/Login\"\nimport Cookies from \"js-cookie\";\nimport { SpotifyApiContext } from \"react-spotify-api\";\n\nimport \"tailwindcss/tailwind.css\";\nimport \"../assets/main.css\";\nimport \"../pages/styles/Register.css\";\n\nconst ENDPOINT = \"http://127.0.0.1:3001\";\n\nconst Register = () => {\n  const MySwal = withReactContent(Swal);\n  const [song, setSong] = useState(\"\");\n  const [image, setImage] = useState([]);\n  const [review, setReview] = useState(\"\");\n  const [artist, setArtist] = useState(\"\");\n  const [spotifyURL, setSpotifyURL] = useState(\"\");\n  const [calification, setCalification] = useState(0);\n  const [songList, setSongList] = useState([]);\n  const [users, setUsers] = useState([]);\n  const [updateId, setUpdateId] = useState(0);\n  const [newImage, setNewImage] = useState(\"\");\n  const [user, setUser] = useState(\"\");\n  const [profileImage, setProfileImage] = useState(\"\");\n\n  const [token, setToken] = useState(\"\");\n\n  useEffect(async () => {\n\n    const socket = socketIOClient(ENDPOINT);\n\n\n    let res = await Axios.get(\"http://localhost:3001/api/get\");\n\n    setSongList(res.data);\n\n    socket.on(\"usernames\", (data) => {\n      console.log(\"SE RECIBEN USUAROPS\");\n      console.log(data);\n      setUsers(data);\n    });\n\n    socket.on(\"updateReviews\", (data) => {\n      console.log(\"SE ACTUALIZA LA DATA\");\n      setSongList(data);\n    });\n\n    res = await Axios.get(\"http://localhost:3001/api/getUser\");\n\n    setUser(res.data);\n\n    setToken(Cookies.get(\"spotifyAuthToken\"));\n  }, []);\n\n  const submitReview = () => {\n    const formData = new FormData();\n\n    formData.append(\"songName\", song);\n    formData.append(\"image\", image.name);\n    formData.append(\"file\", image);\n    formData.append(\"artist\", artist);\n    formData.append(\"spotifyUrl\", spotifyURL);\n    formData.append(\"songReview\", review);\n    formData.append(\"calification\", calification);\n\n    Axios.post(\"http://localhost:3001/api/insert\", formData).then((res) => {\n      const newSongList = songList;\n      newSongList.push(res.data);\n      console.log(\"Se inserta correctamente\");\n      console.log(newSongList);\n      setSongList(newSongList);\n      const socket = socketIOClient(ENDPOINT);\n      socket.emit(\"updateReviews\", newSongList);\n    });\n  };\n\n  const deleteReview = (id, image) => {\n    Swal.fire({\n      title: \"Are you sure?\",\n      text: \"You won't be able to revert this!\",\n      icon: \"warning\",\n      showCancelButton: true,\n      confirmButtonColor: \"#3085d6\",\n      cancelButtonColor: \"#d33\",\n      confirmButtonText: \"Yes, delete it!\",\n    }).then((result) => {\n      if (result.isConfirmed) {\n        const newSongList = songList.filter((e) => {\n          return e.id != id;\n        });\n\n        setSongList(newSongList);\n        const socket = socketIOClient(ENDPOINT);\n        socket.emit(\"updateReviews\", newSongList);\n\n        Axios.delete(\n          `http://localhost:3001/api/delete/${id}/${image}`\n        ).then((data) => {});\n        Swal.fire(\"Deleted!\", \"Your review has been deleted.\", \"success\");\n      }\n    });\n  };\n\n  const updateReview = () => {\n    Axios.put(`http://localhost:3001/api/update/${updateId}`, {\n      image: newImage,\n      songName: song,\n      artist: artist,\n      songReview: review,\n      spotifyUrl: spotifyURL,\n      calification: calification,\n    }).then((res) => {\n      let index = 0;\n\n      for (let i = 0; i < songList.length; i++) {\n        if (songList[i].id == updateId) {\n          index = i;\n          break;\n        }\n      }\n\n      const newSongList = songList;\n      res.data.author = songList[index].author;\n      newSongList[index] = res.data;\n      setSongList(newSongList);\n      const socket = socketIOClient(ENDPOINT);\n      socket.emit(\"updateReviews\", newSongList);\n    });\n  };\n\n  const alert = () => {\n    MySwal.fire({\n      html: (\n        <RegisterForm\n          onSongChange={(e) => {\n            setSong(e);\n          }}\n          selectImage={(e) => {\n            setImage(e);\n          }}\n          onArtistChange={(e) => {\n            setArtist(e);\n          }}\n          onCommentChange={(e) => {\n            setReview(e);\n          }}\n          onSpotifyUrlChange={(e) => {\n            setSpotifyURL(e);\n          }}\n          ratingChanged={(e) => {\n            setCalification(e);\n          }}\n          onSubmit={(e) => {\n            document.getElementById(\"button\").click();\n            MySwal.close();\n          }}\n        />\n      ),\n\n      showConfirmButton: false,\n    }).then(() => {});\n  };\n\n  const alertUpdateForm = (data) => {\n    MySwal.fire({\n      html: (\n        <UpdateForm\n          data={data}\n          setSong={(e) => {\n            setSong(e);\n          }}\n          setArtist={(e) => {\n            setArtist(e);\n          }}\n          setUpdateId={(e) => {\n            setUpdateId(e);\n          }}\n          setNewImage={(e) => {\n            setNewImage(e);\n          }}\n          onCommentChange={(e) => {\n            setReview(e);\n          }}\n          onSpotifyUrlChange={(e) => {\n            setSpotifyURL(e);\n          }}\n          ratingChanged={(e) => {\n            setCalification(e);\n          }}\n          onSubmit={(e) => {\n            document.getElementById(\"update-button\").click();\n            MySwal.close();\n          }}\n        />\n      ),\n\n      showConfirmButton: false,\n    });\n  };\n\n  const fetchSpotifyData = async() => {\n    const config = {\n      headers: {\n        'Authorization': 'Bearer ' + token\n     }\n    }\n\n    let spotifyData = await Axios.get('https://api.spotify.com/v1/me', config)\n\n    console.log(spotifyData)\n\n    const nickname = spotifyData.data.display_name\n    if((spotifyData.data.images).length > 0){\n      setProfileImage(spotifyData.data.images[0].url)\n    }else{\n      setProfileImage('')\n    }\n\n    const user = {\n      nickname: spotifyData.data.display_name,\n      followers: spotifyData.data.followers.total,\n      url: spotifyData.data.href,\n      type: spotifyData.data.product,\n      image: spotifyData.data.images[0].url,\n    }\n\n    Axios.post(`http://localhost:3001/api/newUser`, user).then((res) => {\n      console.log('JEJEJEJEJE')\n      console.log(res)\n    })\n  }\n\n  //if(!token) return <Redirect to=\"/\"></Redirect>\n\n  return (\n    <React.Fragment>\n      <Navbar\n        onAddClick={() => {\n          alert();\n        }}\n        profileImage={profileImage}\n        token={token}\n      ></Navbar>\n      <button onClick={submitReview} id=\"button\"></button>\n      <button onClick={updateReview} id=\"update-button\"></button>\n\n      {token ? (\n      <SpotifyApiContext.Provider value={token}>\n        {(() => {fetchSpotifyData()})()}\n      <div className=\"main-container\">\n        <div className=\"card-container\">\n          {songList.length ? (\n            songList.map((item) => {\n              return (\n                <Card\n                  props={item}\n                  user={user}\n                  key={item.id}\n                  update={() => {\n                    alertUpdateForm(item);\n                  }}\n                  delete={(e) => {\n                    deleteReview(e.id, e.image);\n                  }}\n                />\n              );\n            })\n          ) : (\n            <div>Not reviews registered yet.</div>\n          )}\n        </div>\n        <div className=\"contact-container\">\n          <Contacts users={users} />\n        </div>\n      </div>\n    </SpotifyApiContext.Provider>\n      ) : (\n        <Login></Login>\n      )}\n    </React.Fragment>\n  );\n};\n\nexport default Register;\n","/Users/jesuscc9/Desktop/Reviewsic/client/src/pages/NotFound.js",[],"/Users/jesuscc9/Desktop/Reviewsic/client/src/components/RegisterForm.js",["67","68"],"import React from 'react';\nimport \"tailwindcss/tailwind.css\";\nimport '../components/styles/RegisterForm.css';\nimport ReactStars from \"react-rating-stars-component\";\n\nconst RegisterForm = (props) =>{\n\n  const stars = {\n    size: 50,\n    value: 0,\n    isHalf: true,\n  }\n\n  const song = React.useRef(null);\n  const songAlert = React.useRef(null);\n  const image = React.useRef(null);\n  const imageAlert = React.useRef(null);\n  const artist = React.useRef(null);\n  const artistAlert = React.useRef(null);\n  const review = React.useRef(null);\n  const reviewAlert = React.useRef(null);\n  const spotifyURL = React.useRef(null);\n  const spotifyURLAlert = React.useRef(null);\n\n  const validateUrl = (spotifyUrl) =>{\n\n    const url = document.createElement('a');\n    url.href = spotifyUrl;\n\n    if(url.protocol != 'https:'){\n      console.log('es falso')\n      return false\n      \n    }\n    \n    if(url.hostname != 'open.spotify.com'){\n      console.log('es falso')\n      return false\n    }\n    \n    if(!(url.pathname).includes('/track/')){\n      console.log('es falso')\n      return false\n    }\n  \n    return true;\n    \n  }\n\n  function validation(){\n    if((song.current.value).length <= 1){\n      songAlert.current.style.opacity = '1';\n      song.current.classList.add('wrong-input');\n      return false;\n    }else{\n      songAlert.current.style.opacity = '0';\n      song.current.classList.remove('wrong-input');\n    }\n\n    if((image.current.value).length <= 0){\n      imageAlert.current.style.opacity = '1';\n      image.current.classList.add('wrong-input');\n      return false;\n    }else{\n      imageAlert.current.style.opacity = '0';\n      image.current.classList.remove('wrong-input');\n    }\n\n    if((artist.current.value).length <= 0){\n      artistAlert.current.style.opacity = '1';\n      artist.current.classList.add('wrong-input');\n      return false;\n    }else{\n      artistAlert.current.style.opacity = '0';\n      artist.current.classList.remove('wrong-input');\n    }\n\n    if((review.current.value).length <= 0){\n      reviewAlert.current.style.opacity = '1';\n      review.current.classList.add('wrong-input');\n      reviewAlert.current.textContent = 'Please fill out this field.';\n      return false;\n    }else{\n      review.current.classList.remove('wrong-input');\n      reviewAlert.current.style.opacity = '0';\n    }\n\n    if((review.current.value).length <= 10){\n      reviewAlert.current.style.opacity = '1';\n      reviewAlert.current.textContent = 'Please, make a longer comment!';\n      review.current.classList.add('wrong-input');\n      return false;\n    }else{\n      review.current.classList.remove('wrong-input');\n      reviewAlert.current.style.opacity = '0';\n    }\n\n    if((review.current.value).length >= 85){\n      reviewAlert.current.textContent = 'Please, make a smaller comment!';\n      reviewAlert.current.style.opacity = '1';\n      review.current.classList.add('wrong-input');\n      return false;\n    }else{\n      reviewAlert.current.style.opacity = '0';\n      review.current.classList.remove('wrong-input');\n    }\n\n    if(!validateUrl(spotifyURL.current.value)){\n      spotifyURLAlert.current.textContent = 'Please, enter a valid URL!'\n      spotifyURLAlert.current.style.opacity = '1'\n      spotifyURL.current.classList.add('wrong-input')\n      return false\n    }else{\n      spotifyURLAlert.current.style.opacity = '0'\n      spotifyURL.current.classList.remove('wrong-input')\n    }\n\n    return true;\n  }\n\n  return(\n    <React.Fragment>\n      <form onSubmit={(e) => {\n        e.preventDefault()\n        if(validation()){\n          props.onSubmit()\n        }\n      }} className=\"register-form\">\n\n        <p className=\"input-label\">Song: </p>\n\n        <input type=\"text\" className=\"swal2-input\" placeholder=\"Name of the song...\" onChange={(e) => {props.onSongChange(e.target.value);\n        }} ref={song}/>\n\n        <p className=\"alert-label\" ref={songAlert}>Please fill out this field.</p>\n\n        <p className=\"input-label\">Image: </p>\n\n        <input type=\"file\" accept=\".png, .jpg, .jpeg\" aria-label=\"Upload your profile picture\" className=\"swal2-file\" placeholder=\"\" style={{display: 'flex'\n         }} onChange={(e) => {\n           \n           props.selectImage(e.target.files[0]);\n          }} ref={image}/> \n\n          \n        <p className=\"alert-label\" ref={imageAlert}>Please select an image.</p>\n\n        <p className=\"input-label\">Artist: </p>\n\n        <input type=\"text\" className=\"swal2-input\" placeholder=\"Author of the song...\" onChange={(e)=> {\n          props.onArtistChange(e.target.value);\n        }} ref={artist}/>\n\n        <p className=\"alert-label\" ref={artistAlert}>Please fill out this field.</p>\n\n        <p className=\"input-label\">Commentary: </p>\n\n        <input type=\"text\" className=\"swal2-input\" placeholder=\"A little review...\" onChange={(e)=> {\n          props.onCommentChange(e.target.value);\n        }} ref={review}/>\n\n        \n        <p className=\"alert-label\" ref={reviewAlert}>Please fill out this field.</p>\n\n        <p className=\"input-label\">Spotify URL: </p>\n\n        <input type=\"text\" className=\"swal2-input\" placeholder=\"Spotify link of the song...\" onChange={(e)=> {\n          props.onSpotifyUrlChange(e.target.value);\n        }} ref={spotifyURL}/>\n\n\n        <p className=\"alert-label\" ref={spotifyURLAlert}>Please fill out this field.</p>\n\n        <p className=\"input-label\">Rating: </p>\n\n        <ReactStars {...stars} className=\"stars-calification\" onChange={(e) => {\n          props.ratingChanged(e)\n        }}/>\n\n        <button type=\"submit\" className=\"submit-button\">UPLOAD</button>\n\n      </form>\n    </React.Fragment>\n  )\n}\n\nexport default RegisterForm;","/Users/jesuscc9/Desktop/Reviewsic/client/src/components/Navbar.js",["69","70","71"],"import React from \"react\";\nimport \"tailwindcss/tailwind.css\";\nimport Logo from \"../assets/img/music.png\";\nimport \"../components/styles/Navbar.css\";\nimport { faPlus } from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\n\nconst navbar = (props) => {\n  return (\n    <React.Fragment>\n      <nav className=\"bg-gray-800 \">\n        <div className=\" px-2 sm:px-6 lg:px-8\">\n          <div className=\"relative flex items-center justify-between h-16 w-100\">\n            <div className=\"flex sm:items-stretch sm:justify-start\">\n              <div className=\"flex-shrink-0 flex items-center\">\n                <img\n                  className=\"lg:block h-8 w-auto\"\n                  src={Logo}\n                  alt=\"Workflow\"\n                />\n                <h2 className=\"logo-title\">Reviewsic</h2>\n              </div>\n              <div className=\"hidden sm:block sm:ml-6\">\n                <div className=\"flex space-x-4\">\n                  <a\n                    href=\"#\"\n                    className=\"bg-gray-900 text-white px-3 py-2 rounded-md text-sm font-medium\"\n                  >\n                    Home\n                  </a>\n                </div>\n              </div>\n            </div>\n            <div className=\"absolute inset-y-0 right-0 flex items-center pr-2 sm:static sm:inset-auto sm:ml-6 sm:pr-0 profile\">\n              <div className=\"ml-3 relative\">\n                <div className=\"options-container\">\n                  {props.token ? (\n                    <React.Fragment>\n                      <button onClick={props.onAddClick} className=\"add-button\">\n                        <FontAwesomeIcon icon={faPlus} />\n                        <p className=\"add-text\">ADD</p>\n                      </button>\n                      <img\n                        className=\"profile-image\"\n                        src={props.profileImage}\n                        alt=\"\"\n                      />\n                    </React.Fragment>\n                  ) : (\n                    <React.Fragment></React.Fragment>\n                  )}\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n\n        <div className=\"hidden sm:hidden\">\n          <div className=\"px-2 pt-2 pb-3 space-y-1\">\n            <a\n              href=\"#\"\n              className=\"bg-gray-900 text-white block px-3 py-2 rounded-md text-base font-medium\"\n            >\n              Registro\n            </a>\n            <a\n              href=\"#\"\n              className=\"text-gray-300 hover:bg-gray-700 hover:text-white block px-3 py-2 rounded-md text-base font-medium\"\n            >\n              Contactos\n            </a>\n          </div>\n        </div>\n      </nav>\n    </React.Fragment>\n  );\n};\n\nexport default navbar;\n","/Users/jesuscc9/Desktop/Reviewsic/client/src/components/Card.js",["72","73","74","75","76"],"import React, { useState, useEffect, useRef } from \"react\";\nimport \"tailwindcss/tailwind.css\";\nimport \"../components/styles/Card.css\";\n\nimport ReactStars from \"react-rating-stars-component\";\n\nimport { faSpotify } from \"@fortawesome/fontawesome-free-brands\";\nimport { faPen, faTrash } from \"@fortawesome/free-solid-svg-icons\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\n\nconst Card = (data) => {\n  const props = data.props;\n  console.log(data.user)\n\n  var rating = {\n    size: 30,\n    value: props.calification,\n    edit: false,\n  };\n\n  const card_options = React.useRef(null);\n  const card = React.useRef(null);\n\n  const handleMouseOver = () => {\n    card_options.current.classList.add(\"card-options-visible\");\n  };\n\n  const handleMouseLeave = () => {\n    card_options.current.classList.remove(\"card-options-visible\");\n  };\n\n  return (\n    <React.Fragment>\n      <div className=\"card-custom\" onMouseOver={handleMouseOver} onMouseLeave={handleMouseLeave}>\n        <div className=\"card-header\" ref={card}>\n          <div className=\"image-container\">\n            <img alt=\"\" src={`/images/${props.image}`} className=\"song-img\" />\n          </div>\n        </div>\n        <div className=\"card-body\">\n          <h5 className=\"song-name\">{props.songName}</h5>\n          <h5 className=\"artist-name\">{props.artist}</h5>\n          {/*40 caracteres máximo*/}\n          <p className=\"comment\">{props.songReview}</p>\n        </div>\n        <div className=\"card-footer\">\n          <ReactStars {...rating} className=\"stars-calification\" />{\" \"}\n          <p className=\"autor\">By: {props.author}</p>\n          <div className=\"card-options\" ref={card_options}>\n            {data.user == props.author ? \n                (\n                  <React.Fragment>\n                    <div className=\"edit-option option-container\" onClick={() => { \n                        data.update();\n                      }}>\n                      <FontAwesomeIcon\n                        icon={faPen}\n                        className=\"faPen\"\n                      />\n                    </div>\n                    <div className=\"edit-option option-container\" onClick={(e) => {\n                        data.delete({ id: props.id, image: props.image });\n                      }}>\n                      <FontAwesomeIcon\n                        icon={faTrash}\n                        className=\"faTrash\"\n                      />\n                    </div>\n                  </React.Fragment>\n                ) : (\n                  <React.Fragment></React.Fragment>\n                )\n              }\n            <div className=\"edit-option option-container\">\n              <a href={props.spotifyUrl} target=\"_blank\">\n                <FontAwesomeIcon icon={faSpotify} className=\"faSpotify\" />\n              </a>\n            </div>\n          </div>\n        </div>\n      </div>\n    </React.Fragment>\n  );\n};\n\nexport default Card;\n","/Users/jesuscc9/Desktop/Reviewsic/client/src/components/UpdateForm.js",["77","78","79"],"import React,{ useEffect, useState } from 'react';\nimport \"tailwindcss/tailwind.css\";\nimport '../components/styles/UpdateForm.css';\nimport ReactStars from \"react-rating-stars-component\";\nimport { protocol } from 'socket.io-client';\n\nconst UpdateForm = (props) =>{\n\n  const data = props.data;\n  \n  const [reviewState, setReviewState] = useState(data.songReview)\n  const [spotifyUrlState, setSpotifyUrlState] = useState(data.spotifyUrl)\n  \n  useEffect(() => {\n    props.onCommentChange(reviewState)\n    props.onSpotifyUrlChange(spotifyUrlState)\n    props.setSong(data.songName)\n    props.setNewImage(data.image)\n    props.setArtist(data.artist)\n    props.setUpdateId(data.id)\n  })\n\n  const stars = {\n    size: 50,\n    value: data.calification,\n    isHalf: true,\n  }\n\n\n  const review = React.useRef(null);\n  const reviewAlert = React.useRef(null);\n  const spotifyURL = React.useRef(null);\n  const spotifyURLAlert = React.useRef(null);\n\n  const validateUrl = (spotifyUrl) =>{\n\n    const url = document.createElement('a');\n    url.href = spotifyUrl;\n\n    if(url.protocol != 'https:'){\n      console.log('es falso')\n      return false\n      \n    }\n    \n    if(url.hostname != 'open.spotify.com'){\n      console.log('es falso')\n      return false\n    }\n    \n    if(!(url.pathname).includes('/track/')){\n      console.log('es falso')\n      return false\n    }\n  \n    return true;\n    \n  }\n\n  function validation(){\n\n    if((review.current.value).length <= 0){\n      reviewAlert.current.style.opacity = '1';\n      review.current.classList.add('wrong-input');\n      reviewAlert.current.textContent = 'Please fill out this field.';\n      return false;\n    }else{\n      review.current.classList.remove('wrong-input');\n      reviewAlert.current.style.opacity = '0';\n    }\n\n    if((review.current.value).length <= 10){\n      reviewAlert.current.style.opacity = '1';\n      reviewAlert.current.textContent = 'Please, make a longer comment!';\n      review.current.classList.add('wrong-input');\n      return false;\n    }else{\n      review.current.classList.remove('wrong-input');\n      reviewAlert.current.style.opacity = '0';\n    }\n\n    if((review.current.value).length >= 85){\n      reviewAlert.current.textContent = 'Please, make a smaller comment!';\n      reviewAlert.current.style.opacity = '1';\n      review.current.classList.add('wrong-input');\n      return false;\n    }else{\n      reviewAlert.current.style.opacity = '0';\n      review.current.classList.remove('wrong-input');\n    }\n\n    if(!validateUrl(spotifyURL.current.value)){\n      spotifyURLAlert.current.textContent = 'Please, enter a valid URL!'\n      spotifyURLAlert.current.style.opacity = '1'\n      spotifyURL.current.classList.add('wrong-input')\n      return false\n    }else{\n      spotifyURLAlert.current.style.opacity = '0'\n      spotifyURL.current.classList.remove('wrong-input')\n    }\n\n    return true\n  }\n\n  return(\n    <React.Fragment>\n      <form onSubmit={(e) => {\n        e.preventDefault()\n        if(validation()){\n          props.onSubmit()\n        }\n      }} className=\"register-form\">\n\n        <p className=\"input-label\">Song: </p>\n\n        <input type=\"text\" className=\"swal2-input input-disabled\" placeholder=\"Name of the song...\" onChange={(e) => {props.onSongChange(e.target.value);\n        }} value={data.songName} disabled/>\n\n        <p className=\"alert-label\">Please fill out this field.</p>\n\n        <p className=\"input-label\">Artist: </p>\n\n        <input type=\"text\" className=\"swal2-input input-disabled\" placeholder=\"Author of the song...\" value={data.artist} disabled/>\n\n        <p className=\"alert-label\">Please fill out this field.</p>\n\n        <p className=\"input-label\">Commentary: </p>\n\n        <input type=\"text\" className=\"swal2-input\" value={reviewState} placeholder=\"A little review...\" onChange={(e)=> {\n          setReviewState(e.target.value)\n        }} ref={review}/>\n\n        \n        <p className=\"alert-label\" ref={reviewAlert}>Please fill out this field.</p>\n\n        <p className=\"input-label\">Spotify URL: </p>\n\n        <input type=\"text\" className=\"swal2-input\" value={spotifyUrlState} placeholder={data.spotifyUrl} onChange={(e)=> {\n          setSpotifyUrlState(e.target.value)\n        }} ref={spotifyURL}/>\n\n\n        <p className=\"alert-label\" ref={spotifyURLAlert}>Please fill out this field.</p>\n\n        <p className=\"input-label\">Rating: </p>\n\n        <ReactStars {...stars} className=\"stars-calification\" onChange={(e) => {\n          props.ratingChanged(e)\n        }}/>\n\n        <button type=\"submit\" className=\"submit-button\">UPLOAD</button>\n\n      </form>\n    </React.Fragment>\n  )\n}\n\nexport default UpdateForm;","/Users/jesuscc9/Desktop/Reviewsic/client/src/components/Contacts.js",["80","81"],"/Users/jesuscc9/Desktop/Reviewsic/client/src/components/Login.js",[],{"ruleId":"82","replacedBy":"83"},{"ruleId":"84","replacedBy":"85"},{"ruleId":"86","severity":1,"message":"87","line":13,"column":8,"nodeType":"88","messageId":"89","endLine":13,"endColumn":13},{"ruleId":"90","severity":1,"message":"91","line":138,"column":13,"nodeType":"92","endLine":138,"endColumn":50},{"ruleId":"90","severity":1,"message":"91","line":142,"column":13,"nodeType":"92","endLine":142,"endColumn":69},{"ruleId":"90","severity":1,"message":"91","line":146,"column":13,"nodeType":"92","endLine":146,"endColumn":58},{"ruleId":"90","severity":1,"message":"91","line":150,"column":13,"nodeType":"92","endLine":150,"endColumn":67},{"ruleId":"90","severity":1,"message":"91","line":154,"column":13,"nodeType":"92","endLine":154,"endColumn":65},{"ruleId":"86","severity":1,"message":"93","line":2,"column":10,"nodeType":"88","messageId":"89","endLine":2,"endColumn":18},{"ruleId":"86","severity":1,"message":"94","line":3,"column":8,"nodeType":"88","messageId":"89","endLine":3,"endColumn":28},{"ruleId":"95","severity":1,"message":"96","line":41,"column":13,"nodeType":"97","endLine":66,"endColumn":4},{"ruleId":"98","severity":1,"message":"99","line":102,"column":23,"nodeType":"100","messageId":"101","endLine":102,"endColumn":25},{"ruleId":"98","severity":1,"message":"102","line":129,"column":28,"nodeType":"100","messageId":"101","endLine":129,"endColumn":30},{"ruleId":"86","severity":1,"message":"103","line":225,"column":11,"nodeType":"88","messageId":"89","endLine":225,"endColumn":19},{"ruleId":"98","severity":1,"message":"99","line":30,"column":21,"nodeType":"100","messageId":"101","endLine":30,"endColumn":23},{"ruleId":"98","severity":1,"message":"99","line":36,"column":21,"nodeType":"100","messageId":"101","endLine":36,"endColumn":23},{"ruleId":"104","severity":1,"message":"105","line":25,"column":19,"nodeType":"92","endLine":28,"endColumn":20},{"ruleId":"104","severity":1,"message":"105","line":60,"column":13,"nodeType":"92","endLine":63,"endColumn":14},{"ruleId":"104","severity":1,"message":"105","line":66,"column":13,"nodeType":"92","endLine":69,"endColumn":14},{"ruleId":"86","severity":1,"message":"106","line":1,"column":17,"nodeType":"88","messageId":"89","endLine":1,"endColumn":25},{"ruleId":"86","severity":1,"message":"107","line":1,"column":27,"nodeType":"88","messageId":"89","endLine":1,"endColumn":36},{"ruleId":"86","severity":1,"message":"108","line":1,"column":38,"nodeType":"88","messageId":"89","endLine":1,"endColumn":44},{"ruleId":"98","severity":1,"message":"102","line":51,"column":24,"nodeType":"100","messageId":"101","endLine":51,"endColumn":26},{"ruleId":"109","severity":1,"message":"110","line":76,"column":42,"nodeType":"111","endLine":76,"endColumn":57},{"ruleId":"86","severity":1,"message":"112","line":5,"column":10,"nodeType":"88","messageId":"89","endLine":5,"endColumn":18},{"ruleId":"98","severity":1,"message":"99","line":40,"column":21,"nodeType":"100","messageId":"101","endLine":40,"endColumn":23},{"ruleId":"98","severity":1,"message":"99","line":46,"column":21,"nodeType":"100","messageId":"101","endLine":46,"endColumn":23},{"ruleId":"86","severity":1,"message":"108","line":1,"column":17,"nodeType":"88","messageId":"89","endLine":1,"endColumn":23},{"ruleId":"98","severity":1,"message":"102","line":29,"column":39,"nodeType":"100","messageId":"101","endLine":29,"endColumn":41},"no-native-reassign",["113"],"no-negated-in-lhs",["114"],"no-unused-vars","'Axios' is defined but never used.","Identifier","unusedVar","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'Redirect' is defined but never used.","'useDeepCompareEffect' is defined but never used.","react-hooks/exhaustive-deps","Effect callbacks are synchronous to prevent race conditions. Put the async function inside:\n\nuseEffect(() => {\n  async function fetchData() {\n    // You can await here\n    const response = await MyAPI.getData(someId);\n    // ...\n  }\n  fetchData();\n}, [someId]); // Or [] if effect doesn't need props or state\n\nLearn more about data fetching with Hooks: https://reactjs.org/link/hooks-data-fetching","ArrowFunctionExpression","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","Expected '===' and instead saw '=='.","'nickname' is assigned a value but never used.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","'useState' is defined but never used.","'useEffect' is defined but never used.","'useRef' is defined but never used.","react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener","JSXAttribute","'protocol' is defined but never used.","no-global-assign","no-unsafe-negation"]